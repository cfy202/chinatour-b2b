<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinatour.persistence.OrderMapper">
	<resultMap id="BaseResultMap" type="com.chinatour.entity.Order">
		<id column="OrderId" property="id" jdbcType="VARCHAR" />
		<result column="OrderNo" property="orderNo" jdbcType="VARCHAR" />
		<result column="OrderNoIn" property="orderNoIn" jdbcType="VARCHAR" />
		<result column="TotalPeople" property="totalPeople" jdbcType="INTEGER" />
		<result column="CommonTourFee" property="commonTourFee" jdbcType="DECIMAL" />
		<result column="Tax" property="tax" jdbcType="TINYINT" />
		<result column="State" property="state" jdbcType="INTEGER" />
		<result column="UserId" property="userId" jdbcType="VARCHAR" />
		<result column="TourTypeId" property="tourTypeId" jdbcType="VARCHAR" />
		<result column="TourCode" property="tourCode" jdbcType="VARCHAR" />
		<result column="TourId" property="tourId" jdbcType="VARCHAR" />
		<result column="CreateTime" property="createDate" jdbcType="TIMESTAMP" />
		<result column="PeerId" property="peerId" jdbcType="VARCHAR" />
		<result column="Contact" property="contact" jdbcType="VARCHAR" />
		<result column="OrderType" property="orderType" jdbcType="TINYINT" />
		<result column="OrderTourType" property="orderTourType" jdbcType="VARCHAR" />
		<result column="ArriveDate" property="arriveDate" jdbcType="DATE" />
		<result column="FlightPnr" property="flightPnr" jdbcType="VARCHAR" />
		<result column="NonGroupType" property="nonGroupType" jdbcType="VARCHAR" />
		<result column="PeerUserId" property="peerUserId" jdbcType="VARCHAR" />
		<result column="NoticeState" property="noticeState" jdbcType="INTEGER" />
		<result column="PayState" property="payState" jdbcType="TINYINT" />
		<result column="WarnState" property="warnState" jdbcType="TINYINT" />
		<result column="PeerState" property="peerState" jdbcType="TINYINT" />
		<result column="ReviewState" property="reviewState" jdbcType="TINYINT" />
		<result column="CostState" property="costState" jdbcType="TINYINT" />
		<result column="ModifyDate" property="modifyDate" jdbcType="TIMESTAMP" />
		<result column="OrdersTotalId" property="ordersTotalId" jdbcType="VARCHAR" />
		<result column="DeptId" property="deptId" jdbcType="VARCHAR" />
		<result column="UserName" property="userName" jdbcType="VARCHAR" />
		<result column="CheckTime" property="checkTime" jdbcType="DATE" />
		<result column="Brand" property="brand" jdbcType="VARCHAR" />
		<result column="IsSelfOrganize" property="isSelfOrganize" jdbcType="TINYINT" />
		<result column="Rate" property="rate" jdbcType="DECIMAL" />
		<result column="Flag" property="flag" jdbcType="INTEGER" />
		<result column="Planticket" property="planticket" jdbcType="TINYINT" />
		<result column="OtherInfo" property="otherInfo" jdbcType="VARCHAR" />
		<result column="Reference" property="reference" jdbcType="VARCHAR" />
		<result column="CheckOutDate" property="checkOutDate" jdbcType="DATE" />
		<result column="SendingDate" property="sendingDate" jdbcType="DATE" />
		<result column="PinSigningDate" property="pinSigningDate" jdbcType="DATE" />
		<result column="IsSelfOrganize" property="isSelfOrganize" jdbcType="INTEGER" />
		<result column="PeerUserFee" property="peerUserFee" jdbcType="DECIMAL" />
		<result column="REFNO" property="refNo" jdbcType="VARCHAR" />
		<result column="PeerUserRate" property="peerUserRate" jdbcType="DECIMAL" />
		<result column="PeerUserName" property="peerUserName" jdbcType="VARCHAR" />
		<result column="CusPrice" property="cusPrice" jdbcType="DECIMAL" />
		<result column="PostInfo" property="postInfo" jdbcType="VARCHAR" />
		<result column="itInfo" property="itInfo" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="BaseResultMapForAgency" type="com.chinatour.entity.Order">
		<id column="OrderId" property="id" jdbcType="VARCHAR" />
		<result column="OrderNo" property="orderNo" jdbcType="VARCHAR" />
		<result column="OrderNoIn" property="orderNoIn" jdbcType="VARCHAR" />
		<result column="TotalPeople" property="totalPeople" jdbcType="INTEGER" />
		<result column="CommonTourFee" property="commonTourFee" jdbcType="DECIMAL" />
		<result column="Tax" property="tax" jdbcType="TINYINT" />
		<result column="State" property="state" jdbcType="INTEGER" />
		<result column="UserId" property="userId" jdbcType="VARCHAR" />
		<result column="TourTypeId" property="tourTypeId" jdbcType="VARCHAR" />
		<result column="TourCode" property="tourCode" jdbcType="VARCHAR" />
		<result column="TourId" property="tourId" jdbcType="VARCHAR" />
		<result column="CreateTime" property="createDate" jdbcType="TIMESTAMP" />
		<result column="PeerId" property="peerId" jdbcType="VARCHAR" />
		<result column="Contact" property="contact" jdbcType="VARCHAR" />
		<result column="OrderType" property="orderType" jdbcType="TINYINT" />
		<result column="OrderTourType" property="orderTourType" jdbcType="VARCHAR" />
		<result column="ArriveDate" property="arriveDate" jdbcType="DATE" />
		<result column="FlightPnr" property="flightPnr" jdbcType="VARCHAR" />
		<result column="NonGroupType" property="nonGroupType" jdbcType="VARCHAR" />
		<result column="PeerUserId" property="peerUserId" jdbcType="VARCHAR" />
		<result column="NoticeState" property="noticeState" jdbcType="INTEGER" />
		<result column="PayState" property="payState" jdbcType="TINYINT" />
		<result column="WarnState" property="warnState" jdbcType="TINYINT" />
		<result column="PeerState" property="peerState" jdbcType="TINYINT" />
		<result column="ReviewState" property="reviewState" jdbcType="TINYINT" />
		<result column="CostState" property="costState" jdbcType="TINYINT" />
		<result column="ModifyDate" property="modifyDate" jdbcType="TIMESTAMP" />
		<result column="OrdersTotalId" property="ordersTotalId" jdbcType="VARCHAR" />
		<result column="DeptId" property="deptId" jdbcType="VARCHAR" />
		<result column="UserName" property="userName" jdbcType="VARCHAR" />
		<result column="CheckTime" property="checkTime" jdbcType="DATE" />
		<result column="Brand" property="brand" jdbcType="VARCHAR" />
		<result column="IsSelfOrganize" property="isSelfOrganize" jdbcType="TINYINT" />
		<result column="Rate" property="rate" jdbcType="DECIMAL" />
		<result column="Flag" property="flag" jdbcType="INTEGER" />
		<result column="Planticket" property="planticket" jdbcType="TINYINT" />
		<result column="OtherInfo" property="otherInfo" jdbcType="VARCHAR" />
		<result column="Reference" property="reference" jdbcType="VARCHAR" />
		<result column="CheckOutDate" property="checkOutDate" jdbcType="DATE" />
		<result column="SendingDate" property="sendingDate" jdbcType="DATE" />
		<result column="PinSigningDate" property="pinSigningDate" jdbcType="DATE" />
		<result column="IsSelfOrganize" property="isSelfOrganize" jdbcType="INTEGER" />
		<result column="PeerUserFee" property="peerUserFee" jdbcType="DECIMAL" />
		<result column="REFNO" property="refNo" jdbcType="VARCHAR" />
		<result column="PeerUserRate" property="peerUserRate" jdbcType="DECIMAL" />
		<result column="PeerUserName" property="peerUserName" jdbcType="VARCHAR" />
		<result column="CusPrice" property="cusPrice" jdbcType="DECIMAL" />
		<result column="PostInfo" property="postInfo" jdbcType="VARCHAR" />
		<result column="itInfo" property="itInfo" jdbcType="VARCHAR" />
		<association property="payCost" column="OrderId"
			select="com.chinatour.persistence.PayCostRecordsMapper.findSumPayOrCostByOrdersId" />
	</resultMap>

	<resultMap id="ResultMapForPayOrCost" type="com.chinatour.entity.Order">
		<id column="OrderId" property="id" jdbcType="VARCHAR" />
		<result column="OrderNo" property="orderNo" jdbcType="VARCHAR" />
		<result column="Brand" property="brand" jdbcType="VARCHAR" />
		<result column="payTotalSum" property="payTotalSum" jdbcType="DECIMAL" />
		<result column="costTotalSum" property="costTotalSum" jdbcType="DECIMAL" />
		<association property="priceExpression" column="tourTypeId"
			select="com.chinatour.persistence.TourTypeMapper.findPriceExpressionById" />
		<collection property="payCostRecords"
			select="com.chinatour.persistence.PayCostRecordsMapper.findByOrderId"
			ofType="com.chinatour.entity.PayCostRecords" javaType="java.util.List"
			column="orderId" />
	</resultMap>

	<resultMap id="tourOrderListVOResultMap" type="com.chinatour.vo.TourOrderListVO">
		<id column="OrderId" property="id" jdbcType="VARCHAR" />
		<result column="OrderNo" property="orderNo" jdbcType="VARCHAR" />
		<result column="OrderNoIn" property="orderNoIn" jdbcType="VARCHAR" />
		<result column="OrdersTotalId" property="ordersTotalId"
			jdbcType="VARCHAR" />
		<result column="TourId" property="tourId" jdbcType="VARCHAR" />
		<result column="TourCode" property="tourCode" jdbcType="VARCHAR" />
		<result column="UserId" property="userId" jdbcType="VARCHAR" />
		<result column="LineName" property="lineName" jdbcType="VARCHAR" />
		<result column="ScheduleLineCode" property="scheduleLineCode"
			jdbcType="VARCHAR" />
		<result column="ScheduleOfArriveTime" property="scheduleOfArriveTime"
			jdbcType="TIMESTAMP" />
		<result column="CreateDate" property="createDate" jdbcType="TIMESTAMP" />
		<result column="TotalPeople" property="totalPeople" jdbcType="INTEGER" />
		<result column="State" property="state" jdbcType="INTEGER" />
		<result column="SumFee" property="sumFee" jdbcType="DECIMAL" />
		<result column="PeerUserFee" property="peerUserFee" jdbcType="DECIMAL" />
		<result column="REFNO" property="refNo" jdbcType="VARCHAR" />
		<result column="PeerUserRate" property="peerUserRate" jdbcType="DECIMAL" />
		<result column="PeerUserName" property="peerUserName" jdbcType="VARCHAR" />
		<result column="CusPrice" property="cusPrice" jdbcType="DECIMAL" />
		<result column="PostInfo" property="postInfo" jdbcType="VARCHAR" />
		<result column="ItInfo" property="itInfo" jdbcType="VARCHAR" />
		<result column="Tax" property="tax" jdbcType="TINYINT" />
		<result column="PayState" property="payState" jdbcType="TINYINT" />
		<result column="Brand" property="brand" jdbcType="VARCHAR" />
		<result column="WarnState" property="warnState" jdbcType="TINYINT" />
		<result column="ReviewState" property="reviewState" jdbcType="TINYINT" />
		<result column="CostState" property="costState" jdbcType="TINYINT" />
		<result column="OrderType" property="orderType" jdbcType="TINYINT" />
		<result column="IsSelfOrganize" property="isSelfOrganize"
			jdbcType="TINYINT" />
		<result column="PerrName" property="perrName" jdbcType="VARCHAR" />
		<result column="Source" property="source" jdbcType="VARCHAR" />
		<association property="tourTypeName" column="tourTypeId"
			select="com.chinatour.persistence.TourTypeMapper.findNameById" />
		<association property="payCost" column="OrderId"
			select="com.chinatour.persistence.PayCostRecordsMapper.findSumPayOrCostByOrdersId" />
	</resultMap>

	<resultMap id="ResultCustomerForOrderMap" type="com.chinatour.entity.Order">
		<id column="OrderId" property="id" jdbcType="VARCHAR" />
		<result column="OrderNo" property="orderNo" jdbcType="VARCHAR" />
		<result column="OrderNoIn" property="orderNoIn" jdbcType="VARCHAR" />
		<result column="TotalPeople" property="totalPeople" jdbcType="INTEGER" />
		<result column="CommonTourFee" property="commonTourFee"
			jdbcType="DECIMAL" />
		<result column="PeerUserFee" property="peerUserFee" jdbcType="DECIMAL" />
		<result column="REFNO" property="refNo" jdbcType="VARCHAR" />
		<result column="PeerUserRate" property="peerUserRate" jdbcType="DECIMAL" />
		<result column="PeerUserName" property="peerUserName" jdbcType="VARCHAR" />
		<result column="Tax" property="tax" jdbcType="TINYINT" />
		<result column="State" property="state" jdbcType="INTEGER" />
		<result column="UserId" property="userId" jdbcType="VARCHAR" />
		<result column="TourTypeId" property="tourTypeId" jdbcType="VARCHAR" />
		<result column="TourCode" property="tourCode" jdbcType="VARCHAR" />
		<result column="TourId" property="tourId" jdbcType="VARCHAR" />
		<result column="CreateTime" property="createDate" jdbcType="TIMESTAMP" />
		<result column="PeerId" property="peerId" jdbcType="VARCHAR" />
		<result column="Contact" property="contact" jdbcType="VARCHAR" />
		<result column="OrderType" property="orderType" jdbcType="TINYINT" />
		<result column="OrderTourType" property="orderTourType"
			jdbcType="VARCHAR" />
		<result column="ArriveDate" property="arriveDate" jdbcType="DATE" />
		<result column="FlightPnr" property="flightPnr" jdbcType="VARCHAR" />
		<result column="NonGroupType" property="nonGroupType" jdbcType="VARCHAR" />
		<result column="PeerUserId" property="peerUserId" jdbcType="VARCHAR" />
		<result column="NoticeState" property="noticeState" jdbcType="INTEGER" />
		<result column="PayState" property="payState" jdbcType="TINYINT" />
		<result column="WarnState" property="warnState" jdbcType="TINYINT" />
		<result column="PeerState" property="peerState" jdbcType="TINYINT" />
		<result column="ReviewState" property="reviewState" jdbcType="TINYINT" />
		<result column="CostState" property="costState" jdbcType="TINYINT" />
		<result column="ModifyDate" property="modifyDate" jdbcType="TIMESTAMP" />
		<result column="CusPrice" property="cusPrice" jdbcType="DECIMAL" />
		<result column="PostInfo" property="postInfo" jdbcType="VARCHAR" />
		<result column="OrdersTotalId" property="ordersTotalId"
			jdbcType="VARCHAR" />
		<result column="DeptId" property="deptId" jdbcType="VARCHAR" />
		<result column="CheckTime" property="checkTime" jdbcType="DATE" />
		<result column="UserName" property="userName" jdbcType="VARCHAR" />
		<result column="IsSelfOrganize" property="isSelfOrganize"
			jdbcType="TINYINT" />
		<result column="Rate" property="rate" jdbcType="DECIMAL" />
		<result column="Planticket" property="planticket" jdbcType="TINYINT" />
		<result column="OtherInfo" property="otherInfo" jdbcType="VARCHAR" />
		<collection property="customerOrderRel"
			select="com.chinatour.persistence.CustomerOrderRelMapper.findCustomerFlightByOrderId"
			ofType="com.chinatour.entity.CustomerOrderRel" javaType="java.util.List"
			column="orderId" />
	</resultMap>

	<resultMap id="ResultDeptForOrderMap" type="com.chinatour.entity.Order">
		<id column="OrderId" property="id" jdbcType="VARCHAR" />
		<result column="OrderNo" property="orderNo" jdbcType="VARCHAR" />
		<result column="OrderNoIn" property="orderNoIn" jdbcType="VARCHAR" />
		<result column="UserId" property="userId" jdbcType="VARCHAR" />
		<result column="TourCode" property="tourCode" jdbcType="VARCHAR" />
		<result column="CreateTime" property="createDate" jdbcType="TIMESTAMP" />
		<result column="TourId" property="tourId" jdbcType="VARCHAR" />
		<result column="DeptId" property="deptId" jdbcType="VARCHAR" />
		<result column="OrderType" property="orderType" jdbcType="TINYINT" />
		<result column="State" property="state" jdbcType="INTEGER" />
		<result column="TotalPeople" property="totalPeople" jdbcType="INTEGER" />
		<result column="CommonTourFee" property="commonTourFee"
			jdbcType="DECIMAL" />
		<result column="PeerUserFee" property="peerUserFee" jdbcType="DECIMAL" />
		<result column="REFNO" property="refNo" jdbcType="VARCHAR" />
		<result column="PeerUserRate" property="peerUserRate" jdbcType="DECIMAL" />
		<result column="PeerUserName" property="peerUserName" jdbcType="VARCHAR" />
		<result column="CusPrice" property="cusPrice" jdbcType="DECIMAL" />
		<result column="PostInfo" property="postInfo" jdbcType="VARCHAR" />
		<result column="UserName" property="userName" jdbcType="VARCHAR" />
		<result column="Source" property="source" jdbcType="VARCHAR" />
		<result column="IsSelfOrganize" property="isSelfOrganize"
			jdbcType="TINYINT" />
		<result column="Rate" property="rate" jdbcType="DECIMAL" />
		<association property="deptName" column="deptId"
			select="com.chinatour.persistence.DeptMapper.findNameById" />
		<association property="priceExpression" column="tourTypeId"
			select="com.chinatour.persistence.TourTypeMapper.findPriceExpressionById" />
	</resultMap>

	<resultMap id="ResultForCustomerMap" type="com.chinatour.entity.Order"
		extends="BaseResultMap">
		<id column="CustomerOrderRelId" property="customerOrderRelId"
			jdbcType="VARCHAR" />
		<result column="TicketType" property="ticketType" jdbcType="VARCHAR" />
		<association property="customer" column="customerId"
			select="com.chinatour.persistence.CustomerMapper.findById" />
		<collection property="customerFlightList"
			select="com.chinatour.persistence.CustomerFlightMapper.findByCustomerOrderRelId"
			ofType="com.chinatour.entity.CustomerFlight" javaType="java.util.List"
			column="CustomerOrderRelId" />
	</resultMap>

	<resultMap id="ResultMapForSumPayOrCost" type="com.chinatour.entity.Order"
		extends="BaseResultMap">
		<association property="payCost" column="OrderId"
			select="com.chinatour.persistence.PayCostRecordsMapper.findSumPayOrCostByOrdersId" />
		<association property="priceExpression" column="tourTypeId"
			select="com.chinatour.persistence.TourTypeMapper.findPriceExpressionById" />
	</resultMap>

	<resultMap id="ResultForTypeNameMap" type="com.chinatour.entity.Order"
		extends="BaseResultMap">
		<association property="tourTypeName" column="tourTypeId"
			select="com.chinatour.persistence.TourTypeMapper.findNameById" />
	</resultMap>

	<sql id="Base_Column_List">
		OrderId, OrderNo, OrderNoIn, TotalPeople, CommonTourFee,
		Tax, State, UserId,
		TourTypeId, Contact,
		TourCode, TourId, CreateTime,
		PeerId,CusPrice,PostInfo,ItInfo,
		OrderType, OrderTourType, ArriveDate, FlightPnr,
		NonGroupType,
		PeerUserId,PeerUserFee,REFNO,peerUserName,peerUserRate,
		NoticeState, Brand, IsSelfOrganize, Rate,
		PayState, WarnState,
		PeerState, ReviewState, CostState,
		ModifyDate,OrdersTotalId,DeptId,CheckTime,UserName,Planticket,OtherInfo,Reference,CheckOutDate,SendingDate,PinSigningDate
	</sql>
	<select id="orderListWeb" resultType="com.chinatour.entity.Order"
		parameterType="com.chinatour.entity.Order">
		SELECT
		o.OrderId, o.OrderNo, o.OrderNoIn, o.TotalPeople, o.CommonTourFee,
		o.Tax, o.State, o.UserId,
		o.TourTypeId, o.Contact,
		o.TourCode, o.TourId, o.CreateTime,
		o.PeerId,
		o.OrderType, o.OrderTourType, o.FlightPnr,
		o.NonGroupType,
		o.PeerUserId,
		o.PeerUserFee,
		o.NoticeState, o.Brand, o.IsSelfOrganize, o.Rate,
		o.PayState, o.WarnState, o.PeerState, o.ReviewState, o.CostState,
		o.ModifyDate,o.OrdersTotalId,o.DeptId,o.CheckTime,o.UserName,
		t.ScheduleOfArriveTime as ArriveDate,
		t.LineName
		FROM
		orders o,
		tour_info_for_order t
		<where>
			o.orderId=t.orderId
			AND o.State!=5 AND o.State!=6
			<if test="record.deptId != null">
				AND o.DeptId = #{record.deptId,jdbcType=VARCHAR}
			</if>
			<if test="record.tourTypeId != null">
				AND o.TourTypeId = #{record.tourTypeId,jdbcType=VARCHAR}
			</if>
			<if test="record.groupLineId != null">
				AND t.GroupLineId = #{record.groupLineId,jdbcType=VARCHAR}
			</if>
			<if test="record.beginningDate != null">
				AND DATE_FORMAT(t.ScheduleOfArriveTime,"%Y-%m") <![CDATA[>=]]>
				#{record.beginningDate,jdbcType=TIMESTAMP}
			</if>
			<if test="record.endingDate != null">
				AND t.ScheduleOfArriveTime <![CDATA[<=]]>
				#{record.endingDate,jdbcType=TIMESTAMP}
			</if>
		</where>
	</select>

	<sql id="findForPage_sql">
		SELECT ord.*
		<if test="record.isSelfOrganize != null and record.isSelfOrganize == 0">
			,g.source 
		</if>
		FROM (
		SELECT
		<include refid="Base_Column_List" />
		FROM orders
		<where>
			<if test="record.id != null">
				AND OrderId = #{record.id,jdbcType=VARCHAR}
			</if>
			<if test="record.orderNo != null">
				AND OrderNo LIKE CONCAT('%','${record.orderNo}','%')
			</if>
			<if test="record.refNo != null">
				AND REFNO LIKE CONCAT('%','${record.refNo}','%')
			</if>
			<if test="record.orderNoIn != null">
				<choose>
					<when test="record.orderNoIn=='other'">
						AND OrderNoIn !=""
					</when>
					<otherwise>
						AND OrderNoIn=#{record.orderNoIn,jdbcType=VARCHAR}
					</otherwise>
				</choose>
			</if>
			<if test="record.totalPeople != null">
				AND TotalPeople = #{record.totalPeople,jdbcType=INTEGER}
			</if>
			<if test="record.commonTourFee != null">
				AND CommonTourFee =#{record.commonTourFee,jdbcType=DECIMAL}
			</if>
			<if test="record.tax!=null and record.tax!=4">
				AND Tax=#{record.tax}
			</if>
			<if test="record.tax==4">
				AND (Tax=2 or Tax=4)
			</if>
			<if test="record.state != null and record.state != 5">
				AND State = #{record.state,jdbcType=VARCHAR}
			</if>
			<if test="record.state == 5">
				AND State !=5
				AND State !=6
			</if>
			<if test="record.userId != null">
				AND UserId = #{record.userId,jdbcType=VARCHAR}
			</if>
			<if test="record.tourTypeId != null">
				AND TourTypeId = #{record.tourTypeId,jdbcType=TINYINT}
			</if>
			<if test="record.tourCode != null">
				AND TourCode LIKE CONCAT('%','${record.tourCode}','%')
			</if>
			<if test="record.tourId != null">
				AND TourId = #{record.tourId,jdbcType=VARCHAR}
			</if>
			<if test="record.contact != null">
				AND Contact = #{record.contact,jdbcType=VARCHAR}
			</if>
			<if test="record.orderType != null and record.orderType != 5">
				AND OrderType = #{record.orderType,jdbcType=TINYINT}
			</if>
			<if test="record.orderType == 5">
				AND OrderType !=5
				AND Brand !="wenjing"
			</if>
			<if test="record.orderTourType != null">
				AND OrderTourType = #{record.orderTourType,jdbcType=VARCHAR}
			</if>
			<if test="record.arriveDate != null">
				AND ArriveDate = #{record.arriveDate,jdbcType=DATE}
			</if>
			<if test="record.flightPnr != null">
				AND FlightPnr LIKE CONCAT('%','${record.flightPnr}','%')
			</if>
			<if test="record.nonGroupType != null">
				AND NonGroupType =
				#{record.nonGroupType,jdbcType=VARCHAR}
			</if>
			<if test="record.sorceId == 1">
				AND PeerUserId = ""
			</if>
			<if test="record.sorceId == 2">
				AND PeerUserId !=""
			</if>
			<if test="record.peerUserName != null">
				AND PeerId = #{record.peerUserName,jdbcType=VARCHAR}
			</if>
			<if test="record.peerUserId != null">
				AND PeerUserId = #{record.peerUserId,jdbcType=VARCHAR}
			</if>
			<if test="record.noticeState != null">
				AND NoticeState = #{record.noticeState,jdbcType=INTEGER}
			</if>
			<if test="record.payState != null">
				AND PayState = #{record.payState,jdbcType=TINYINT}
			</if>
			<if test="record.warnState != null">
				AND WarnState = #{record.warnState,jdbcType=TINYINT}
			</if>
			<if test="record.peerState != null">
				AND PeerState = #{record.peerState,jdbcType=TINYINT}
			</if>
			<if test="record.reviewState != null">
				AND ReviewState = #{record.reviewState,jdbcType=TINYINT}
			</if>
			<if test="record.costState != null">
				<choose>
					<when test="record.costState==10">
						AND CostState != 0
					</when>
					<otherwise>
						AND CostState = #{record.costState,jdbcType=TINYINT}
					</otherwise>
				</choose>
			</if>
			<if test="record.modifyDate != null">
				AND ModifyDate = #{record.modifyDate,jdbcType=TIMESTAMP}
			</if>
			<if test="record.ordersTotalId != null">
				AND OrdersTotalId = #{record.ordersTotalId,jdbcType=VARCHAR}
			</if>
			<if test="record.deptId != null">
				AND DeptId = #{record.deptId,jdbcType=VARCHAR}
			</if>
			<if test="record.brand != null">
				AND Brand LIKE CONCAT('%','${record.brand }','%')
			</if>
			<if test="record.userName != null">
				AND UserName = #{record.userName,jdbcType=VARCHAR}
			</if>
			<if
				test="record.isSelfOrganize != null and record.isSelfOrganize != 3 and record.isSelfOrganize != 4">
				AND IsSelfOrganize = #{record.isSelfOrganize,jdbcType=TINYINT}
			</if>
			<if test="record.isSelfOrganize == 3">
				AND OrderTourType !='inbound_sys'
				AND IsSelfOrganize=0
			</if>
			<if test="record.isSelfOrganize == 4">
				AND OrderTourType ='inbound_sys'
			</if>
			<if test="record.rate != null">
				AND Rate = #{record.rate,jdbcType=DECIMAL}
			</if>
			<!-- <if test="record.beginningDate != null"> AND CreateTime <![CDATA[>=]]> 
				#{record.beginningDate,jdbcType=TIMESTAMP} </if> <if test="record.endingDate 
				!= null"> AND CreateTime <![CDATA[<=]]> #{record.endingDate,jdbcType=TIMESTAMP} 
				</if> -->
			<if test="record.bookingBeginningDate != null">
				AND CreateTime <![CDATA[>=]]>
				#{record.bookingBeginningDate,jdbcType=TIMESTAMP}
			</if>
			<if test="record.bookingEndingDate != null">
				AND DATE_FORMAT(CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
				#{record.bookingEndingDate,jdbcType=TIMESTAMP}
			</if>
			<if test="record.planticket != null">
				AND Planticket = #{record.planticket,jdbcType=TINYINT}
			</if>
			<if test="record.Reference != null">
				AND Reference = #{record.reference,jdbcType=VARCHAR}
			</if>
			<if test="record.otherInfo != null">
				AND OtherInfo = #{record.otherInfo,jdbcType=VARCHAR}
			</if>
			<if test="record.settlementDateBeg != null">
				AND CheckTime <![CDATA[>=]]>
				#{record.settlementDateBeg,jdbcType=TIMESTAMP}
			</if>
			<if test="record.settlementDateEnd != null">
				AND CheckTime <![CDATA[<=]]>
				#{record.settlementDateEnd,jdbcType=TIMESTAMP}
			</if>
			<if test="record.wr =='Retail'">
				AND PeerId =''
			</if>
			<if test="record.wr =='WholeSale'">
				AND PeerId !=''
			</if>
		</where>
		ORDER BY OrderNo DESC
		) ord 
		JOIN tour_info_for_order t ON ord.OrderId = t.OrderId 
		JOIN dept d ON ord.deptId=d.deptId left 
		JOIN vender v ON ord.peerId=v.venderId
		<if
				test="record.isSelfOrganize != null and record.isSelfOrganize == 0">
			JOIN groupline g ON g.GroupLineId=t.GroupLineId
		</if>
		<where>
			<if test="record.peerId != null">
				AND v.Name LIKE CONCAT('%','${record.peerId}','%')
			</if>
			<if test="record.beginningDate != null">
				AND t.ScheduleOfArriveTime <![CDATA[>=]]>
				#{record.beginningDate,jdbcType=TIMESTAMP}
			</if>
			<if test="record.endingDate != null">
				AND t.ScheduleOfArriveTime <![CDATA[<=]]>
				#{record.endingDate,jdbcType=TIMESTAMP}
			</if>
			<if test="record.deptName != null">
				AND d.DeptName LIKE CONCAT('%','${record.deptName}','%')
			</if>
			<if test="record.source != null and record.isSelfOrganize == 0">
				AND g.Source LIKE CONCAT('%','${record.source}','%')
			</if>
		</where>
	</sql>

	<sql id="findForTourPage_sql">
		SELECT
		o.OrderId, o.OrderNo, o.OrderNoIn, o.TotalPeople, o.CommonTourFee,
		o.Tax,
		o.State, o.UserId,
		o.TourTypeId, o.Contact,
		o.TourCode, o.TourId,
		o.CreateTime,
		o.PeerId,
		o.PeerUserFee,
		o.OrderType, o.OrderTourType,
		o.ArriveDate, 
		o.FlightPnr,
		o.NonGroupType,
		o.PeerUserId,
		o.NoticeState,
		tor.ScheduleOfArriveTime AS arriveDateTime,
		o.Brand, o.IsSelfOrganize, o.Rate,
		o.PayState, o.WarnState,
		o.PeerState, o.ReviewState, o.CostState,
		o.ModifyDate,o.OrdersTotalId,o.DeptId,o.CheckTime,o.UserName,p.deptName,tor.ScheduleLineCode,tor.lineName,tor.tourInfo AS itInfo
		from
		orders o,dept p,
		tour_type_of_dept td,
		tour_info_for_order tor
		<where>
			o.TourTypeId=td.TourTypeId
			AND o.deptId=p.deptId
			AND
			o.OrderId=tor.orderId
			AND IF(td.StartTime IS NULL,'1=1',o.CreateTime <![CDATA[>=]]>
			td.StartTime)
			AND IF(td.EndTime IS NULL,'1=1',o.CreateTime <![CDATA[<=]]>
			td.EndTime)
			<if test="record.deptId != null">
				AND td.DeptId=#{record.deptId,jdbcType=VARCHAR}
			</if>
			<if test="record.scheduleLineCode != null">
				AND
				tor.ScheduleLineCode=#{record.scheduleLineCode,jdbcType=VARCHAR}
			</if>
			<if test="record.id != null">
				AND o.OrderId = #{record.id,jdbcType=VARCHAR}
			</if>
			<if test="record.orderNo != null">
				AND o.OrderNo LIKE CONCAT('%','${record.orderNo}','%')
			</if>
			<if test="record.orderNoIn != null">
				AND o.OrderNoIn = #{record.orderNoIn,jdbcType=VARCHAR}
			</if>
			<if test="record.totalPeople != null">
				AND o.TotalPeople =
				#{record.totalPeople,jdbcType=INTEGER}
			</if>
			<if test="record.commonTourFee != null">
				AND o.CommonTourFee =
				#{record.commonTourFee,jdbcType=DECIMAL}
			</if>
			<if test="record.tax != null">
				AND o.Tax = #{record.tax,jdbcType=TINYINT}
			</if>
			<if test="record.state != null">
				AND o.State = #{record.state,jdbcType=INTEGER}
			</if>
			<if test="record.userId != null">
				AND o.UserId = #{record.userId,jdbcType=VARCHAR}
			</if>
			<if test="record.createDate != null">
				AND o.CreateTime =
				#{record.createDate,jdbcType=TIMESTAMP}
			</if>
			<if test="record.peerId != null">
				AND o.PeerId = #{record.peerId,jdbcType=VARCHAR}
			</if>
			<if test="record.contact != null">
				AND o.Contact = #{record.contact,jdbcType=VARCHAR}
			</if>
			<if test="record.orderType != null">
				AND o.OrderType = #{record.orderType,jdbcType=TINYINT}
			</if>
			<if test="record.orderTourType != null">
				AND o.OrderTourType =
				#{record.orderTourType,jdbcType=VARCHAR}
			</if>
			<if test="record.tourCode != null">
				AND o.TourCode LIKE CONCAT('%','${record.tourCode}','%')
			</if>
			<if test="record.tourId != null">
				AND o.TourId = #{tourId,jdbcType=VARCHAR}
			</if>
			<if test="record.arriveDate != null">
				AND o.ArriveDate = #{record.arriveDate,jdbcType=DATE}
			</if>
			<if test="record.flightPnr != null">
				AND o.FlightPnr = #{record.flightPnr,jdbcType=VARCHAR}
			</if>
			<if test="record.nonGroupType != null">
				AND o.NonGroupType =
				#{record.nonGroupType,jdbcType=VARCHAR}
			</if>
			<if test="record.peerUserId != null">
				AND o.PeerUserId = #{record.peerUserId,jdbcType=VARCHAR}
			</if>
			<if test="record.noticeState != null">
				AND o.NoticeState =
				#{record.noticeState,jdbcType=INTEGER}
			</if>
			<if test="record.payState != null">
				AND o.PayState = #{record.payState,jdbcType=TINYINT}
			</if>
			<if test="record.warnState != null">
				AND o.WarnState = #{record.warnState,jdbcType=TINYINT}
			</if>
			<if test="record.peerState != null">
				AND o.PeerState = #{record.peerState,jdbcType=TINYINT}
			</if>
			<if test="record.reviewState != null">
				AND o.ReviewState =
				#{record.reviewState,jdbcType=TINYINT}
			</if>
			<if test="record.costState != null">
				AND o.CostState = #{record.costState,jdbcType=TINYINT}
			</if>
			<if test="record.modifyDate != null">
				AND o.ModifyDate =
				#{record.modifyDate,jdbcType=TIMESTAMP}
			</if>
			<if test="record.ordersTotalId != null">
				AND o.OrdersTotalId =
				#{record.ordersTotalId,jdbcType=VARCHAR}
			</if>
			<!-- <if test="record.deptId != null"> AND o.DeptId = #{record.deptId,jdbcType=VARCHAR} 
				</if> -->
			<if test="record.checkTime != null">
				AND o.CheckTime = #{record.checkTime,jdbcType=TIMESTAMP}
			</if>
			<if test="record.brand != null">
				AND o.Brand = #{record.brand,jdbcType=VARCHAR}
			</if>
			<if test="record.userName != null">
				AND o.userName = #{record.userName,jdbcType=VARCHAR}
			</if>
			<if test="record.beginningDate != null">
				AND o.CreateTime <![CDATA[>=]]>
				#{record.beginningDate,jdbcType=TIMESTAMP}
			</if>
			<if test="record.endingDate != null">
				AND DATE_FORMAT(o.CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
				#{record.endingDate,jdbcType=TIMESTAMP}
			</if>
			<if test="record.isSelfOrganize != null">
				AND o.IsSelfOrganize =
				#{record.isSelfOrganize,jdbcType=TINYINT}
			</if>
			<if test="record.rate != null">
				AND o.Rate = #{record.rate,jdbcType=DECIMAL}
			</if>
			<if test="record.planticket != null">
				AND o.Planticket = #{record.planticket,jdbcType=TINYINT}
			</if>
			<if test="record.otherInfo != null">
				AND o.OtherInfo = #{record.otherInfo,jdbcType=VARCHAR}
			</if>
			<if test="record.Reference != null">
				AND o.Reference = #{record.reference,jdbcType=VARCHAR}
			</if>
			AND (o.ReviewState=0 OR o.ReviewState=2 OR o.ReviewState=4)
		</where>
		ORDER BY o.CreateTime DESC
	</sql>
	<!--op booking 组团页面 显示总人数 -->
	<select id="findForTourPageTotalPepole" resultType="com.chinatour.entity.Order"
		parameterType="com.chinatour.entity.Order">
		SELECT
		SUM(o.TotalPeople) as TotalPeople
		FROM
		orders o,dept p,
		tour_type_of_dept td,
		tour_info_for_order tor
		<where>
			o.TourTypeId=td.TourTypeId
			AND o.deptId=p.deptId
			AND
			o.OrderId=tor.orderId
			AND IF(td.StartTime IS NULL,'1=1',o.CreateTime <![CDATA[>=]]>
			td.StartTime)
			AND IF(td.EndTime IS NULL,'1=1',o.CreateTime <![CDATA[<=]]>
			td.EndTime)
			<if test="deptId != null">
				AND td.DeptId=#{deptId,jdbcType=VARCHAR}
			</if>
			<if test="scheduleLineCode != null">
				AND
				tor.ScheduleLineCode=#{scheduleLineCode,jdbcType=VARCHAR}
			</if>
			<if test="id != null">
				AND o.OrderId = #{id,jdbcType=VARCHAR}
			</if>
			<if test="orderNo != null">
				AND o.OrderNo LIKE CONCAT('%','${orderNo}','%')
			</if>
			<if test="orderNoIn != null">
				AND o.OrderNoIn = #{orderNoIn,jdbcType=VARCHAR}
			</if>
			<if test="totalPeople != null">
				AND o.TotalPeople = #{totalPeople,jdbcType=INTEGER}
			</if>
			<if test="commonTourFee != null">
				AND o.CommonTourFee =
				#{commonTourFee,jdbcType=DECIMAL}
			</if>
			<if test="tax != null">
				AND o.Tax = #{tax,jdbcType=TINYINT}
			</if>
			<if test="state != null">
				AND o.State = #{state,jdbcType=INTEGER}
			</if>
			<if test="userId != null">
				AND o.UserId = #{userId,jdbcType=VARCHAR}
			</if>
			<if test="createDate != null">
				AND o.CreateTime = #{createDate,jdbcType=TIMESTAMP}
			</if>
			<if test="peerId != null">
				AND o.PeerId = #{peerId,jdbcType=VARCHAR}
			</if>
			<if test="contact != null">
				AND o.Contact = #{contact,jdbcType=VARCHAR}
			</if>
			<if test="orderType != null">
				AND o.OrderType = #{orderType,jdbcType=TINYINT}
			</if>
			<if test="orderTourType != null">
				AND o.OrderTourType = #{orderTourType,jdbcType=VARCHAR}
			</if>
			<if test="tourCode != null">
				AND o.TourCode LIKE CONCAT('%','${tourCode}','%')
			</if>
			<if test="tourId != null">
				AND o.TourId = #{tourId,jdbcType=VARCHAR}
			</if>
			<if test="arriveDate != null">
				AND o.ArriveDate = #{arriveDate,jdbcType=DATE}
			</if>
			<if test="flightPnr != null">
				AND o.FlightPnr = #{flightPnr,jdbcType=VARCHAR}
			</if>
			<if test="nonGroupType != null">
				AND o.NonGroupType = #{nonGroupType,jdbcType=VARCHAR}
			</if>
			<if test="peerUserId != null">
				AND o.PeerUserId = #{peerUserId,jdbcType=VARCHAR}
			</if>
			<if test="noticeState != null">
				AND o.NoticeState = #{noticeState,jdbcType=INTEGER}
			</if>
			<if test="payState != null">
				AND o.PayState = #{payState,jdbcType=TINYINT}
			</if>
			<if test="warnState != null">
				AND o.WarnState = #{warnState,jdbcType=TINYINT}
			</if>
			<if test="peerState != null">
				AND o.PeerState = #{peerState,jdbcType=TINYINT}
			</if>
			<if test="reviewState != null">
				AND o.ReviewState = #{reviewState,jdbcType=TINYINT}
			</if>
			<if test="costState != null">
				AND o.CostState = #{costState,jdbcType=TINYINT}
			</if>
			<if test="modifyDate != null">
				AND o.ModifyDate = #{modifyDate,jdbcType=TIMESTAMP}
			</if>
			<if test="ordersTotalId != null">
				AND o.OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
			</if>
			<if test="checkTime != null">
				AND o.CheckTime = #{checkTime,jdbcType=TIMESTAMP}
			</if>
			<if test="brand != null">
				AND o.Brand = #{brand,jdbcType=VARCHAR}
			</if>
			<if test="userName != null">
				AND o.userName = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="beginningDate != null">
				AND o.CreateTime <![CDATA[>=]]>
				#{beginningDate,jdbcType=TIMESTAMP}
			</if>
			<if test="endingDate != null">
				AND DATE_FORMAT(o.CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
				#{endingDate,jdbcType=TIMESTAMP}
			</if>
			<if test="isSelfOrganize != null">
				AND o.IsSelfOrganize = #{isSelfOrganize,jdbcType=TINYINT}
			</if>
			<if test="rate != null">
				AND o.Rate = #{rate,jdbcType=DECIMAL}
			</if>
			<if test="planticket != null">
				AND o.Planticket = #{planticket,jdbcType=TINYINT}
			</if>
			<if test="otherInfo != null">
				AND o.OtherInfo = #{otherInfo,jdbcType=VARCHAR}
			</if>
			<if test="reference != null">
				AND o.Reference = #{reference,jdbcType=VARCHAR}
			</if>
			AND (o.ReviewState=0 OR o.ReviewState=2 OR o.ReviewState=4)
		</where>
	</select>

	<!-- <sql id="findForTourPage_sql"> SELECT <include refid="Base_Column_List" 
		/> FROM orders <where> TourTypeId IN <foreach item="tourTypeId" collection="tourTypeIdList" 
		open="(" separator="," close=")"> #{tourTypeId,jdbcType=VARCHAR} </foreach> 
		<if test="record.id != null"> AND OrderId = #{record.id,jdbcType=VARCHAR} 
		</if> <if test="record.orderNo != null"> AND OrderNo LIKE CONCAT('%','${record.orderNo}','%') 
		</if> <if test="record.orderNoIn != null"> AND OrderNoIn = #{record.orderNoIn,jdbcType=INTEGER} 
		</if> <if test="record.totalPeople != null"> AND TotalPeople = #{record.totalPeople,jdbcType=INTEGER} 
		</if> <if test="record.commonTourFee != null"> AND CommonTourFee = #{record.commonTourFee,jdbcType=DECIMAL} 
		</if> <if test="record.tax != null"> AND Tax = #{record.tax,jdbcType=TINYINT} 
		</if> <if test="record.state != null"> AND State = #{record.state,jdbcType=INTEGER} 
		</if> <if test="record.userId != null"> AND UserId = #{record.userId,jdbcType=VARCHAR} 
		</if> <if test="record.createDate != null"> AND CreateTime = #{record.createDate,jdbcType=TIMESTAMP} 
		</if> <if test="record.peerId != null"> AND PeerId = #{record.peerId,jdbcType=VARCHAR} 
		</if> <if test="record.contact != null"> AND Contact = #{record.contact,jdbcType=VARCHAR} 
		</if> <if test="record.orderType != null"> AND OrderType = #{record.orderType,jdbcType=TINYINT} 
		</if> <if test="record.orderTourType != null"> AND OrderTourType = #{record.orderTourType,jdbcType=VARCHAR} 
		</if> <if test="record.tourCode != null"> AND TourCode LIKE CONCAT('%','${record.tourCode}','%') 
		</if> <if test="record.tourId != null"> AND TourId = #{tourId,jdbcType=VARCHAR} 
		</if> <if test="record.arriveDate != null"> AND ArriveDate = #{record.arriveDate,jdbcType=DATE} 
		</if> <if test="record.flightPnr != null"> AND FlightPnr = #{record.flightPnr,jdbcType=VARCHAR} 
		</if> <if test="record.nonGroupType != null"> AND NonGroupType = #{record.nonGroupType,jdbcType=VARCHAR} 
		</if> <if test="record.peerUserId != null"> AND PeerUserId = #{record.peerUserId,jdbcType=VARCHAR} 
		</if> <if test="record.noticeState != null"> AND NoticeState = #{record.noticeState,jdbcType=INTEGER} 
		</if> <if test="record.payState != null"> AND PayState = #{record.payState,jdbcType=TINYINT} 
		</if> <if test="record.warnState != null"> AND WarnState = #{record.warnState,jdbcType=TINYINT} 
		</if> <if test="record.peerState != null"> AND PeerState = #{record.peerState,jdbcType=TINYINT} 
		</if> <if test="record.reviewState != null"> AND ReviewState = #{record.reviewState,jdbcType=TINYINT} 
		</if> <if test="record.costState != null"> AND CostState = #{record.costState,jdbcType=TINYINT} 
		</if> <if test="record.modifyDate != null"> AND ModifyDate = #{record.modifyDate,jdbcType=TIMESTAMP} 
		</if> <if test="record.ordersTotalId != null"> AND OrdersTotalId = #{record.ordersTotalId,jdbcType=VARCHAR} 
		</if> <if test="record.deptId != null"> AND DeptId = #{record.deptId,jdbcType=VARCHAR} 
		</if> <if test="record.checkTime != null"> AND CheckTime = #{record.checkTime,jdbcType=TIMESTAMP} 
		</if> <if test="record.brand != null"> AND Brand = #{record.brand,jdbcType=VARCHAR} 
		</if> <if test="record.userName != null"> AND userName = #{record.userName,jdbcType=VARCHAR} 
		</if> <if test="record.beginningDate != null"> AND CreateTime <![CDATA[>=]]> 
		#{record.beginningDate,jdbcType=TIMESTAMP} </if> <if test="record.endingDate 
		!= null"> AND CreateTime <![CDATA[<=]]> #{record.endingDate,jdbcType=TIMESTAMP} 
		</if> <if test="record.isSelfOrganize != null"> AND IsSelfOrganize = #{record.isSelfOrganize,jdbcType=TINYINT} 
		</if> <if test="record.rate != null"> AND Rate = #{record.rate,jdbcType=DECIMAL} 
		</if> </where> ORDER BY OrderNo DESC </sql> -->

	<select id="findForPage" resultMap="ResultDeptForOrderMap">
		<include refid="Pager.paginationStart" />
		<include refid="findForPage_sql" />
		<include refid="Pager.paginationEnd" />
	</select>

	<select id="findForPageCount" resultType="int">
		<include refid="Pager.countStart" />
		<include refid="findForPage_sql" />
		<include refid="Pager.countEnd" />
	</select>

	<select id="findForTourPage" resultMap="BaseResultMap">
		<include refid="Pager.paginationStart" />
		<include refid="findForTourPage_sql" />
		<include refid="Pager.paginationEnd" />
	</select>

	<select id="findForTourPageCount" resultType="int">
		<include refid="Pager.countStart" />
		<include refid="findForTourPage_sql" />
		<include refid="Pager.countEnd" />
	</select>

	<select id="findTourOrderListVOForPage" resultMap="tourOrderListVOResultMap">
		<include refid="Pager.paginationStart" />
		SELECT * FROM(
			SELECT
			ord.OrderId OrderId,OrderNo, OrderNoIn, TotalPeople, CommonTourFee as SumFee,
			PeerUserFee as peerUserFee,ar.UpdateRemark as peerUserRemark,
			Tax, State, ord.UserId, TourTypeId, Contact, TourCode, TourId, CreateTime
			as Createdate,postInfo,ItInfo,
			PeerId, OrderType, OrderTourType, ArriveDate, FlightPnr,
			NonGroupType,d.deptName,v.name as peerName,
			PeerUserId, NoticeState, Brand, IsSelfOrganize, Rate, PayState, WarnState,
			PeerState, ReviewState, ord.CostState as CostState,REFNO,
			ord.ModifyDate,OrdersTotalId,CheckTime,ord.UserName UserName,t.LineName
			LineName,t.ScheduleLineCode ScheduleLineCode,t.ScheduleOfArriveTime
			ScheduleOfArriveTime
			FROM
			(
			<if test="record.lastName!=null or record.firstName!=null or record.middleName!=null">
				SELECT o.* 
				FROM orders o, customer_order_rel cor , customer c 
				<where>
					o.OrderId=cor.OrderId AND cor.CustomerId=c.CustomerId 
					<if test="record.lastName != null">
						AND c.lastName LIKE CONCAT('%','${record.lastName}','%')
					</if>
					<if test="record.firstName != null">
						AND c.firstName LIKE CONCAT('%','${record.firstName}','%')
					</if>
					<if test="record.middleName != null">
						AND c.middleName LIKE CONCAT('%','${record.middleName}','%')
					</if>
					<if test="record.id != null">
						AND OrderId = #{record.id,jdbcType=VARCHAR}
					</if>
					<if test="record.orderNo != null">
						AND OrderNo LIKE CONCAT('%','${record.orderNo}','%')
					</if>
					<if test="record.orderNoIn != null">
						<choose>
							<when test="record.orderNoIn=='other'">
								AND OrderNoIn !=""
							</when>
							<otherwise>
								AND OrderNoIn=#{record.orderNoIn,jdbcType=VARCHAR}
							</otherwise>
						</choose>
					</if>
					<if test="record.totalPeople != null">
						AND TotalPeople = #{record.totalPeople,jdbcType=INTEGER}
					</if>
					<if test="record.commonTourFee != null">
						AND CommonTourFee =
						#{record.commonTourFee,jdbcType=DECIMAL}
					</if>
					<if test="record.tax!=null and record.tax!=4">
						AND
						Tax=#{record.tax}
					</if>
					<if test="record.tax==4">
						AND (Tax=2 or Tax=4)
					</if>
					<if test="record.state != null and record.state != 5">
						AND State = #{record.state,jdbcType=VARCHAR}
					</if>
					<if test="record.state == 5">
						AND State !=5
						AND State !=6
					</if>
					<if test="record.userId != null">
						AND UserId = #{record.userId,jdbcType=VARCHAR}
					</if>
					<if test="record.sorceId ==1">
						AND PeerUserId = ""
					</if>
					<if test="record.sorceId == 2">
						AND PeerUserId !=""
					</if>
					<if test="record.peerUserName != null">
						AND o.PeerId = #{record.peerUserName,jdbcType=VARCHAR}
					</if>
					<if test="record.peerUserId != null">
						AND PeerUserId = #{record.peerUserId,jdbcType=VARCHAR}
					</if>
					<!-- <if test="record.peerUserName != null">
						AND PeerUserName LIKE CONCAT('%','${record.peerUserName}','%')
					</if> -->
					<if test="record.tourTypeId != null">
						AND TourTypeId = #{record.tourTypeId,jdbcType=TINYINT}
					</if>
					<if test="record.tourCode != null">
						AND TourCode LIKE CONCAT('%','${record.tourCode}','%')
					</if>
					<if test="record.tourId != null">
						AND TourId = #{record.tourId,jdbcType=VARCHAR}
					</if>
					<if test="record.refNo != null">
						AND REFNO LIKE CONCAT('%','${record.refNo}','%')
					</if>
					<if test="record.contact != null">
						AND Contact LIKE CONCAT('%','${record.contact}','%')
					</if>
					<if test="record.orderType != null">
						AND OrderType = #{record.orderType,jdbcType=TINYINT}
					</if>
					<if test="record.arriveDate != null">
						AND ArriveDate = #{record.arriveDate,jdbcType=DATE}
					</if>
					<if test="record.flightPnr != null">
						AND FlightPnr LIKE CONCAT('%','${record.flightPnr}','%')
					</if>
					<if test="record.nonGroupType != null">
						AND NonGroupType =
						#{record.nonGroupType,jdbcType=VARCHAR}
					</if>
					<if test="record.noticeState != null">
						AND NoticeState = #{record.noticeState,jdbcType=INTEGER}
					</if>
					<if test="record.payState != null">
						AND PayState = #{record.payState,jdbcType=TINYINT}
					</if>
					<if test="record.warnState != null">
						AND WarnState = #{record.warnState,jdbcType=TINYINT}
					</if>
					<if test="record.peerState != null">
						AND PeerState = #{record.peerState,jdbcType=TINYINT}
					</if>
					<if test="record.reviewState != null">
						AND ReviewState = #{record.reviewState,jdbcType=TINYINT}
					</if>
					<if test="record.costState != null">
						<choose>
							<when test="record.costState==10">
								AND CostState != 0
							</when>
							<otherwise>
								AND CostState = #{record.costState,jdbcType=TINYINT}
							</otherwise>
						</choose>
					</if>
					<if test="record.modifyDate != null">
						AND ModifyDate = #{record.modifyDate,jdbcType=TIMESTAMP}
					</if>
					<if test="record.ordersTotalId != null">
						AND OrdersTotalId =
						#{record.ordersTotalId,jdbcType=VARCHAR}
					</if>
					<if test="record.deptId != null">
						AND DeptId = #{record.deptId,jdbcType=VARCHAR}
					</if>
					<if test="record.brand != null">
						AND Brand LIKE CONCAT('%','${record.brand}','%')
					</if>
					<if test="record.userName != null">
						AND UserName = #{record.userName,jdbcType=VARCHAR}
					</if>
					<if test="record.orderTourType != null">
						AND OrderTourType =
						#{record.orderTourType,jdbcType=VARCHAR}
					</if>
					<if
						test="record.isSelfOrganize != null and record.isSelfOrganize != 3 and record.isSelfOrganize != 4">
						AND IsSelfOrganize = #{record.isSelfOrganize,jdbcType=TINYINT}
					</if>
					<if test="record.isSelfOrganize == 3">
						AND OrderTourType !='inbound_sys'
						AND IsSelfOrganize=0
					</if>
					<if test="record.isSelfOrganize == 4">
						AND OrderTourType ='inbound_sys'
					</if>
					<if test="record.reference != null">
						AND Reference = #{record.reference,jdbcType=VARCHAR}
					</if>
					<if test="record.rate != null">
						AND Rate = #{record.rate,jdbcType=DECIMAL}
					</if>
					<if test="record.bookingBeginningDate != null">
						AND CreateTime <![CDATA[>=]]>
						#{record.bookingBeginningDate,jdbcType=TIMESTAMP}
					</if>
					<if test="record.bookingEndingDate != null">
						AND DATE_FORMAT(CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
						#{record.bookingEndingDate,jdbcType=TIMESTAMP}
					</if>
					<if test="record.settlementDateBeg != null">
						AND CheckTime <![CDATA[>=]]>
						#{record.settlementDateBeg,jdbcType=TIMESTAMP}
					</if>
					<if test="record.settlementDateEnd != null">
						AND CheckTime <![CDATA[<=]]>
						#{record.settlementDateEnd,jdbcType=TIMESTAMP}
					</if>
					<if test="record.wr =='Retail'">
						AND PeerId =''
					</if>
					<if test="record.wr =='WholeSale'">
						AND PeerId !=''
					</if>
				</where>
			</if>
			<if test="record.lastName==null and record.firstName==null and record.middleName==null">
				SELECT
				<include refid="Base_Column_List" />
				FROM orders
				<where>
					<if test="record.id != null">
						AND OrderId = #{record.id,jdbcType=VARCHAR}
					</if>
					<if test="record.orderNo != null">
						AND OrderNo LIKE CONCAT('%','${record.orderNo}','%')
					</if>
					<if test="record.orderNoIn != null">
						<choose>
							<when test="record.orderNoIn=='other'">
								AND OrderNoIn !=""
							</when>
							<otherwise>
								AND OrderNoIn=#{record.orderNoIn,jdbcType=VARCHAR}
							</otherwise>
						</choose>
					</if>
					<if test="record.totalPeople != null">
						AND TotalPeople = #{record.totalPeople,jdbcType=INTEGER}
					</if>
					<if test="record.commonTourFee != null">
						AND CommonTourFee =
						#{record.commonTourFee,jdbcType=DECIMAL}
					</if>
					<if test="record.tax!=null and record.tax!=4">
						AND
						Tax=#{record.tax}
					</if>
					<if test="record.tax==4">
						AND (Tax=2 or Tax=4)
					</if>
					<if test="record.state != null and record.state != 5">
						AND State = #{record.state,jdbcType=VARCHAR}
					</if>
					<if test="record.state == 5">
						AND State !=5
						AND State !=6
					</if>
					<if test="record.userId != null">
						AND UserId = #{record.userId,jdbcType=VARCHAR}
					</if>
					<if test="record.sorceId == 1">
						AND PeerUserId = ""
					</if>
					<if test="record.sorceId == 2">
						AND PeerUserId !=""
					</if>
					<if test="record.peerUserId != null">
						AND PeerUserId = #{record.peerUserId,jdbcType=VARCHAR}
					</if>
					<if test="record.peerUserName != null">
						AND PeerId = #{record.peerUserName,jdbcType=VARCHAR}
					</if>
					<if test="record.tourTypeId != null">
						AND TourTypeId = #{record.tourTypeId,jdbcType=TINYINT}
					</if>
					<if test="record.tourCode != null">
						AND TourCode LIKE CONCAT('%','${record.tourCode}','%')
					</if>
					<if test="record.tourId != null">
						AND TourId = #{record.tourId,jdbcType=VARCHAR}
					</if>
					<if test="record.refNo != null">
						AND REFNO LIKE CONCAT('%','${record.refNo}','%')
					</if>
					<if test="record.contact != null">
						AND Contact LIKE CONCAT('%','${record.contact}','%')
					</if>
					<if test="record.orderType != null">
						AND OrderType = #{record.orderType,jdbcType=TINYINT}
					</if>
					<if test="record.arriveDate != null">
						AND ArriveDate = #{record.arriveDate,jdbcType=DATE}
					</if>
					<if test="record.flightPnr != null">
						AND FlightPnr LIKE CONCAT('%','${record.flightPnr}','%')
					</if>
					<if test="record.nonGroupType != null">
						AND NonGroupType =
						#{record.nonGroupType,jdbcType=VARCHAR}
					</if>
					<if test="record.noticeState != null">
						AND NoticeState = #{record.noticeState,jdbcType=INTEGER}
					</if>
					<if test="record.payState != null">
						AND PayState = #{record.payState,jdbcType=TINYINT}
					</if>
					<if test="record.warnState != null">
						AND WarnState = #{record.warnState,jdbcType=TINYINT}
					</if>
					<if test="record.peerState != null">
						AND PeerState = #{record.peerState,jdbcType=TINYINT}
					</if>
					<if test="record.reviewState != null">
						AND ReviewState = #{record.reviewState,jdbcType=TINYINT}
					</if>
					<if test="record.costState != null">
						<choose>
							<when test="record.costState==10">
								AND CostState != 0
							</when>
							<otherwise>
								AND CostState = #{record.costState,jdbcType=TINYINT}
							</otherwise>
						</choose>
					</if>
					<if test="record.modifyDate != null">
						AND ModifyDate = #{record.modifyDate,jdbcType=TIMESTAMP}
					</if>
					<if test="record.ordersTotalId != null">
						AND OrdersTotalId =
						#{record.ordersTotalId,jdbcType=VARCHAR}
					</if>
					<if test="record.deptId != null">
						AND DeptId = #{record.deptId,jdbcType=VARCHAR}
					</if>
					<if test="record.brand != null">
						AND Brand LIKE CONCAT('%','${record.brand}','%')
					</if>
					<if test="record.userName != null">
						AND UserName = #{record.userName,jdbcType=VARCHAR}
					</if>
					<if test="record.orderTourType != null">
						AND OrderTourType =
						#{record.orderTourType,jdbcType=VARCHAR}
					</if>
					<if
						test="record.isSelfOrganize != null and record.isSelfOrganize != 3 and record.isSelfOrganize != 4">
						AND IsSelfOrganize = #{record.isSelfOrganize,jdbcType=TINYINT}
					</if>
					<if test="record.isSelfOrganize == 3">
						AND OrderTourType !='inbound_sys'
						AND IsSelfOrganize=0
					</if>
					<if test="record.isSelfOrganize == 4">
						AND OrderTourType ='inbound_sys'
					</if>
					<if test="record.reference != null">
						AND Reference = #{record.reference,jdbcType=VARCHAR}
					</if>
					<if test="record.rate != null">
						AND Rate = #{record.rate,jdbcType=DECIMAL}
					</if>
					<if test="record.bookingBeginningDate != null">
						AND CreateTime <![CDATA[>=]]>
						#{record.bookingBeginningDate,jdbcType=TIMESTAMP}
					</if>
					<if test="record.bookingEndingDate != null">
						AND DATE_FORMAT(CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
						#{record.bookingEndingDate,jdbcType=TIMESTAMP}
					</if>
					<if test="record.settlementDateBeg != null">
						AND CheckTime <![CDATA[>=]]>
						#{record.settlementDateBeg,jdbcType=TIMESTAMP}
					</if>
					<if test="record.settlementDateEnd != null">
						AND CheckTime <![CDATA[<=]]>
						#{record.settlementDateEnd,jdbcType=TIMESTAMP}
					</if>
					<if test="record.wr =='Retail'">
						AND PeerId =''
					</if>
					<if test="record.wr =='WholeSale'">
						AND PeerId !=''
					</if>
				</where>
			</if>
			) ord 
				JOIN tour_info_for_order t ON ord.OrderId = t.OrderId 
				JOIN dept d ON ord.deptId=d.deptId 
				left JOIN vender v ON ord.peerId=v.venderId 
				LEFT JOIN order_agency_remark ar ON ord.OrderId=ar.OrderId
			<where>
				<if test="record.arriveDateTime != null">
					AND
					DATE_FORMAT(t.ScheduleOfArriveTime,'%Y-%m')=DATE_FORMAT(#{record.arriveDateTime},'%Y-%m')
				</if>
				<if test="record.beginningDate != null">
					AND t.ScheduleOfArriveTime <![CDATA[>=]]>
					#{record.beginningDate,jdbcType=TIMESTAMP}
				</if>
				<if test="record.endingDate != null">
					AND t.ScheduleOfArriveTime <![CDATA[<=]]>
					#{record.endingDate,jdbcType=TIMESTAMP}
				</if>
				<if test="record.lineName != null">
					AND t.LineName LIKE CONCAT('%','${record.lineName}','%')
				</if>
				<if test="record.peerId != null">
					AND v.Name LIKE CONCAT('%','${record.peerId}','%')
				</if>
				<if test="record.deptName != null">
					AND d.DeptName LIKE CONCAT('%','${record.deptName}','%')
				</if>
			</where>
			ORDER BY ar.ModifyDate DESC
		)t GROUP BY t.OrderId ORDER BY
		<if test="record.sorceId == 2">
			FIELD(t.ReviewState,1,5) DESC,t.Createdate DESC
		</if> 
		<if test="record.sorceId != 2">
			t.Createdate DESC,t.state DESC
		</if> 
		<include refid="Pager.paginationEnd" />
	</select>
	
	
	

	<!-- 订单 显示总人数 -->
	<select id="findOrderSumPepole" resultType="com.chinatour.vo.TourOrderListVO"
		parameterType="com.chinatour.vo.TourOrderListVO">
		SELECT
			SUM(tt.TotalPeople) as TotalPeople,
			SUM(tt.CommonTourFee) as CommonTourFee,SUM(tt.payTotalSum) as payTotalSum,SUM(tt.costTotalSum) as costTotalSum
		FROM (
			SELECT os.TotalPeople,
				os.CommonTourFee,ROUND(Sum(IF(p.PayOrCost=1,p.sum,0)),2) as payTotalSum, ROUND(Sum(IF(p.PayOrCost=2,p.sum,0)),2) as costTotalSum FROM
				(
			SELECT ord.*FROM(SELECT
			<include refid="Base_Column_List" />
			FROM orders
			<where>
				<if test="id != null">
					AND OrderId = #{record.id,jdbcType=VARCHAR}
				</if>
				<if test="orderNo != null">
					AND OrderNo LIKE CONCAT('%','${orderNo}','%')
				</if>
				<if test="refNo != null">
					AND REFNO LIKE CONCAT('%','${refNo}','%')
				</if>
				<if test="orderNoIn != null">
					<choose>
						<when test="orderNoIn=='other'">
							AND OrderNoIn !=""
						</when>
						<otherwise>
							AND OrderNoIn LIKE CONCAT('%','${orderNoIn}','%')
						</otherwise>
					</choose>
				</if>
				<if test="totalPeople != null">
					AND TotalPeople = #{totalPeople,jdbcType=INTEGER}
				</if>
				<if test="commonTourFee != null">
					AND CommonTourFee =
					#{commonTourFee,jdbcType=DECIMAL}
				</if>
				<if test="tax!=null and tax!=4">
					AND Tax=#{tax}
				</if>
				<if test="tax==4">
					AND (Tax=2 or Tax=4)
				</if>
				<if test="state != null and state != 5">
					AND State = #{state}
				</if>
				<if test="state == 5">
					AND State !=5
					AND State !=6
				</if>
				<if test="userId != null">
					AND UserId = #{userId,jdbcType=VARCHAR}
				</if>
				<if test="tourTypeId != null">
					AND TourTypeId = #{tourTypeId,jdbcType=TINYINT}
				</if>
				<if test="tourCode != null">
					AND TourCode LIKE CONCAT('%','${tourCode}','%')
				</if>
				<if test="tourId != null">
					AND TourId = #{tourId,jdbcType=VARCHAR}
				</if>
				<if test="createDate != null">
					AND CreateTime = #{createDate,jdbcType=TIMESTAMP}
				</if>
				<if test="contact != null">
					AND Contact LIKE CONCAT('%','${contact}','%')
				</if>
				<if test="orderType != null">
					AND OrderType = #{orderType,jdbcType=TINYINT}
				</if>
				<if test="orderTourType != null">
					AND OrderTourType = #{orderTourType,jdbcType=VARCHAR}
				</if>
				<if test="arriveDate != null">
					AND ArriveDate = #{arriveDate,jdbcType=DATE}
				</if>
				<if test="flightPnr != null">
					AND FlightPnr = #{flightPnr,jdbcType=VARCHAR}
				</if>
				<if test="nonGroupType != null">
					AND NonGroupType =
					#{nonGroupType,jdbcType=VARCHAR}
				</if>
				<if test="sorceId == 1">
					AND PeerUserId = ""
				</if>
				<if test="sorceId == 2">
					AND PeerUserId !=""
				</if>
				<if test="peerUserId != null">
					AND PeerUserId = #{peerUserId,jdbcType=VARCHAR}
				</if>
				<if test="noticeState != null">
					AND NoticeState = #{noticeState,jdbcType=INTEGER}
				</if>
				<if test="payState != null">
					AND PayState = #{payState,jdbcType=TINYINT}
				</if>
				<if test="warnState != null">
					AND WarnState = #{warnState,jdbcType=TINYINT}
				</if>
				<if test="peerState != null">
					AND PeerState = #{peerState,jdbcType=TINYINT}
				</if>
				<if test="reviewState != null">
					AND ReviewState = #{reviewState,jdbcType=TINYINT}
				</if>
				<if test="costState != null">
					AND CostState = #{costState,jdbcType=TINYINT}
				</if>
				<if test="modifyDate != null">
					AND ModifyDate = #{modifyDate,jdbcType=TIMESTAMP}
				</if>
				<if test="ordersTotalId != null">
					AND OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
				</if>
				<if test="deptId != null">
					AND DeptId = #{deptId,jdbcType=VARCHAR}
				</if>
				<if test="checkTime != null">
					AND CheckTime = #{checkTime,jdbcType=TIMESTAMP}
				</if>
				<if test="brand != null">
					AND Brand = #{brand,jdbcType=VARCHAR}
				</if>
				<if test="userName != null">
					AND UserName = #{userName,jdbcType=VARCHAR}
				</if>
				<if
					test="isSelfOrganize != null and isSelfOrganize != 3 and isSelfOrganize != 4">
					AND IsSelfOrganize = #{isSelfOrganize,jdbcType=TINYINT}
				</if>
				<if test="isSelfOrganize == 3">
					AND OrderTourType !='inbound_sys'
					AND IsSelfOrganize=0
				</if>
				<if test="isSelfOrganize == 4">
					AND OrderTourType ='inbound_sys'
				</if>
				<if test="rate != null">
					AND Rate = #{rate,jdbcType=DECIMAL}
				</if>
				<if test="reference != null">
					AND Reference = #{reference,jdbcType=VARCHAR}
				</if>
				<if test="bookingBeginningDate != null">
					AND CreateTime <![CDATA[>=]]>
					#{bookingBeginningDate,jdbcType=TIMESTAMP}
				</if>
				<if test="bookingEndingDate != null">
					AND DATE_FORMAT(CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
					#{bookingEndingDate,jdbcType=TIMESTAMP}
				</if>
				<if test="settlementDateBeg != null">
					AND CheckTime <![CDATA[>=]]>
					#{settlementDateBeg,jdbcType=TIMESTAMP}
				</if>
				<if test="settlementDateEnd != null">
					AND CheckTime <![CDATA[<=]]>
					#{settlementDateEnd,jdbcType=TIMESTAMP}
				</if>
				<if test="wr =='Retail'">
					AND PeerId =''
				</if>
				<if test="wr =='WholeSale'">
					AND PeerId !=''
				</if>
			</where>
			ORDER BY OrderNo DESC) ord JOIN tour_info_for_order t
			ON ord.OrderId = t.OrderId JOIN dept d ON ord.deptId=d.deptId left JOIN
			vender v ON ord.peerId=v.venderId
			<where>
				<if test="beginningDate != null">
					AND t.ScheduleOfArriveTime <![CDATA[>=]]>
					#{beginningDate,jdbcType=TIMESTAMP}
				</if>
				<if test="endingDate != null">
					AND t.ScheduleOfArriveTime <![CDATA[<=]]>
					#{endingDate,jdbcType=TIMESTAMP}
				</if>
				<if test="peerId != null">
					AND v.Name LIKE CONCAT('%','${peerId}','%')
				</if>
				<if test="deptName != null">
					AND d.DeptName LIKE CONCAT('%','${deptName}','%')
				</if>
			</where>
			)os LEFT JOIN pay_cost_records p
			on os.orderId=p.OrderId
			GROUP BY os.orderId
		)tt
	</select>

	<select id="find" resultMap="BaseResultMap" parameterType="com.chinatour.entity.Order">
		SELECT
		<include refid="Base_Column_List" />
		FROM orders
		<where>
			<if test="id != null">
				OrderId = #{id,jdbcType=VARCHAR}
			</if>
			<if test="orderNo != null">
				AND OrderNo = #{orderNo,jdbcType=VARCHAR}
			</if>
			<if test="orderNoIn != null">
				AND OrderNoIn = #{orderNoIn,jdbcType=VARCHAR}
			</if>
			<if test="totalPeople != null">
				AND TotalPeople = #{totalPeople,jdbcType=INTEGER}
			</if>
			<if test="commonTourFee != null">
				AND CommonTourFee = #{commonTourFee,jdbcType=DECIMAL}
			</if>
			<if test="tax != null">
				AND Tax = #{tax,jdbcType=TINYINT}
			</if>
			<if test="state != null">
				AND State = #{state,jdbcType=INTEGER}
			</if>
			<if test="userId != null">
				AND UserId = #{userId,jdbcType=VARCHAR}
			</if>
			<if test="tourTypeId != null">
				AND TourTypeId = #{tourTypeId,jdbcType=TINYINT}
			</if>
			<if test="tourCode != null">
				AND TourCode = #{tourCode,jdbcType=VARCHAR}
			</if>
			<if test="tourId != null">
				AND TourId = #{tourId,jdbcType=VARCHAR}
			</if>
			<if test="createDate != null">
				AND CreateTime = #{createDate,jdbcType=TIMESTAMP}
			</if>
			<if test="peerId != null">
				AND PeerId = #{peerId,jdbcType=VARCHAR}
			</if>
			<if test="contact != null">
				AND Contact = #{contact,jdbcType=VARCHAR}
			</if>
			<if test="orderType != null">
				AND OrderType = #{orderType,jdbcType=TINYINT}
			</if>
			<if test="orderTourType != null">
				AND OrderTourType = #{orderTourType,jdbcType=VARCHAR}
			</if>
			<if test="arriveDate != null">
				AND ArriveDate = #{arriveDate,jdbcType=DATE}
			</if>
			<if test="flightPnr != null">
				AND FlightPnr = #{flightPnr,jdbcType=VARCHAR}
			</if>
			<if test="nonGroupType != null">
				AND NonGroupType = #{nonGroupType,jdbcType=VARCHAR}
			</if>
			<if test="peerUserId != null">
				AND PeerUserId = #{peerUserId,jdbcType=VARCHAR}
			</if>
			<if test="noticeState != null">
				AND NoticeState = #{noticeState,jdbcType=INTEGER}
			</if>
			<if test="payState != null">
				AND PayState = #{payState,jdbcType=TINYINT}
			</if>
			<if test="warnState != null">
				AND WarnState = #{warnState,jdbcType=TINYINT}
			</if>
			<if test="peerState != null">
				AND PeerState = #{peerState,jdbcType=TINYINT}
			</if>
			<if test="reviewState != null">
				AND ReviewState = #{reviewState,jdbcType=TINYINT}
			</if>
			<if test="costState != null">
				AND CostState = #{costState,jdbcType=TINYINT}
			</if>
			<if test="modifyDate != null">
				AND ModifyDate = #{modifyDate,jdbcType=TIMESTAMP}
			</if>
			<if test="ordersTotalId != null">
				AND OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
			</if>
			<if test="deptId != null">
				AND DeptId = #{deptId,jdbcType=VARCHAR}
			</if>
			<if test="checkTime != null">
				AND CheckTime = #{checkTime,jdbcType=TIMESTAMP}
			</if>
			<if test="brand != null">
				AND Brand = #{brand,jdbcType=VARCHAR}
			</if>
			<if test="userName != null">
				AND userName = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="isSelfOrganize != null">
				AND isSelfOrganize = #{isSelfOrganize,jdbcType=TINYINT}
			</if>
			<if test="rate != null">
				AND rate = #{rate,jdbcType=DECIMAL}
			</if>
			<if test="planticket != null">
				AND Planticket = #{planticket,jdbcType=TINYINT}
			</if>
			<if test="otherInfo != null">
				AND OtherInfo = #{otherInfo,jdbcType=VARCHAR}
			</if>
			<if test="reference != null">
				AND Reference = #{reference,jdbcType=VARCHAR}
			</if>
		</where>
	</select>

	<select id="findAll" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM orders
	</select>

	<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
		<include refid="Base_Column_List" />
		FROM orders
		WHERE OrderId = #{id,jdbcType=VARCHAR}
	</select>

	<select id="findOrderNoById" resultType="String" parameterType="String">
		SELECT
		orderNo
		FROM
		orders
		WHERE
		OrderId=#{id,jdbcType=VARCHAR}
	</select>

	<select id="findUserNameByOrderId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		SELECT
		a.userName,o.orderNo,o.tourCode
		FROM orders
		o,zs_admin a
		WHERE o.UserId = a.Id
		AND o.OrderId =
		#{id,jdbcType=VARCHAR}
	</select>

	<select id="findByOrdersTotalId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		SELECT
		<include refid="Base_Column_List" />
		FROM orders
		WHERE OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
	</select>

	<select id="findByTourId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		SELECT
		<include refid="Base_Column_List" />
		FROM orders
		WHERE TourId = #{tourId,jdbcType=VARCHAR}
		ORDER BY CreateTime
	</select>

	<select id="findByTourIdForArr" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		SELECT
		o.OrderId,
		o.OrderNo,
		o.OrderNoIn,
		o.TotalPeople,
		o.CommonTourFee,
		o.PeerUserFee,
		o.Tax,
		o.State,
		o.UserId,
		o.rate,
		o.peerUserRate,
		o.peerUserName,
		o.Contact,
		o.TourCode,
		o.TourId,
		o.CreateTime,
		o.PeerId,
		o.OrderType,
		o.OrderTourType,
		o.ArriveDate,
		o.FlightPnr,
		o.NonGroupType,
		o.PeerUserId,
		o.NoticeState,
		o.Brand,
		o.PayState,
		o.WarnState,
		o.PeerState,
		o.ReviewState,
		o.CostState,
		o.ModifyDate,
		o.OrdersTotalId,
		o.DeptId,
		o.CheckTime,
		o.userName,
		o.IsSelfOrganize
		FROM orders o
		WHERE
		o.OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
		AND
		o.state <![CDATA[<>]]>
		6
		AND 
		o.state <![CDATA[<>]]>
		5
		Order By o.ArriveDate
	</select>

	<delete id="removeById" parameterType="java.lang.String">
		UPDATE orders
		SET State = 6
		WHERE OrderId = #{id, jdbcType=VARCHAR}
	</delete>

	<insert id="save" parameterType="com.chinatour.entity.Order">
		INSERT INTO orders
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				OrderId,
			</if>
			OrderNo,
			<if test="orderNoIn != null">
				OrderNoIn,
			</if>
			<if test="totalPeople != null">
				TotalPeople,
			</if>
			<if test="commonTourFee != null">
				CommonTourFee,
			</if>
			<if test="peerUserFee != null">
				PeerUserFee,
			</if>
			<if test="tax != null">
				Tax,
			</if>
			<if test="state != null">
				State,
			</if>
			<if test="userId != null">
				UserId,
			</if>
			<if test="tourTypeId != null">
				TourTypeId,
			</if>
			<if test="tourCode != null">
				TourCode,
			</if>
			<if test="tourId != null">
				TourId,
			</if>
			<!-- <if test="createDate != null"> CreateTime, </if> -->
			<if test="peerId != null">
				PeerId,
			</if>
			<if test="contact != null">
				Contact,
			</if>
			<if test="orderType != null">
				OrderType,
			</if>
			<if test="orderTourType != null">
				OrderTourType,
			</if>
			<if test="arriveDate != null">
				ArriveDate,
			</if>
			<if test="flightPnr != null">
				FlightPnr,
			</if>
			<if test="nonGroupType != null">
				NonGroupType,
			</if>
			<if test="peerUserId != null">
				PeerUserId,
			</if>
			<if test="noticeState != null">
				NoticeState,
			</if>
			<if test="payState != null">
				PayState,
			</if>
			<if test="warnState != null">
				WarnState,
			</if>
			<if test="peerState != null">
				PeerState,
			</if>
			<if test="reviewState != null">
				ReviewState,
			</if>
			<if test="costState != null">
				CostState,
			</if>
			<if test="modifyDate != null">
				ModifyDate,
			</if>
			<if test="ordersTotalId != null">
				OrdersTotalId,
			</if>
			<if test="deptId != null">
				DeptId,
			</if>
			<if test="checkTime != null">
				CheckTime,
			</if>
			<if test="brand != null">
				Brand,
			</if>
			<if test="userName != null">
				UserName,
			</if>
			<if test="isSelfOrganize != null">
				IsSelfOrganize,
			</if>
			<if test="rate != null">
				Rate,
			</if>
			<if test="peerUserRate != null">
				PeerUserRate,
			</if>
			<if test="flag != null">
				flag,
			</if>
			<if test="planticket != null">
				Planticket,
			</if>
			<if test="otherInfo != null">
				OtherInfo,
			</if>
			<if test="reference != null">
				Reference,
			</if>
			<if test="checkOutDate != null">
				CheckOutDate,
			</if>
			<if test="sendingDate != null">
				SendingDate,
			</if>
			<if test="pinSigningDate != null">
				PinSigningDate,
			</if>
			<if test="cusPrice != null">
				CusPrice,
			</if>
			<if test="postInfo != null">
				PostInfo,
			</if>
			<if test="refNo != null">
				REFNO,
			</if>
			<if test="peerUserName != null">
				PeerUserName
			</if>
		</trim>
		<trim prefix="select" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			CONCAT(#{orderNo},'-',COUNT(ordersTotalId)+1),
			<if test="orderNoIn != null">
				#{orderNoIn,jdbcType=VARCHAR},
			</if>
			<if test="totalPeople != null">
				#{totalPeople,jdbcType=INTEGER},
			</if>
			<if test="commonTourFee != null">
				#{commonTourFee,jdbcType=DECIMAL},
			</if>
			<if test="peerUserFee != null">
				#{peerUserFee,jdbcType=DECIMAL},
			</if>
			<if test="tax != null">
				#{tax,jdbcType=TINYINT},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="tourTypeId != null">
				#{tourTypeId,jdbcType=TINYINT},
			</if>
			<if test="tourCode != null">
				#{tourCode,jdbcType=VARCHAR},
			</if>
			<if test="tourId != null">
				#{tourId,jdbcType=VARCHAR},
			</if>
			<!-- <if test="createDate != null"> #{createDate,jdbcType=TIMESTAMP}, 
				</if> -->
			<if test="peerId != null">
				#{peerId,jdbcType=VARCHAR},
			</if>
			<if test="contact != null">
				#{contact,jdbcType=VARCHAR},
			</if>
			<if test="orderType != null">
				#{orderType,jdbcType=TINYINT},
			</if>
			<if test="orderTourType != null">
				#{orderTourType,jdbcType=VARCHAR},
			</if>
			<if test="arriveDate != null">
				#{arriveDate,jdbcType=DATE},
			</if>
			<if test="flightPnr != null">
				#{flightPnr,jdbcType=VARCHAR},
			</if>
			<if test="nonGroupType != null">
				#{nonGroupType,jdbcType=VARCHAR},
			</if>
			<if test="peerUserId != null">
				#{peerUserId,jdbcType=VARCHAR},
			</if>
			<if test="noticeState != null">
				#{noticeState,jdbcType=INTEGER},
			</if>
			<if test="payState != null">
				#{payState,jdbcType=TINYINT},
			</if>
			<if test="warnState != null">
				#{warnState,jdbcType=TINYINT},
			</if>
			<if test="peerState != null">
				#{peerState,jdbcType=TINYINT},
			</if>
			<if test="reviewState != null">
				#{reviewState,jdbcType=TINYINT},
			</if>
			<if test="costState != null">
				#{costState,jdbcType=TINYINT},
			</if>
			<if test="modifyDate != null">
				#{modifyDate,jdbcType=TIMESTAMP},
			</if>
			<if test="ordersTotalId != null">
				#{ordersTotalId,jdbcType=VARCHAR},
			</if>
			<if test="deptId != null">
				#{deptId,jdbcType=VARCHAR},
			</if>
			<if test="checkTime != null">
				#{checkTime,jdbcType=DATE},
			</if>
			<if test="brand != null">
				#{brand,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="isSelfOrganize != null">
				#{isSelfOrganize,jdbcType=TINYINT},
			</if>
			<if test="rate != null">
				#{rate,jdbcType=DECIMAL},
			</if>
			<if test="peerUserRate != null">
				#{peerUserRate,jdbcType=DECIMAL},
			</if>
			<if test="flag != null">
				#{flag,jdbcType=INTEGER},
			</if>
			<if test="planticket != null">
				#{planticket,jdbcType=TINYINT},
			</if>
			<if test="otherInfo != null">
				#{otherInfo,jdbcType=VARCHAR},
			</if>
			<if test="reference != null">
				#{reference,jdbcType=VARCHAR},
			</if>
			<if test="checkOutDate != null">
				#{checkOutDate,jdbcType=DATE},
			</if>
			<if test="sendingDate != null">
				#{sendingDate,jdbcType=DATE},
			</if>
			<if test="pinSigningDate != null">
				#{pinSigningDate,jdbcType=DATE},
			</if>
			<if test="cusPrice != null">
				#{cusPrice,jdbcType=VARCHAR},
			</if>
			<if test="postInfo != null">
				#{postInfo,jdbcType=VARCHAR},
			</if>
			<if test="refNo != null">
				#{refNo,jdbcType=VARCHAR},
			</if>
			<if test="peerUserName != null">
				#{peerUserName,jdbcType=VARCHAR}
			</if>
		</trim>
		FROM orders
		WHERE ordersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
	</insert>

	<update id="update" parameterType="com.chinatour.entity.Order">
		UPDATE orders
		<set>
			<if test="orderNo != null">
				OrderNo = #{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="orderNoIn != null">
				OrderNoIn = #{orderNoIn,jdbcType=VARCHAR},
			</if>
			<if test="totalPeople != null">
				TotalPeople = #{totalPeople,jdbcType=INTEGER},
			</if>
			<if test="commonTourFee != null">
				CommonTourFee = #{commonTourFee,jdbcType=DECIMAL},
			</if>
			<if test="peerUserFee != null">
				PeerUserFee=#{peerUserFee,jdbcType=DECIMAL},
			</if>
			<if test="peerUserRate != null">
				PeerUserRate=#{peerUserRate,jdbcType=DECIMAL},
			</if>
			<if test="refNo != null">
				REFNO = #{refNo,jdbcType=VARCHAR},
			</if>
			<if test="tax != null">
				Tax = #{tax,jdbcType=TINYINT},
			</if>
			<if test="state != null">
				State = #{state,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				UserId = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="tourTypeId != null">
				TourTypeId = #{tourTypeId,jdbcType=TINYINT},
			</if>
			<if test="tourCode != null">
				TourCode = #{tourCode,jdbcType=VARCHAR},
			</if>
			<if test="tourId != null">
				TourId = #{tourId,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				CreateTime = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="peerId != null">
				PeerId = #{peerId,jdbcType=VARCHAR},
			</if>
			<if test="contact != null">
				Contact = #{contact,jdbcType=VARCHAR},
			</if>
			<if test="orderType != null">
				OrderType = #{orderType,jdbcType=TINYINT},
			</if>
			<if test="orderTourType != null">
				OrderTourType = #{orderTourType,jdbcType=VARCHAR},
			</if>
			<if test="arriveDate != null">
				ArriveDate = #{arriveDate,jdbcType=DATE},
			</if>
			<if test="flightPnr != null">
				FlightPnr = #{flightPnr,jdbcType=VARCHAR},
			</if>
			<if test="nonGroupType != null">
				NonGroupType = #{nonGroupType,jdbcType=VARCHAR},
			</if>
			<if test="peerUserId != null">
				PeerUserId = #{peerUserId,jdbcType=VARCHAR},
			</if>
			<if test="peerUserName != null">
				PeerUserName = #{peerUserName,jdbcType=VARCHAR},
			</if>
			<if test="noticeState != null">
				NoticeState = #{noticeState,jdbcType=INTEGER},
			</if>
			<if test="payState != null">
				PayState = #{payState,jdbcType=TINYINT},
			</if>
			<if test="warnState != null">
				WarnState = #{warnState,jdbcType=TINYINT},
			</if>
			<if test="peerState != null">
				PeerState = #{peerState,jdbcType=TINYINT},
			</if>
			<if test="reviewState != null">
				ReviewState = #{reviewState,jdbcType=TINYINT},
			</if>
			<if test="costState != null">
				CostState = #{costState,jdbcType=TINYINT},
			</if>
			<if test="modifyDate != null">
				ModifyDate = #{modifyDate,jdbcType=TIMESTAMP},
			</if>
			<if test="ordersTotalId != null">
				OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR},
			</if>
			<if test="deptId != null">
				DeptId = #{deptId,jdbcType=VARCHAR},
			</if>
			<if test="checkTime != null">
				CheckTime = #{checkTime,jdbcType=DATE},
			</if>
			<if test="brand != null">
				Brand = #{brand,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				UserName = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="isSelfOrganize != null">
				IsSelfOrganize = #{isSelfOrganize,jdbcType=TINYINT},
			</if>
			<if test="rate != null">
				Rate = #{rate,jdbcType=DECIMAL},
			</if>
			<if test="planticket != null">
				Planticket = #{planticket,jdbcType=TINYINT},
			</if>
			<if test="cusPrice != null">
				CusPrice = #{cusPrice,jdbcType=VARCHAR},
			</if>
			<if test="postInfo != null">
				PostInfo = #{postInfo,jdbcType=VARCHAR},
			</if>
			<if test="itInfo != null">
				ItInfo = #{itInfo,jdbcType=VARCHAR},
			</if>
			<if test="otherInfo != null">
				OtherInfo = #{otherInfo,jdbcType=VARCHAR},
			</if>
			<if test="checkOutDate != null">
				CheckOutDate = #{checkOutDate,jdbcType=DATE},
			</if>
			<if test="sendingDate != null">
				SendingDate = #{sendingDate,jdbcType=DATE},
			</if>
			<if test="pinSigningDate != null">
				PinSigningDate = #{pinSigningDate,jdbcType=DATE},
			</if>
			<if test="isSuccess != null">
				IsSuccess = #{isSuccess,jdbcType=INTEGER},
			</if>
			<if test="isEdit != null">
				IsEdit = #{isEdit,jdbcType=INTEGER},
			</if>
			<if test="ifUpdateSuc != null">
				IfUpdateSuc = #{ifUpdateSuc,jdbcType=INTEGER},
			</if>
			<choose>
				<when test="reference != null">
					Reference = #{reference,jdbcType=VARCHAR}
				</when>
				<otherwise>
					Reference = ''
				</otherwise>
			</choose>
		</set>
		WHERE OrderId = #{id,jdbcType=VARCHAR}
	</update>

	<update id="updateTourOrdersByOrdersTotalId">
		UPDATE orders
		SET PeerId = #{peerId,jdbcType=VARCHAR},
		<if test="contact != null">
			Contact = #{contact,jdbcType=VARCHAR},
		</if>
		OrderType = #{orderType,jdbcType=INTEGER}
		WHERE OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
		AND OrderType != 5
	</update>

	<update id="updateSingleOrdersByOrdersTotalId">
		UPDATE orders
		SET 
		<if test="contact != null">
			Contact = #{contact,jdbcType=VARCHAR},
		</if>
		PeerId = #{peerId,jdbcType=VARCHAR}
		WHERE OrdersTotalId =
		#{ordersTotalId,jdbcType=VARCHAR}
		AND OrderType = 5
	</update>

	<update id="updateFlightPnrAndArriveDate" parameterType="com.chinatour.entity.Order">
		UPDATE orders
		SET ArriveDate = #{arriveDate,jdbcType=DATE},
		<if test="commonTourFee != null">
			CommonTourFee =
			#{commonTourFee,jdbcType=DOUBLE},
		</if>
		<if test="isEdit != null">
			IsEdit =
			#{isEdit,jdbcType=INTEGER},
		</if>
		<if test="flightPnr != null">
			FlightPnr = #{flightPnr,jdbcType=VARCHAR},
		</if>
		<if test="flightPnr == null">
			FlightPnr = '',
		</if>
		<choose>
			<when test="reference != null">
				Reference = #{reference,jdbcType=VARCHAR}
			</when>
			<otherwise>
				Reference = ''
			</otherwise>
		</choose>
		WHERE OrderId = #{id,jdbcType=VARCHAR}
	</update>

	<sql id="findForPagesql">
		SELECT
		ord.OrderId, ord.OrderNo, ord.TotalPeople, ord.CommonTourFee,v.name as
		peerId,ord.reference,ord.PeerUserFee,ord.REFNO,
		ord.Tax, ord.State,
		ord.UserId,ord.OrderType,ord.arriveDateTime,ord.LineName,ord.Contact,ord.FlightPnr,
		ord.TourTypeId,ord.TourCode, ord.TourId, ord.CreateTime,
		ord.userName,ord.OrdersTotalId,
		ord.PayState, ord.WarnState, ord.PeerState, ord.ReviewState,
		ord.CostState,ord.checkOutDate, ord.sendingDate, ord.pinSigningDate,ord.itInfo,
		ord.ScheduleLineCode AS sourceName
		FROM (
		SELECT
		o.OrderId, o.OrderNo, o.TotalPeople,
		o.CommonTourFee,o.PeerId,t.LineName,o.Contact,o.FlightPnr,o.PeerUserFee,o.REFNO,
		o.Tax, o.State, o.UserId,o.OrderType,t.ScheduleOfArriveTime as
		arriveDateTime,o.reference,t.ScheduleLineCode,
		o.TourTypeId,o.TourCode, o.TourId, o.CreateTime, o.userName,o.OrdersTotalId,
		o.PayState, o.WarnState, o.PeerState, o.ReviewState, o.CostState, o.checkOutDate,
		o.sendingDate, o.pinSigningDate,o.itInfo
		FROM orders o,admin_group a,tour_info_for_order t
		<where>
			o.UserId=a.AdminId
			AND o.OrderId = t.OrderId
			<if test="record.id != null">
				AND o.OrderId = #{record.id,jdbcType=VARCHAR}
			</if>
			<if test="record.orderNo != null">
				AND o.OrderNo LIKE CONCAT('%','${record.orderNo}','%')
			</if>
			<if test="record.refNo != null">
				AND o.REFNO LIKE CONCAT('%','${record.refNo}','%')
			</if>
			<if test="record.orderNoIn != null">
				<choose>
					<when test="record.orderNoIn=='other'">
						AND OrderNoIn !=""
					</when>
					<otherwise>
						AND OrderNoIn=#{record.orderNoIn,jdbcType=VARCHAR}
					</otherwise>
				</choose>
			</if>
			<if test="record.totalPeople != null">
				AND o.TotalPeople = #{record.totalPeople,jdbcType=INTEGER}
			</if>
			<if test="record.commonTourFee != null">
				AND o.CommonTourFee =
				#{record.commonTourFee,jdbcType=DOUBLE}
			</if>
			<if test="record.tax!=null and record.tax!=4">
				AND o.Tax=#{record.tax}
			</if>
			<if test="record.tax==4">
				AND (o.Tax=2 or o.Tax=4)
			</if>
			<if test="record.state != null">
				AND o.State = #{record.state,jdbcType=INTEGER}
			</if>
			<if test="record.userId != null">
				AND o.UserId = #{record.userId,jdbcType=VARCHAR}
			</if>
			<if test="record.tourTypeId != null">
				AND o.TourTypeId = #{record.tourTypeId,jdbcType=TINYINT}
			</if>
			<if test="record.tourCode != null">
				AND o.TourCode LIKE CONCAT('%','${record.tourCode}','%')
			</if>
			<if test="record.tourId != null">
				AND o.TourId = #{record.tourId,jdbcType=VARCHAR}
			</if>
			<if test="record.createDate != null">
				AND o.CreateTime = #{record.createDate,jdbcType=TIMESTAMP}
			</if>
			<if test="record.contact != null">
				AND o.Contact LIKE CONCAT('%','${record.contact}','%')
			</if>
			<if test="record.orderType != null">
				AND o.OrderType = #{record.orderType,jdbcType=TINYINT}
			</if>
			<if test="record.orderTourType != null">
				AND o.OrderTourType = #{record.orderTourType,jdbcType=VARCHAR}
			</if>
			<if test="record.arriveDate != null">
				AND o.ArriveDate = #{record.arriveDate,jdbcType=DATE}
			</if>
			<if test="record.flightPnr != null">
				AND o.FlightPnr LIKE CONCAT('%','${record.flightPnr}','%')
			</if>
			<if test="record.nonGroupType != null">
				AND o.NonGroupType =
				#{record.nonGroupType,jdbcType=VARCHAR}
			</if>
			<if test="record.sorceId == 1">
				AND PeerUserId = ""
			</if>
			<if test="record.sorceId == 2">
				AND PeerUserId !=""
			</if>
			<if test="record.peerUserId != null">
				AND o.PeerUserId = #{record.peerUserId,jdbcType=VARCHAR}
			</if>
			<if test="record.noticeState != null">
				AND o.NoticeState = #{record.noticeState,jdbcType=INTEGER}
			</if>
			<if test="record.payState != null">
				AND o.PayState = #{record.payState,jdbcType=TINYINT}
			</if>
			<if test="record.warnState != null">
				AND o.WarnState = #{record.warnState,jdbcType=TINYINT}
			</if>
			<if test="record.peerState != null">
				AND o.PeerState = #{record.peerState,jdbcType=TINYINT}
			</if>
			<if test="record.reviewState != null">
				AND o.ReviewState = #{record.reviewState,jdbcType=TINYINT}
			</if>
			<if test="record.costState != null">
				AND o.CostState = #{record.costState,jdbcType=TINYINT}
			</if>
			<if test="record.modifyDate != null">
				AND o.ModifyDate = #{record.modifyDate,jdbcType=TIMESTAMP}
			</if>
			<if test="record.ordersTotalId != null">
				AND o.OrdersTotalId = #{record.ordersTotalId,jdbcType=VARCHAR}
			</if>
			<if test="record.deptId != null">
				AND o.DeptId = #{record.deptId,jdbcType=VARCHAR}
			</if>
			<if test="record.groupId != null">
				AND a.GroupId = #{record.groupId,jdbcType=VARCHAR}
			</if>
			<if test="record.brand != null">
				AND o.Brand = #{record.brand,jdbcType=VARCHAR}
			</if>
			<if test="record.userName != null">
				AND o.UserName LIKE CONCAT('%','${record.userName}','%')
			</if>
			<if
				test="record.isSelfOrganize != null and record.isSelfOrganize != 3 and record.isSelfOrganize != 4">
				AND o.IsSelfOrganize = #{record.isSelfOrganize,jdbcType=TINYINT}
			</if>
			<if test="record.isSelfOrganize == 3">
				AND o.OrderTourType !='inbound_sys'
				AND o.IsSelfOrganize=0
			</if>
			<if test="record.isSelfOrganize == 4">
				AND o.OrderTourType ='inbound_sys'
			</if>
			<if test="record.rate != null">
				AND o.Rate = #{record.rate,jdbcType=DECIMAL}
			</if>
			<if test="record.reference != null">
				AND o.Reference LIKE CONCAT('%','${record.reference}','%')
			</if>
			<if test="record.beginningDate != null">
				AND t.ScheduleOfArriveTime <![CDATA[>=]]>
				#{record.beginningDate,jdbcType=TIMESTAMP}
			</if>
			<if test="record.endingDate != null">
				AND t.ScheduleOfArriveTime <![CDATA[<=]]>
				#{record.endingDate,jdbcType=TIMESTAMP}
			</if>
			<if test="record.bookingBeginningDate != null">
				AND o.CreateTime <![CDATA[>=]]>
				#{record.bookingBeginningDate,jdbcType=TIMESTAMP}
			</if>
			<if test="record.bookingEndingDate != null">
				AND DATE_FORMAT(o.CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
				#{record.bookingEndingDate,jdbcType=TIMESTAMP}
			</if>
			<if test="record.settlementDateBeg != null">
				AND o.CheckTime <![CDATA[>=]]>
				#{record.settlementDateBeg,jdbcType=TIMESTAMP}
			</if>
			<if test="record.settlementDateEnd != null">
				AND o.CheckTime <![CDATA[<=]]>
				#{record.settlementDateEnd,jdbcType=TIMESTAMP}
			</if>
			<if test="record.beginningCheckOutDate != null">
				AND o.CheckOutDate <![CDATA[>=]]>
				#{record.beginningCheckOutDate,jdbcType=DATE}
			</if>
			<if test="record.endingCheckOutDate != null">
				AND o.CheckOutDate <![CDATA[<=]]>
				#{record.endingCheckOutDate,jdbcType=DATE}
			</if>
			<if test="record.beginningSendingDate != null">
				AND o.SendingDate <![CDATA[>=]]>
				#{record.beginningSendingDate,jdbcType=DATE}
			</if>
			<if test="record.endingSendingDate != null">
				AND o.SendingDate <![CDATA[<=]]>
				#{record.endingSendingDate,jdbcType=DATE}
			</if>
			<if test="record.beginningPinSigningDate != null">
				AND o.PinSigningDate <![CDATA[>=]]>
				#{record.beginningPinSigningDate,jdbcType=DATE}
			</if>
			<if test="record.endingPinSigningDate != null">
				AND o.PinSigningDate <![CDATA[<=]]>
				#{record.endingPinSigningDate,jdbcType=DATE}
			</if>
		</where>
		) ord LEFT JOIN vender v ON ord.peerId=v.venderId
		<where>
			<if test="record.peerId != null">
				AND v.Name LIKE CONCAT('%','${record.peerId}','%')
			</if>
		</where>
		<if test="record.sorceId == 2">
			ORDER BY FIELD(ord.ReviewState,1,5) DESC,ord.CreateTime DESC
		</if> 
		<if test="record.sorceId != 2">
			ORDER BY ord.CreateTime DESC,ord.State DESC
		</if> 
	</sql>
	
	<select id="findForGroupPageForAgency" resultMap="BaseResultMapForAgency">
		<include refid="Pager.paginationStart" />
		<include refid="findForPagesql" />
		<include refid="Pager.paginationEnd" />
	</select>

	<select id="findForGroupPageCountForAgency" resultType="int">
		<include refid="Pager.countStart" />
		<include refid="findForPagesql" />
		<include refid="Pager.countEnd" />
	</select>

	<select id="findForGroupPage" resultMap="BaseResultMap">
		<include refid="Pager.paginationStart" />
		<include refid="findForPagesql" />
		<include refid="Pager.paginationEnd" />
	</select>

	<select id="findForGroupPageCount" resultType="int">
		<include refid="Pager.countStart" />
		<include refid="findForPagesql" />
		<include refid="Pager.countEnd" />
	</select>

	<!-- 订单 显示总人数 -->
	<select id="findGroupOrderSumPepole" resultType="com.chinatour.entity.Order"
		parameterType="com.chinatour.entity.Order">
		SELECT SUM(ord.TotalPeople) as TotalPeople FROM (
		SELECT
		o.*
		FROM
		orders o,admin_group a,tour_info_for_order t
		<where>
			o.UserId=a.AdminId
			AND o.OrderId = t.OrderId
			<if test="id != null">
				AND o.OrderId = #{id,jdbcType=VARCHAR}
			</if>
			<if test="orderNo != null">
				AND o.OrderNo LIKE CONCAT('%','${orderNo}','%')
			</if>
			<if test="refNo != null">
				AND o.REFNO LIKE CONCAT('%','${refNo}','%')
			</if>
			<if test="orderNoIn != null">
				<choose>
					<when test="orderNoIn=='other'">
						AND OrderNoIn !=""
					</when>
					<otherwise>
						AND OrderNoIn=#{orderNoIn,jdbcType=VARCHAR}
					</otherwise>
				</choose>
			</if>
			<if test="totalPeople != null">
				AND o.TotalPeople = #{totalPeople,jdbcType=INTEGER}
			</if>
			<if test="commonTourFee != null">
				AND o.CommonTourFee =
				#{commonTourFee,jdbcType=DOUBLE}
			</if>
			<if test="tax!=null and tax!=4">
				AND Tax=#{tax}
			</if>
			<if test="tax==4">
				AND (Tax=2 or Tax=4)
			</if>
			<if test="state != null">
				AND o.State = #{state,jdbcType=INTEGER}
			</if>
			<if test="userId != null">
				AND o.UserId = #{userId,jdbcType=VARCHAR}
			</if>
			<if test="tourTypeId != null">
				AND o.TourTypeId = #{tourTypeId,jdbcType=TINYINT}
			</if>
			<if test="tourCode != null">
				AND o.TourCode LIKE CONCAT('%','${tourCode}','%')
			</if>
			<if test="tourId != null">
				AND o.TourId = #{tourId,jdbcType=VARCHAR}
			</if>
			<if test="createDate != null">
				AND o.CreateTime = #{createDate,jdbcType=TIMESTAMP}
			</if>
			<if test="contact != null">
				AND o.Contact LIKE CONCAT('%','${contact}','%')
			</if>
			<if test="orderType != null">
				AND o.OrderType = #{orderType,jdbcType=TINYINT}
			</if>
			<if test="orderTourType != null">
				AND o.OrderTourType = #{orderTourType,jdbcType=VARCHAR}
			</if>
			<if test="arriveDate != null">
				AND o.ArriveDate = #{arriveDate,jdbcType=DATE}
			</if>
			<if test="flightPnr != null">
				AND o.FlightPnr LIKE CONCAT('%','${flightPnr}','%')
			</if>
			<if test="nonGroupType != null">
				AND o.NonGroupType =
				#{nonGroupType,jdbcType=VARCHAR}
			</if>
			<if test="peerUserId != null">
				AND o.PeerUserId = #{peerUserId,jdbcType=VARCHAR}
			</if>
			<if test="noticeState != null">
				AND o.NoticeState = #{noticeState,jdbcType=INTEGER}
			</if>
			<if test="payState != null">
				AND o.PayState = #{payState,jdbcType=TINYINT}
			</if>
			<if test="warnState != null">
				AND o.WarnState = #{warnState,jdbcType=TINYINT}
			</if>
			<if test="peerState != null">
				AND o.PeerState = #{peerState,jdbcType=TINYINT}
			</if>
			<if test="reviewState != null">
				AND o.ReviewState = #{reviewState,jdbcType=TINYINT}
			</if>
			<if test="costState != null">
				AND o.CostState = #{costState,jdbcType=TINYINT}
			</if>
			<if test="modifyDate != null">
				AND o.ModifyDate = #{modifyDate,jdbcType=TIMESTAMP}
			</if>
			<if test="ordersTotalId != null">
				AND o.OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
			</if>
			<if test="deptId != null">
				AND o.DeptId = #{deptId,jdbcType=VARCHAR}
			</if>
			<if test="groupId != null">
				AND a.GroupId = #{groupId,jdbcType=VARCHAR}
			</if>
			<if test="brand != null">
				AND o.Brand = #{brand,jdbcType=VARCHAR}
			</if>
			<if test="userName != null">
				AND o.UserName LIKE CONCAT('%','${userName}','%')
			</if>
			<if
				test="isSelfOrganize != null and isSelfOrganize != 3 and isSelfOrganize != 4">
				AND o.IsSelfOrganize = #{isSelfOrganize,jdbcType=TINYINT}
			</if>
			<if test="isSelfOrganize == 3">
				AND o.OrderTourType !='inbound_sys'
				AND o.IsSelfOrganize=0
			</if>
			<if test="isSelfOrganize == 4">
				AND o.OrderTourType ='inbound_sys'
			</if>
			<if test="rate != null">
				AND o.Rate = #{rate,jdbcType=DECIMAL}
			</if>
			<if test="reference != null">
				AND o.Reference LIKE CONCAT('%','${reference}','%')
			</if>
			<if test="beginningDate != null">
				AND t.ScheduleOfArriveTime <![CDATA[>=]]>
				#{beginningDate,jdbcType=TIMESTAMP}
			</if>
			<if test="endingDate != null">
				AND t.ScheduleOfArriveTime <![CDATA[<=]]>
				#{endingDate,jdbcType=TIMESTAMP}
			</if>
			<if test="bookingBeginningDate != null">
				AND o.CreateTime <![CDATA[>=]]>
				#{bookingBeginningDate,jdbcType=TIMESTAMP}
			</if>
			<if test="bookingEndingDate != null">
				AND DATE_FORMAT(o.CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
				#{bookingEndingDate,jdbcType=TIMESTAMP}
			</if>
			<if test="settlementDateBeg != null">
				AND o.CheckTime <![CDATA[>=]]>
				#{settlementDateBeg,jdbcType=TIMESTAMP}
			</if>
			<if test="settlementDateEnd != null">
				AND o.CheckTime <![CDATA[<=]]>
				#{settlementDateEnd,jdbcType=TIMESTAMP}
			</if>
			<if test="beginningCheckOutDate != null">
				AND o.CheckOutDate <![CDATA[>=]]>
				#{beginningCheckOutDate,jdbcType=DATE}
			</if>
			<if test="endingCheckOutDate != null">
				AND o.CheckOutDate <![CDATA[<=]]>
				#{endingCheckOutDate,jdbcType=DATE}
			</if>
			<if test="beginningSendingDate != null">
				AND o.SendingDate <![CDATA[>=]]>
				#{beginningSendingDate,jdbcType=DATE}
			</if>
			<if test="endingSendingDate != null">
				AND o.SendingDate <![CDATA[<=]]>
				#{endingSendingDate,jdbcType=DATE}
			</if>
			<if test="beginningPinSigningDate != null">
				AND o.PinSigningDate <![CDATA[>=]]>
				#{beginningPinSigningDate,jdbcType=DATE}
			</if>
			<if test="endingPinSigningDate != null">
				AND o.PinSigningDate <![CDATA[<=]]>
				#{endingPinSigningDate,jdbcType=DATE}
			</if>
		</where>
		) ord LEFT JOIN vender v ON ord.peerId=v.venderId
		<where>
			<if test="peerId != null">
				AND v.Name LIKE CONCAT('%','${peerId}','%')
			</if>
		</where>
	</select>

	<select id="findUserOfOrder" resultMap="BaseResultMap"
		parameterType="com.chinatour.entity.Order">
		SELECT
		<include refid="Base_Column_List" />
		FROM orders
		<where>
			<if test="tourCode != null">
				AND TourCode = #{tourCode,jdbcType=VARCHAR}
			</if>
			<if test="tourId != null">
				AND TourId = #{tourId,jdbcType=VARCHAR}
			</if>
			<if test="userId != null">
				AND UserId = #{userId,jdbcType=VARCHAR}
			</if>
		</where>
		GROUP BY UserId
	</select>

	<update id="changeTotalPeopleByOrderId">
		UPDATE orders SET TotalPeople = TotalPeople + #{change,jdbcType=INTEGER},
		ModifyDate = NOW()
		WHERE OrderId = #{orderId,jdbcType=VARCHAR}
	</update>

	<update id="setTotalPeopleByOrderId">
		UPDATE orders SET TotalPeople = #{totalPeople,jdbcType=INTEGER}
		WHERE OrderId = #{orderId,jdbcType=VARCHAR}
	</update>

	<update id="changeTotalPeopleInExistOrders">
		UPDATE orders SET TotalPeople = TotalPeople + #{change,jdbcType=INTEGER},
		ModifyDate = NOW()
		WHERE OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
		AND State IN (0,2,3,7)
	</update>

	<update id="changeTotalPeopleByOrdersTotalId">
		UPDATE orders SET TotalPeople = TotalPeople + #{change,jdbcType=INTEGER},
		ModifyDate = NOW()
		WHERE OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
		AND State !=4
	</update>

	<update id="changeStateByOrderId">
		UPDATE orders SET State = #{state,jdbcType=INTEGER}
		WHERE OrderId = #{orderId,jdbcType=VARCHAR}
	</update>

	<update id="changeTotalPeopleOfStateByOrderId">
		UPDATE orders SET State = #{state,jdbcType=INTEGER},
		TotalPeople=#{change,jdbcType=INTEGER}
		WHERE OrderId =
		#{orderId,jdbcType=VARCHAR}
	</update>

	<select id="findOrderOfPayOrCost" resultMap="ResultMapForPayOrCost"
		parameterType="com.chinatour.entity.Order">
		SELECT
		<include refid="Base_Column_List" />
		FROM orders
		<where>
			<if test="userId != null">
				UserId = #{userId,jdbcType=VARCHAR}
			</if>
			<if test="tourId != null">
				AND TourId = #{tourId,jdbcType=VARCHAR}
			</if>
			<if test="ordersTotalId != null">
				AND OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
			</if>
		</where>
	</select>

	<select id="findOrderProfit" resultType="com.chinatour.entity.Order"
		parameterType="com.chinatour.entity.Order">
		SELECT
		o.OrderId,
		o.OrderNo,
		o.userId,
		ROUND(Sum(IF(p.PayOrCost=1,p.sum,0)),2) as payTotalSum,
		ROUND(Sum(IF(p.PayOrCost=2,p.sum,0)),2) as costTotalSum
		FROM
		orders o
		left join
		pay_cost_records p on o.OrderId=p.OrderId
		<where>
			<if test="type!=null">
				AND p.type <![CDATA[<>]]>
				#{type}
			</if>
			<if test="id != null">
				AND o.OrderId = #{id,jdbcType=VARCHAR}
			</if>
		</where>
	</select>

	<select id="countExistOrdersInOrdersTotal" resultType="java.lang.Integer">
		SELECT
		COUNT(OrderId)
		FROM orders
		WHERE OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
		AND State IN (0,2,3,7)
	</select>

	<!-- //团队结算 -->
	<sql id="findOrderOfTourTaxList">
		SELECT
		expm.*,
		ss.SprCheck
		FROM
		(
		SELECT
		o.OrderId,
		o.OrderNo,
		o.TotalPeople,
		o.Tax,
		o.State,
		a.id,
		a.UserName,
		o.TourCode,
		o.userId,
		o.CreateTime,
		o.orderTourType,
		o.WarnState,
		o.ReviewState,
		t.TourId,
		t.arriveDateTime
		FROM
		Orders o,
		zs_admin a,
		Dept d,
		Tour t
		WHERE o.UserId=a.id
		AND a.DeptId=d.DeptId
		AND o.TourId=t.TourId
		<if test="record.id!= null">
			AND o.OrderId=#{record.id}
		</if>
		<if test="record.orderNo!=null">
			AND o.OrderNo LIKE CONCAT(CONCAT('%',#{record.orderNo}),'%')
		</if>
		<if test="record.orderTourType!=null">
			AND o.orderTourType=#{record.orderTourType}
		</if>
		<if test="record.tax!=null and record.tax!=2">
			AND o.Tax=#{record.tax}
		</if>
		<if test="record.tax==2">
			AND (o.Tax=2 or o.Tax=4)
		</if>
		<if test="record.state!=null and record.state!=0">
			AND o.State=#{record.state}
		</if>
		<if test="record.warnState!=null">
			AND o.WarnState=#{record.warnState}
		</if>
		<if test="record.userName!=null">
			AND a.userName LIKE CONCAT(CONCAT('%',#{record.userName}),'%')
		</if>
		<if test="record.deptId!=null">
			AND d.DeptId=#{record.deptId}
		</if>
		<!-- <if test="record.startTime!=null"> AND DATE_FORMAT(t.arriveDateTime,'%Y-%m-%d')>=DATE_FORMAT(#{record.startTime},'%Y-%m-%d') 
			</if> <if test="record.endTime!=null"> AND DATE_FORMAT(#{record.endTime},'%Y-%m-%d')>=DATE_FORMAT(t.arriveDateTime,'%Y-%m-%d') 
			</if> -->
		<if test="record.tourCode!=null">
			AND t.TourCode LIKE CONCAT(CONCAT('%',#{record.tourCode}),'%')
		</if>
		ORDER BY o.WarnState DESC,t.arriveDateTime DESC
		) expm
		LEFT JOIN(
		SELECT
		sr.TourId,
		sr.SprCheck,
		sc.UserIdOfAgent
		FROM
		SupplierPriceRemark sr,
		SupplierCheck sc
		WHERE sr.SupplierCheckId=sc.SupplierCheckId
		AND sr.Type=1
		AND (sr.isDel=0 OR sr.isDel IS NULL)
		AND (sr.SprCheck=1 OR sr.SprCheck=3 OR sr.SprCheck=5)
		<if test="record.sprCheck!=null">
			AND sr.SprCheck=#{record.sprCheck}
		</if>
		GROUP BY sr.TourId,sc.UserIdOfAgent
		ORDER BY sr.SprCheck ASC
		) ss
		ON expm.TourId=ss.TourId
		AND expm.id=ss.UserIdOfAgent
		AND (ss.SprCheck=1
		OR ss.SprCheck=3 OR ss.SprCheck=5)
		WHERE 1=1
		<if test="record.sprCheck!=null">
			AND ss.SprCheck=#{record.sprCheck}
		</if>
		GROUP BY expm.OrderId
		ORDER BY expm.WarnState DESC,ss.SprCheck ASC
		,expm.arriveDateTime DESC
	</sql>

	<select id="findOrderOfTourTaxPage" resultMap="BaseResultMap">
		<include refid="Pager.paginationStart" />
		<include refid="findOrderOfTourTaxList" />
		<include refid="Pager.paginationEnd" />
	</select>

	<select id="findOrderOfTourTaxPageCount" resultType="int">
		<include refid="Pager.countStart" />
		<include refid="findOrderOfTourTaxList" />
		<include refid="Pager.countEnd" />
	</select>

	<!-- region 订单查看 -->
	<sql id="findOrderOfRegionList">
		SELECT ord.*,v.name as peerId,g.source FROM (
		SELECT
		o.OrderId OrderId,OrderNo, OrderNoIn, TotalPeople, CommonTourFee,PeerUserFee,
		Tax, State, UserId, o.TourTypeId, Contact,o.refNo,
		o.TourCode, TourId, o.CreateTime, PeerId as peer,
		OrderType, OrderTourType, ArriveDate, FlightPnr,
		NonGroupType, NoticeState, o.Brand, IsSelfOrganize, Rate,
		PayState, WarnState, PeerState, ReviewState, CostState,exmp.DeptName,
		ModifyDate,OrdersTotalId,CheckTime,UserName,t.LineName
		LineName,t.ScheduleLineCode ScheduleLineCode,t.ScheduleOfArriveTime
		arriveDateTime,t.grouplineId
		FROM
		orders o,tour_info_for_order t,
		(
		SELECT
		d.DeptId,d.DeptName
		FROM
		zs_admin za,admin_region ar,region r,dept d,region_dept_rel rd
		<where>
			za.id=ar.AdminId
			AND r.RegionId=ar.RegionId
			AND rd.RegionId=r.RegionId
			AND rd.DeptId=d.DeptId
			<if test="record.userId!= null">
				AND ar.AdminId=#{record.userId}
			</if>
			<if test="record.deptId!= null">
				AND d.deptName=#{record.deptId}
			</if>
			GROUP BY d.DeptId
		</where>
		)exmp
		where exmp.DeptId=o.DeptId
		AND o.OrderId = t.OrderId
		<if test="record.id != null">
			AND o.OrderId = #{record.id,jdbcType=VARCHAR}
		</if>
		<if test="record.orderNo != null">
			AND o.OrderNo LIKE CONCAT('%','${record.orderNo}','%')
		</if>
		<if test="record.refNo != null">
			AND o.REFNO LIKE CONCAT('%','${record.refNo}','%')
		</if>
		<if test="record.userName != null">
			AND o.UserName LIKE CONCAT('%','${record.userName}','%')
		</if>
		<if test="record.orderNoIn != null">
			AND o.OrderNoIn = #{record.orderNoIn,jdbcType=VARCHAR}
		</if>
		<if test="record.totalPeople != null">
			AND o.TotalPeople = #{record.totalPeople,jdbcType=INTEGER}
		</if>
		<if test="record.commonTourFee != null">
			AND o.CommonTourFee =
			#{record.commonTourFee,jdbcType=DECIMAL}
		</if>
		<if test="record.tax!=null and record.tax!=4">
			AND o.Tax=#{record.tax}
		</if>
		<if test="record.tax==4">
			AND (o.Tax=2 or o.Tax=4)
		</if>
		<if test="record.state != null and record.state != 5">
			AND o.State = #{record.state,jdbcType=VARCHAR}
		</if>
		<if test="record.state == 5">
			AND o.State !=5
			AND o.State !=6
		</if>
		<if test="record.tourTypeId != null">
			AND o.TourTypeId = #{record.tourTypeId,jdbcType=TINYINT}
		</if>
		<if test="record.tourCode != null">
			AND o.TourCode LIKE CONCAT('%','${record.tourCode}','%')
		</if>
		<if test="record.tourId != null">
			AND o.TourId = #{record.tourId,jdbcType=VARCHAR}
		</if>
		<if test="record.createDate != null">
			AND o.CreateTime = #{record.createDate,jdbcType=TIMESTAMP}
		</if>
		<if test="record.contact != null">
			AND o.Contact = #{record.contact,jdbcType=VARCHAR}
		</if>
		<if test="record.orderType != null">
			AND o.OrderType = #{record.orderType,jdbcType=TINYINT}
		</if>
		<if test="record.orderTourType != null">
			AND o.OrderTourType = #{record.orderTourType,jdbcType=VARCHAR}
		</if>
		<if test="record.arriveDate != null">
			AND o.ArriveDate = #{record.arriveDate,jdbcType=DATE}
		</if>
		<if test="record.flightPnr != null">
			AND o.FlightPnr = #{record.flightPnr,jdbcType=VARCHAR}
		</if>
		<if test="record.nonGroupType != null">
			AND o.NonGroupType =
			#{record.nonGroupType,jdbcType=VARCHAR}
		</if>
		<if test="record.noticeState != null">
			AND o.NoticeState = #{record.noticeState,jdbcType=INTEGER}
		</if>
		<if test="record.payState != null">
			AND o.PayState = #{record.payState,jdbcType=TINYINT}
		</if>
		<if test="record.warnState != null">
			AND o.WarnState = #{record.warnState,jdbcType=TINYINT}
		</if>
		<if test="record.peerState != null">
			AND o.PeerState = #{record.peerState,jdbcType=TINYINT}
		</if>
		<if test="record.reviewState != null">
			AND o.ReviewState = #{record.reviewState,jdbcType=TINYINT}
		</if>
		<if test="record.costState != null">
			AND o.CostState = #{record.costState,jdbcType=TINYINT}
		</if>
		<if test="record.modifyDate != null">
			AND o.ModifyDate = #{record.modifyDate,jdbcType=TIMESTAMP}
		</if>
		<if test="record.ordersTotalId != null">
			AND o.OrdersTotalId = #{record.ordersTotalId,jdbcType=VARCHAR}
		</if>
		<if test="record.reference != null">
			AND o.Reference = #{record.reference,jdbcType=VARCHAR}
		</if>
		<if test="record.beginningDate != null">
			AND t.ScheduleOfArriveTime <![CDATA[>=]]>
			#{record.beginningDate,jdbcType=TIMESTAMP}
		</if>
		<if test="record.endingDate != null">
			AND t.ScheduleOfArriveTime <![CDATA[<=]]>
			#{record.endingDate,jdbcType=TIMESTAMP}
		</if>
		<if test="record.bookingBeginningDate != null">
			AND o.CreateTime <![CDATA[>=]]>
			#{record.bookingBeginningDate,jdbcType=TIMESTAMP}
		</if>
		<if test="record.bookingEndingDate != null">
			AND DATE_FORMAT(o.CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
			#{record.bookingEndingDate,jdbcType=TIMESTAMP}
		</if>
		<if test="record.brand != null">
			AND o.brand LIKE CONCAT('%','${record.brand}','%')
		</if>
		<if
			test="record.isSelfOrganize != null and record.isSelfOrganize != 3 and record.isSelfOrganize != 4">
			AND o.IsSelfOrganize = #{record.isSelfOrganize,jdbcType=TINYINT}
		</if>
		<if test="record.isSelfOrganize == 3">
			AND o.OrderTourType !='inbound_sys'
			AND o.IsSelfOrganize=0
		</if>
		<if test="record.isSelfOrganize == 4">
			AND o.OrderTourType ='inbound_sys'
		</if>
		<if test="record.wr =='Retail'">
			AND o.PeerId =''
		</if>
		<if test="record.wr =='WholeSale'">
			AND o.PeerId !=''
		</if>
		)ord LEFT JOIN vender v ON ord.peer=v.venderId 
		LEFT JOIN groupline g ON  ord.grouplineId = g.grouplineId
		<where>
			<if test="record.peerId != null">
				v.Name LIKE CONCAT('%','${record.peerId}','%')
			</if>
			<if test="record.source != null">
				AND g.Source LIKE CONCAT('%','${record.source}','%')
			</if>
		</where>
		ORDER BY ord.CreateTime DESC
	</sql>

	<select id="findOrderOfRegionPage" resultMap="ResultForTypeNameMap">
		<include refid="Pager.paginationStart" />
		<include refid="findOrderOfRegionList" />
		<include refid="Pager.paginationEnd" />
	</select>

	<select id="findOrderOfRegionPageCount" resultType="int">
		<include refid="Pager.countStart" />
		<include refid="findOrderOfRegionList" />
		<include refid="Pager.countEnd" />
	</select>

	<!-- 订单 显示总人数 -->
	<select id="findRegionOrderSumPepole" resultType="com.chinatour.entity.Order"
		parameterType="com.chinatour.entity.Order">
		SELECT
		SUM(ord.TotalPeople) as TotalPeople
		FROM (
		SELECT
		o.*
		FROM
		orders o,tour_info_for_order t,
		(
		SELECT
		d.DeptId,d.DeptName
		FROM
		zs_admin za,admin_region ar,region r,dept d,region_dept_rel rd
		<where>
			za.id=ar.AdminId
			AND r.RegionId=ar.RegionId
			AND rd.RegionId=r.RegionId
			AND rd.DeptId=d.DeptId
			<if test="userId!= null">
				AND ar.AdminId=#{userId}
			</if>
			<if test="deptId!= null">
				AND d.deptName=#{deptId}
			</if>
			GROUP BY d.DeptId
		</where>
		)exmp
		where exmp.DeptId=o.DeptId
		AND o.OrderId = t.OrderId
		<if test="id != null">
			AND o.OrderId = #{id,jdbcType=VARCHAR}
		</if>
		<if test="orderNo != null">
			AND o.OrderNo LIKE CONCAT('%','${orderNo}','%')
		</if>
		<if test="orderNoIn != null">
			AND o.OrderNoIn = #{orderNoIn,jdbcType=VARCHAR}
		</if>
		<if test="totalPeople != null">
			AND o.TotalPeople = #{totalPeople,jdbcType=INTEGER}
		</if>
		<if test="userName != null">
			AND o.UserName LIKE CONCAT('%','${userName}','%')
		</if>
		<if test="commonTourFee != null">
			AND o.CommonTourFee =
			#{commonTourFee,jdbcType=DECIMAL}
		</if>
		<if test="tax!=null and tax!=4">
			AND Tax=#{tax}
		</if>
		<if test="tax==4">
			AND (Tax=2 or Tax=4)
		</if>
		<if test="state != null and state != 5">
			AND o.State = #{state,jdbcType=VARCHAR}
		</if>
		<if test="state == 5">
			AND o.State !=5
			AND o.State !=6
		</if>
		<if test="tourTypeId != null">
			AND o.TourTypeId = #{tourTypeId,jdbcType=TINYINT}
		</if>
		<if test="tourCode != null">
			AND o.TourCode LIKE CONCAT('%','${tourCode}','%')
		</if>
		<if test="tourId != null">
			AND o.TourId = #{tourId,jdbcType=VARCHAR}
		</if>
		<if test="createDate != null">
			AND o.CreateTime = #{createDate,jdbcType=TIMESTAMP}
		</if>
		<if test="contact != null">
			AND o.Contact = #{contact,jdbcType=VARCHAR}
		</if>
		<if test="orderType != null">
			AND o.OrderType = #{orderType,jdbcType=TINYINT}
		</if>
		<if test="orderTourType != null">
			AND o.OrderTourType = #{orderTourType,jdbcType=VARCHAR}
		</if>
		<if test="arriveDate != null">
			AND o.ArriveDate = #{arriveDate,jdbcType=DATE}
		</if>
		<if test="reference != null">
			AND o.Reference = #{reference,jdbcType=VARCHAR}
		</if>
		<if test="flightPnr != null">
			AND o.FlightPnr = #{flightPnr,jdbcType=VARCHAR}
		</if>
		<if test="nonGroupType != null">
			AND o.NonGroupType =
			#{nonGroupType,jdbcType=VARCHAR}
		</if>
		<if test="peerUserId != null">
			AND o.PeerUserId = #{peerUserId,jdbcType=VARCHAR}
		</if>
		<if test="noticeState != null">
			AND o.NoticeState = #{noticeState,jdbcType=INTEGER}
		</if>
		<if test="payState != null">
			AND o.PayState = #{payState,jdbcType=TINYINT}
		</if>
		<if test="warnState != null">
			AND o.WarnState = #{warnState,jdbcType=TINYINT}
		</if>
		<if test="peerState != null">
			AND o.PeerState = #{peerState,jdbcType=TINYINT}
		</if>
		<if test="reviewState != null">
			AND o.ReviewState = #{reviewState,jdbcType=TINYINT}
		</if>
		<if test="costState != null">
			AND o.CostState = #{costState,jdbcType=TINYINT}
		</if>
		<if test="modifyDate != null">
			AND o.ModifyDate = #{modifyDate,jdbcType=TIMESTAMP}
		</if>
		<if test="ordersTotalId != null">
			AND o.OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
		</if>
		<if test="beginningDate != null">
			AND t.ScheduleOfArriveTime <![CDATA[>=]]>
			#{beginningDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endingDate != null">
			AND t.ScheduleOfArriveTime <![CDATA[<=]]>
			#{endingDate,jdbcType=TIMESTAMP}
		</if>
		<if test="bookingBeginningDate != null">
			AND o.CreateTime <![CDATA[>=]]>
			#{bookingBeginningDate,jdbcType=TIMESTAMP}
		</if>
		<if test="bookingEndingDate != null">
			AND DATE_FORMAT(o.CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
			#{bookingEndingDate,jdbcType=TIMESTAMP}
		</if>
		<if test="brand != null">
			AND o.brand LIKE CONCAT('%','${brand}','%')
		</if>
		<if
			test="isSelfOrganize != null and isSelfOrganize != 3 and isSelfOrganize != 4">
			AND o.IsSelfOrganize = #{isSelfOrganize,jdbcType=TINYINT}
		</if>
		<if test="isSelfOrganize == 3">
			AND o.OrderTourType !='inbound_sys'
			AND o.IsSelfOrganize=0
		</if>
		<if test="isSelfOrganize == 4">
			AND o.OrderTourType ='inbound_sys'
		</if>
		<if test="wr =='Retail'">
			AND o.PeerId =''
		</if>
		<if test="wr =='WholeSale'">
			AND o.PeerId !=''
		</if>
		)ord LEFT JOIN vender v ON ord.peerId=v.venderId
		<where>
			<if test="peerId != null">
				v.Name LIKE CONCAT('%','${peerId}','%')
			</if>
		</where>
	</select>

	<!-- 查看团下所以客人 -->
	<select id="findCustomerForTourId" resultMap="ResultCustomerForOrderMap"
		parameterType="java.lang.String">
		SELECT
		<include refid="Base_Column_List" />
		FROM orders
		WHERE TourId = #{tourId,jdbcType=VARCHAR}
		ORDER BY CreateTime
	</select>
	<!-- 查看订单下所以客人 -->
	<select id="findCustomerForOrderId" resultMap="ResultCustomerForOrderMap"
		parameterType="java.lang.String">
		SELECT
		<include refid="Base_Column_List" />
		FROM orders
		WHERE OrderId = #{id,jdbcType=VARCHAR}
	</select>

	<select id="findChildOrderList" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		SELECT
		o.OrderId,
		o.OrderNo,
		o.OrderNoIn,
		o.TotalPeople,
		o.CommonTourFee,
		o.PeerUserFee,
		o.Tax,
		o.State,
		o.UserId,
		o.rate,
		t.LineName AS TourTypeId,
		o.Contact,
		o.TourCode,
		o.TourId,
		o.CreateTime,
		o.PeerId,
		o.OrderType,
		o.OrderTourType,
		o.ArriveDate,
		o.FlightPnr,
		o.NonGroupType,
		o.PeerUserId,
		o.NoticeState,
		o.Brand,
		o.PayState,
		o.WarnState,
		o.PeerState,
		o.ReviewState,
		o.CostState,
		o.ModifyDate,
		o.OrdersTotalId,
		o.DeptId,
		o.CheckTime,
		o.userName,
		o.IsSelfOrganize,
		o.itInfo,
		t.ScheduleOfArriveTime AS arriveDateTime
		FROM orders
		o,tour_info_for_order t
		WHERE
		o.OrderId=t.OrderId
		AND OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
		Order By o.OrderNo
	</select>

	<!-- 查看团下所以客人根据团客人编号排序 -->
	<select id="findCustomerListByTourId" resultMap="ResultForCustomerMap"
		parameterType="com.chinatour.entity.Order">
		SELECT
		o.OrderId, o.OrderNo, o.State,o.UserId,o.TourCode, o.TourId,
		o.userName,o.OrdersTotalId,t.tourInfo AS otherInfo,t.specialRequirements As lineName,
		cor.CustomerOrderRelId,cor.CustomerTourNo,cor.IsDel,cor.customerId,cor.GuestRoomType,cor.roomNumber AS sprCheck,
		cor.CustomerOrderNo,cor.TicketType,cor.carName,cor.voucherStr as wr
		FROM orders o,tour_info_for_order t,customer_order_rel cor
		WHERE o.OrderId=cor.OrderId 
			AND o.OrderId=t.OrderId
		<if test="id != null">
			AND o.OrderId = #{id,jdbcType=VARCHAR}
		</if>
		<if test="tourTypeId != null">
			AND o.TourTypeId = #{tourTypeId,jdbcType=TINYINT}
		</if>
		<if test="tourId != null">
			AND o.TourId = #{tourId,jdbcType=VARCHAR}
		</if>
		<if test="isDel != null">
			AND cor.IsDel = #{isDel,jdbcType=VARCHAR}
		</if>
		ORDER BY cor.CustomerTourNo,cor.CustomerOrderNo
	</select>
	<!-- 根据ordersTotal查询共计应收团款 -->
	<select id="findSumFeeByOrdersTotalId" resultType="DECIMAL"
		parameterType="java.lang.String">
		SELECT
		ROUND(SUM(CommonTourFee),2) as SumFee
		FROM orders
		WHERE OrdersTotalId =
		#{ordersTotalId,jdbcType=VARCHAR}
	</select>

	<!-- 根据orderId查询输入支出 -->
	<select id="findSumPayOrCostByOrdersId" resultType="com.chinatour.entity.Order"
		parameterType="java.lang.String">
		SELECT
		ROUND(Sum(IF(p.PayOrCost=1,p.sum,0)),2) as payTotalSum,
		ROUND(Sum(IF(p.PayOrCost=2,p.sum,0)),2) as costTotalSum
		FROM pay_cost_records p, orders o
		WHERE
		p.orderId=o.orderId
		AND o.ordersTotalId =
		#{ordersTotalId,jdbcType=VARCHAR}
	</select>
	<select id="queryOrderByCusId" resultType="com.chinatour.entity.Order"
		parameterType="java.lang.String">
		SELECT
		c.CustomerID,
		o.TourCode,
		ot.OrdersTotalId,
		o.OrderId as id,
		o.UserName,
		o.UserId,
		o.orderNo,
		o.REFNO AS refNo,
		o.peerId
		FROM
		orders o ,
		customer_order_rel co,
		Customer c,
		orders_total ot
		WHERE
		o.OrderId=co.OrderId
		AND ot.OrdersTotalId=o.OrdersTotalId
		AND c.CustomerId=co.CustomerId
		AND c.CustomerId=#{customerId}
	</select>

	<sql id="findOrderTaxs_sql">
		SELECT
		expm.orderId,expm.OrdersTotalId,expm.OrderNo,expm.userName,expm.CommonTourFee,expm.state,
		expm.tax,expm.createTime,expm.userId,expm.CheckTime,expm.totalPeople,expm.tourCode,v.Name
		as peerId,
		ss.SprCheck,expm.tourTypeId
		FROM
		(
		SELECT
		o.orderId,o.OrdersTotalId,o.OrderNo,o.userName,ROUND(o.CommonTourFee,2)
		as CommonTourFee,o.state,
		o.tax,o.createTime,o.userId,o.CheckTime,o.totalPeople,o.tourCode,o.peerId,o.tourTypeId
		FROM orders o ,tour_info_for_order t
		WHERE t.OrderId=o.OrderId
		<if test="record.ordersTotalId != null">
			AND o.OrdersTotalId = #{record.ordersTotalId,jdbcType=VARCHAR}
		</if>
		<if test="record.orderNo != null">
			AND o.OrderNo LIKE CONCAT('%','${record.orderNo}','%')
		</if>
		<if test="record.totalPeople != null">
			AND o.TotalPeople = #{record.totalPeople,jdbcType=INTEGER}
		</if>
		<if test="record.deptId != null">
			AND o.DeptId = #{record.deptId,jdbcType=VARCHAR}
		</if>
		<if test="record.userId != null">
			AND o.UserId = #{record.userId,jdbcType=VARCHAR}
		</if>
		<if test="record.isSelfOrganize != null">
			AND o.IsSelfOrganize = #{record.isSelfOrganize,jdbcType=TINYINT}
		</if>
		<if test="record.bookingBeginningDate != null">
			AND o.CreateTime <![CDATA[>=]]>
			#{record.bookingBeginningDate,jdbcType=TIMESTAMP}
		</if>
		<if test="record.bookingEndingDate != null">
			AND DATE_FORMAT(o.CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
			#{record.bookingEndingDate,jdbcType=TIMESTAMP}
		</if>
		<if test="record.arrivalBeginningDate != null">
			AND t.ScheduleOfArriveTime <![CDATA[>=]]>
			#{record.arrivalBeginningDate,jdbcType=TIMESTAMP}
		</if>
		<if test="record.arrivalEndingDate!= null">
			AND t.ScheduleOfArriveTime <![CDATA[<=]]>
			#{record.arrivalEndingDate,jdbcType=TIMESTAMP}
		</if>
		<if test="record.settlementDateBeg != null">
			AND o.CheckTime <![CDATA[>=]]>
			#{record.settlementDateBeg,jdbcType=TIMESTAMP}
		</if>
		<if test="record.settlementDateEnd != null">
			AND o.CheckTime <![CDATA[<=]]>
			#{record.settlementDateEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="record.userName != null">
			AND o.userName LIKE CONCAT('%','${record.userName}','%')
		</if>
		<if test="record.tax!=null and record.tax!=2">
			AND o.Tax=#{record.tax}
		</if>
		<if test="record.tax==2">
			AND (o.Tax=2 or o.Tax=4)
		</if>
		<if test="record.tourCode != null">
			AND o.TourCode LIKE CONCAT('%','${record.tourCode}','%')
		</if>
		)expm LEFT JOIN vender v ON v.venderId=expm.peerId
		LEFT JOIN(
		SELECT
		sr.SprCheck,
		sr.orderId
		FROM
		SupplierPriceRemark sr
		WHERE sr.Type=1
		AND (sr.isDel=0 OR sr.isDel IS NULL)
		AND (sr.SprCheck=1 OR sr.SprCheck=3 OR sr.SprCheck=5)
		)ss
		ON ss.orderId=expm.orderId
		<where>
			<if test="record.sprCheck!= null">
				ss.SprCheck=#{record.sprCheck}
			</if>
			<if test="record.peerId != null">
				AND v.Name LIKE CONCAT('%','${record.peerId}','%')
			</if>
		</where>
		GROUP BY expm.orderId
		ORDER BY expm.CreateTime DESC,expm.tourCode DESC
	</sql>

	<select id="findOrdersTaxPage" resultMap="ResultMapForSumPayOrCost">
		<include refid="Pager.paginationStart" />
		<include refid="findOrderTaxs_sql" />
		<include refid="Pager.paginationEnd" />
	</select>

	<select id="findOrdersTaxPageCount" resultType="int">
		<include refid="Pager.countStart" />
		<include refid="findOrderTaxs_sql" />
		<include refid="Pager.countEnd" />
	</select>

	<!-- 总订单 显示总人数 -->
	<select id="findSumPepoleAndPayOrCost" resultType="com.chinatour.entity.Order"
		parameterType="com.chinatour.entity.Order">
		SELECT
			SUM(tt.TotalPeople) as TotalPeople,
			SUM(tt.CommonTourFee) as CommonTourFee,SUM(tt.payTotalSum) as payTotalSum,SUM(tt.costTotalSum) as costTotalSum, SUM(tt.priceExpression) as priceExpression
		FROM (
		SELECT o.TotalPeople, o.CommonTourFee,o.payTotalSum,o.costTotalSum,IF(o.state!=5,IF(o.state!=6,(payTotalSum-costTotalSum)*o.priceExpression,0),0) as priceExpression from (
			SELECT os.TotalPeople,
			os.CommonTourFee,ROUND(Sum(IF(p.PayOrCost=1,p.sum,0)),2) as payTotalSum, ROUND(Sum(IF(p.PayOrCost=2,p.sum,0)),2) as costTotalSum,os.state,os.priceExpression FROM
				(
				SELECT
					expm.*
				FROM 
					(
					SELECT tt.*,tp.priceExpression From (
						SELECT
							o.orderId,o.OrdersTotalId,o.OrderNo,o.userName,CommonTourFee,
							o.tax,o.createTime,o.userId,o.CheckTime,o.totalPeople,o.peerId,o.state,o.TourTypeId
						FROM orders o ,tour_info_for_order t
						WHERE  t.OrderId=o.OrderId
						<if test="ordersTotalId != null">
							AND o.OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
						</if>
						<if test="orderNo != null">
							AND o.OrderNo LIKE CONCAT('%','${orderNo}','%')
						</if>
						<if test="totalPeople != null">
							AND o.TotalPeople = #{totalPeople,jdbcType=INTEGER}
						</if>
						<if test="deptId != null">
							AND o.DeptId = #{deptId,jdbcType=VARCHAR}
						</if>
						<if test="userId != null">
							AND o.UserId = #{userId,jdbcType=VARCHAR}
						</if>
						<if test="isSelfOrganize != null">
							AND o.IsSelfOrganize = #{isSelfOrganize,jdbcType=TINYINT}
						</if>
						<if test="bookingBeginningDate != null">
							AND o.CreateTime <![CDATA[>=]]> #{bookingBeginningDate,jdbcType=TIMESTAMP}
						</if>
						<if test="bookingEndingDate != null">
							AND DATE_FORMAT(o.CreateTime,'%Y-%m-%d') <![CDATA[<=]]> #{bookingEndingDate,jdbcType=TIMESTAMP}
						</if>
						<if test="arrivalBeginningDate != null">
							AND t.ScheduleOfArriveTime <![CDATA[>=]]> #{arrivalBeginningDate,jdbcType=TIMESTAMP}
						</if>
						<if test="arrivalEndingDate!= null">
							AND t.ScheduleOfArriveTime <![CDATA[<=]]> #{arrivalEndingDate,jdbcType=TIMESTAMP}
						</if>
						<if test="settlementDateBeg != null">
							AND o.CheckTime <![CDATA[>=]]> #{settlementDateBeg,jdbcType=TIMESTAMP}
						</if>
						<if test="settlementDateEnd != null">
							AND o.CheckTime <![CDATA[<=]]> #{settlementDateEnd,jdbcType=TIMESTAMP}
						</if>
						<if test="userName != null">
							AND o.userName LIKE CONCAT('%','${userName}','%')
						</if>
						<if test="tax!=null and tax!=2" >
							AND o.Tax=#{tax}
						</if>
						<if test="tax==2">
							AND (o.Tax=2 or o.Tax=4)
						</if>
						<if test="tourCode != null">
							AND o.TourCode LIKE CONCAT('%','${tourCode}','%')
						</if>
						)tt LEFT JOIN tour_type tp ON tp.tourTypeId=tt.TourTypeId
					)expm LEFT JOIN vender v ON v.venderId=expm.peerId
						LEFT JOIN(
							SELECT
								sr.SprCheck,
								sr.orderId
							FROM 
								SupplierPriceRemark sr
							WHERE sr.Type=1
								AND (sr.isDel=0 OR sr.isDel IS NULL)
								AND (sr.SprCheck=1 OR sr.SprCheck=3 OR sr.SprCheck=5)
							)ss 
				ON ss.orderId=expm.orderId
				<where>
					<if test="sprCheck!= null">
						ss.SprCheck=#{sprCheck}
					</if>
					<if test="peerId != null">
						AND v.Name LIKE CONCAT('%','${peerId}','%')
					</if>
				</where>
				GROUP BY expm.orderId
			)os LEFT JOIN pay_cost_records p
			on os.orderId=p.OrderId
			GROUP BY os.orderId
			)o
		)tt
	</select>

	<!-- 打印 账单结算 总人数总收入支出 -->
	<select id="findOrderTaxPrint" resultMap="ResultMapForSumPayOrCost"
		parameterType="com.chinatour.entity.Order">
		SELECT
		expm.orderId,expm.OrdersTotalId,expm.OrderNo,expm.userName,expm.CommonTourFee,expm.tourId,
		expm.tax,expm.createTime,expm.userId,expm.CheckTime,expm.totalPeople,expm.tourCode,v.Name
		as peerId,
		ss.SprCheck,expm.tourTypeId,expm.orderType,expm.state
		FROM
		(
		SELECT
		o.orderId,o.OrdersTotalId,o.OrderNo,o.userName,CommonTourFee,o.tourId,o.state,
		o.tax,o.createTime,o.userId,o.CheckTime,o.totalPeople,o.tourCode,o.peerId,o.tourTypeId,o.orderType
		FROM orders o ,tour_info_for_order t
		WHERE t.OrderId=o.OrderId
		<if test="ordersTotalId != null">
			AND o.OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
		</if>
		<if test="orderNo != null">
			AND o.OrderNo LIKE CONCAT('%','${orderNo}','%')
		</if>
		<if test="totalPeople != null">
			AND o.TotalPeople = #{totalPeople,jdbcType=INTEGER}
		</if>
		<if test="deptId != null">
			AND o.DeptId = #{deptId,jdbcType=VARCHAR}
		</if>
		<if test="userId != null">
			AND o.UserId = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="isSelfOrganize != null">
			AND o.IsSelfOrganize = #{isSelfOrganize,jdbcType=TINYINT}
		</if>
		<if test="bookingBeginningDate != null">
			AND o.CreateTime <![CDATA[>=]]>
			#{bookingBeginningDate,jdbcType=TIMESTAMP}
		</if>
		<if test="bookingEndingDate != null">
			AND DATE_FORMAT(o.CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
			#{bookingEndingDate,jdbcType=TIMESTAMP}
		</if>
		<if test="arrivalBeginningDate != null">
			AND t.ScheduleOfArriveTime <![CDATA[>=]]>
			#{arrivalBeginningDate,jdbcType=TIMESTAMP}
		</if>
		<if test="arrivalEndingDate!= null">
			AND t.ScheduleOfArriveTime <![CDATA[<=]]>
			#{arrivalEndingDate,jdbcType=TIMESTAMP}
		</if>
		<if test="settlementDateBeg != null">
			AND o.CheckTime <![CDATA[>=]]>
			#{settlementDateBeg,jdbcType=TIMESTAMP}
		</if>
		<if test="settlementDateEnd != null">
			AND o.CheckTime <![CDATA[<=]]>
			#{settlementDateEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="userName != null">
			AND o.userName LIKE CONCAT('%','${userName}','%')
		</if>
		<if test="tax!=null and tax!=2">
			AND o.Tax=#{tax}
		</if>
		<if test="tax==2">
			AND (o.Tax=2 or o.Tax=4)
		</if>
		<if test="tourCode != null">
			AND o.TourCode LIKE CONCAT('%','${tourCode}','%')
		</if>
		)expm LEFT JOIN vender v ON v.venderId=expm.peerId
		LEFT JOIN(
		SELECT
		sr.SprCheck,
		sr.orderId
		FROM
		SupplierPriceRemark sr
		WHERE sr.Type=1
		AND (sr.isDel=0 OR sr.isDel IS NULL)
		AND (sr.SprCheck=1 OR sr.SprCheck=3 OR sr.SprCheck=5)
		)ss
		ON ss.orderId=expm.orderId
		<where>
			<if test="sprCheck!= null">
				ss.SprCheck=#{sprCheck}
			</if>
			<if test="peerId != null">
				AND v.Name LIKE CONCAT('%','${peerId}','%')
			</if>
		</where>
		GROUP BY expm.orderId
		ORDER BY expm.tourCode DESC,expm.CreateTime DESC
	</select>

	<!-- group -->
	<sql id="findGroupOrderTax_sql">
		SELECT
		expm.orderId,expm.OrdersTotalId,expm.OrderNo,expm.userName,expm.CommonTourFee,
		expm.tax,expm.createTime,expm.userId,expm.CheckTime,expm.totalPeople,expm.tourCode,v.Name
		as peerId,
		ss.SprCheck,expm.tourTypeId
		FROM
		(
		SELECT
		o.orderId,o.OrdersTotalId,o.OrderNo,o.userName,ROUND(o.CommonTourFee,2)
		as CommonTourFee,
		o.tax,o.createTime,o.userId,o.CheckTime,o.totalPeople,o.tourCode,o.peerId,o.tourTypeId
		FROM orders o ,admin_group ag,tour_info_for_order t
		WHERE o.UserId=ag.AdminId
		AND t.OrderId=o.OrderId
		<if test="record.groupId != null">
			AND ag.GroupId = #{record.groupId,jdbcType=VARCHAR}
		</if>
		<if test="record.ordersTotalId != null">
			AND o.OrdersTotalId = #{record.ordersTotalId,jdbcType=VARCHAR}
		</if>
		<if test="record.orderNo != null">
			AND o.OrderNo LIKE CONCAT('%','${record.orderNo}','%')
		</if>
		<if test="record.totalPeople != null">
			AND o.TotalPeople = #{record.totalPeople,jdbcType=INTEGER}
		</if>
		<if test="record.deptId != null">
			AND o.DeptId = #{record.deptId,jdbcType=VARCHAR}
		</if>
		<if test="record.userId != null">
			AND o.UserId = #{record.userId,jdbcType=VARCHAR}
		</if>
		<if test="record.isSelfOrganize != null">
			AND o.IsSelfOrganize = #{record.isSelfOrganize,jdbcType=TINYINT}
		</if>
		<if test="record.bookingBeginningDate != null">
			AND o.CreateTime <![CDATA[>=]]>
			#{record.bookingBeginningDate,jdbcType=TIMESTAMP}
		</if>
		<if test="record.bookingEndingDate != null">
			AND DATE_FORMAT(o.CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
			#{record.bookingEndingDate,jdbcType=TIMESTAMP}
		</if>
		<if test="record.arrivalBeginningDate != null">
			AND t.ScheduleOfArriveTime <![CDATA[>=]]>
			#{record.arrivalBeginningDate,jdbcType=TIMESTAMP}
		</if>
		<if test="record.arrivalEndingDate!= null">
			AND t.ScheduleOfArriveTime <![CDATA[<=]]>
			#{record.arrivalEndingDate,jdbcType=TIMESTAMP}
		</if>
		<if test="record.settlementDateBeg != null">
			AND o.CheckTime <![CDATA[>=]]>
			#{record.settlementDateBeg,jdbcType=TIMESTAMP}
		</if>
		<if test="record.settlementDateEnd != null">
			AND o.CheckTime <![CDATA[<=]]>
			#{record.settlementDateEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="record.userName != null">
			AND o.userName LIKE CONCAT('%','${record.userName}','%')
		</if>
		<if test="record.tax!=null and record.tax!=2">
			AND o.Tax=#{record.tax}
		</if>
		<if test="record.tax==2">
			AND (o.Tax=2 or o.Tax=4)
		</if>
		<if test="record.tourCode != null">
			AND o.TourCode LIKE CONCAT('%','${record.tourCode}','%')
		</if>
		)expm LEFT JOIN vender v ON v.venderId=expm.peerId
		LEFT JOIN(
		SELECT
		sr.SprCheck,
		sr.orderId
		FROM
		SupplierPriceRemark sr
		WHERE sr.Type=1
		AND (sr.isDel=0 OR sr.isDel IS NULL)
		AND (sr.SprCheck=1 OR sr.SprCheck=3 OR sr.SprCheck=5)
		)ss
		ON ss.orderId=expm.orderId
		<where>
			<if test="record.sprCheck!= null">
				ss.SprCheck=#{record.sprCheck}
			</if>
			<if test="record.peerId != null">
				AND v.Name LIKE CONCAT('%','${record.peerId}','%')
			</if>
		</where>
		GROUP BY expm.orderId
		ORDER BY expm.CreateTime DESC
	</sql>

	<select id="findOrderTaxGroupPage" resultMap="ResultMapForSumPayOrCost">
		<include refid="Pager.paginationStart" />
		<include refid="findGroupOrderTax_sql" />
		<include refid="Pager.paginationEnd" />
	</select>

	<select id="findOrderTaxGroupPageCount" resultType="int">
		<include refid="Pager.countStart" />
		<include refid="findGroupOrderTax_sql" />
		<include refid="Pager.countEnd" />
	</select>

	<!--Group 总订单 显示总人数 -->
	<select id="findGroupSumPepoleAndPayOrCost" resultType="com.chinatour.entity.Order"
		parameterType="com.chinatour.entity.Order">
		SELECT
		SUM(tt.TotalPeople) as TotalPeople,
		SUM(tt.CommonTourFee) as CommonTourFee,SUM(tt.payTotalSum) as
		payTotalSum,SUM(tt.costTotalSum) as costTotalSum
		FROM (
		SELECT os.TotalPeople,
		os.CommonTourFee,ROUND(Sum(IF(p.PayOrCost=1,p.sum,0)),2) as
		payTotalSum, ROUND(Sum(IF(p.PayOrCost=2,p.sum,0)),2) as costTotalSum
		FROM
		(
		SELECT
		expm.*
		FROM
		(
		SELECT
		o.orderId,o.OrdersTotalId,o.OrderNo,o.userName,ROUND(o.CommonTourFee,2)
		as CommonTourFee,
		o.tax,o.createTime,o.userId,o.CheckTime,o.totalPeople,o.tourCode,o.peerId
		FROM orders o ,admin_group ag,tour_info_for_order t
		WHERE o.UserId=ag.AdminId
		AND t.OrderId=o.OrderId
		<if test="groupId != null">
			AND ag.GroupId = #{groupId,jdbcType=VARCHAR}
		</if>
		<if test="ordersTotalId != null">
			AND o.OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
		</if>
		<if test="orderNo != null">
			AND o.OrderNo LIKE CONCAT('%','${orderNo}','%')
		</if>
		<if test="totalPeople != null">
			AND o.TotalPeople = #{totalPeople,jdbcType=INTEGER}
		</if>
		<if test="deptId != null">
			AND o.DeptId = #{deptId,jdbcType=VARCHAR}
		</if>
		<if test="userId != null">
			AND o.UserId = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="isSelfOrganize != null">
			AND o.IsSelfOrganize = #{isSelfOrganize,jdbcType=TINYINT}
		</if>
		<if test="bookingBeginningDate != null">
			AND o.CreateTime <![CDATA[>=]]>
			#{bookingBeginningDate,jdbcType=TIMESTAMP}
		</if>
		<if test="bookingEndingDate != null">
			AND DATE_FORMAT(o.CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
			#{bookingEndingDate,jdbcType=TIMESTAMP}
		</if>
		<if test="arrivalBeginningDate != null">
			AND t.ScheduleOfArriveTime <![CDATA[>=]]>
			#{arrivalBeginningDate,jdbcType=TIMESTAMP}
		</if>
		<if test="arrivalEndingDate!= null">
			AND t.ScheduleOfArriveTime <![CDATA[<=]]>
			#{arrivalEndingDate,jdbcType=TIMESTAMP}
		</if>
		<if test="settlementDateBeg != null">
			AND o.CheckTime <![CDATA[>=]]>
			#{settlementDateBeg,jdbcType=TIMESTAMP}
		</if>
		<if test="settlementDateEnd != null">
			AND o.CheckTime <![CDATA[<=]]>
			#{settlementDateEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="userName != null">
			AND o.userName LIKE CONCAT('%','${userName}','%')
		</if>
		<if test="tax!=null and tax!=2">
			AND o.Tax=#{tax}
		</if>
		<if test="tax==2">
			AND (o.Tax=2 or o.Tax=4)
		</if>
		<if test="tourCode != null">
			AND o.TourCode LIKE CONCAT('%','${tourCode}','%')
		</if>
		)expm LEFT JOIN vender v ON v.venderId=expm.peerId
		LEFT JOIN(
		SELECT
		sr.SprCheck,
		sr.orderId
		FROM
		SupplierPriceRemark sr
		WHERE sr.Type=1
		AND (sr.isDel=0 OR sr.isDel IS NULL)
		AND (sr.SprCheck=1 OR sr.SprCheck=3 OR sr.SprCheck=5)
		)ss
		ON ss.orderId=expm.orderId
		<where>
			<if test="sprCheck!= null">
				ss.SprCheck=#{sprCheck}
			</if>
			<if test="peerId != null">
				AND v.Name LIKE CONCAT('%','${peerId}','%')
			</if>
		</where>
		GROUP BY expm.orderId
		)os LEFT JOIN pay_cost_records p
		on os.orderId=p.OrderId
		GROUP BY os.orderId
		)tt
	</select>

	<!--Group 打印 账单结算 总人数总收入支出 -->
	<select id="findGroupOrderTaxPrint" resultMap="ResultMapForSumPayOrCost"
		parameterType="com.chinatour.entity.Order">
		SELECT
		expm.orderId,expm.OrdersTotalId,expm.OrderNo,expm.userName,expm.CommonTourFee,
		expm.tax,expm.createTime,expm.userId,expm.CheckTime,expm.totalPeople,expm.tourCode,v.Name
		as peerId,
		ss.SprCheck,expm.tourTypeId
		FROM
		(
		SELECT
		o.orderId,o.OrdersTotalId,o.OrderNo,o.userName,ROUND(o.CommonTourFee,2)
		as CommonTourFee,
		o.tax,o.createTime,o.userId,o.CheckTime,o.totalPeople,o.tourCode,o.peerId,o.tourTypeId
		FROM orders o ,admin_group ag,tour_info_for_order t
		WHERE o.UserId=ag.AdminId
		AND t.OrderId=o.OrderId
		<if test="groupId != null">
			AND ag.GroupId = #{groupId,jdbcType=VARCHAR}
		</if>
		<if test="ordersTotalId != null">
			AND o.OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
		</if>
		<if test="orderNo != null">
			AND o.OrderNo LIKE CONCAT('%','${orderNo}','%')
		</if>
		<if test="totalPeople != null">
			AND o.TotalPeople = #{totalPeople,jdbcType=INTEGER}
		</if>
		<if test="deptId != null">
			AND o.DeptId = #{deptId,jdbcType=VARCHAR}
		</if>
		<if test="userId != null">
			AND o.UserId = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="isSelfOrganize != null">
			AND o.IsSelfOrganize = #{isSelfOrganize,jdbcType=TINYINT}
		</if>
		<if test="bookingBeginningDate != null">
			AND o.CreateTime <![CDATA[>=]]>
			#{bookingBeginningDate,jdbcType=TIMESTAMP}
		</if>
		<if test="bookingEndingDate != null">
			AND DATE_FORMAT(o.CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
			#{bookingEndingDate,jdbcType=TIMESTAMP}
		</if>
		<if test="arrivalBeginningDate != null">
			AND t.ScheduleOfArriveTime <![CDATA[>=]]>
			#{arrivalBeginningDate,jdbcType=TIMESTAMP}
		</if>
		<if test="arrivalEndingDate!= null">
			AND t.ScheduleOfArriveTime <![CDATA[<=]]>
			#{arrivalEndingDate,jdbcType=TIMESTAMP}
		</if>
		<if test="settlementDateBeg != null">
			AND o.CheckTime <![CDATA[>=]]>
			#{settlementDateBeg,jdbcType=TIMESTAMP}
		</if>
		<if test="settlementDateEnd != null">
			AND o.CheckTime <![CDATA[<=]]>
			#{settlementDateEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="userName != null">
			AND o.userName LIKE CONCAT('%','${userName}','%')
		</if>
		<if test="tax!=null and tax!=2">
			AND o.Tax=#{tax}
		</if>
		<if test="tax==2">
			AND (o.Tax=2 or o.Tax=4)
		</if>
		<if test="tourCode != null">
			AND o.TourCode LIKE CONCAT('%','${tourCode}','%')
		</if>
		)expm LEFT JOIN vender v ON v.venderId=expm.peerId
		LEFT JOIN(
		SELECT
		sr.SprCheck,
		sr.orderId
		FROM
		SupplierPriceRemark sr
		WHERE sr.Type=1
		AND (sr.isDel=0 OR sr.isDel IS NULL)
		AND (sr.SprCheck=1 OR sr.SprCheck=3 OR sr.SprCheck=5)
		)ss
		ON ss.orderId=expm.orderId
		<where>
			<if test="sprCheck!= null">
				ss.SprCheck=#{sprCheck}
			</if>
			<if test="peerId != null">
				AND v.Name LIKE CONCAT('%','${peerId}','%')
			</if>
		</where>
		GROUP BY expm.orderId
		ORDER BY expm.CreateTime DESC
	</select>

	<select id="findTourOrderListVOPrint" resultMap="ResultMapForSumPayOrCost"
		parameterType="com.chinatour.entity.Order">
		SELECT
		ord.orderId,ord.OrdersTotalId,ord.OrderNo,ord.userName,ROUND(ord.CommonTourFee,2)
		as CommonTourFee,ord.state,t.ScheduleOfArriveTime as arriveDateTime,
		ord.tax,ord.createTime,ord.userId,ord.CheckTime,ord.totalPeople,ord.tourCode,ord.tourTypeId,ord.orderType,ord.tourId
		FROM
		(SELECT
		<include refid="Base_Column_List" />
		FROM orders
		<where>
			<if test="id != null">
				AND OrderId = #{id,jdbcType=VARCHAR}
			</if>
			<if test="orderNo != null">
				AND OrderNo LIKE CONCAT('%','${orderNo}','%')
			</if>
			<if test="orderNoIn != null">
				AND OrderNoIn = #{orderNoIn,jdbcType=VARCHAR}
			</if>
			<if test="totalPeople != null">
				AND TotalPeople = #{totalPeople,jdbcType=INTEGER}
			</if>
			<if test="commonTourFee != null">
				AND CommonTourFee =
				#{commonTourFee,jdbcType=DECIMAL}
			</if>
			<if test="tax!=null and tax!=4">
				AND Tax=#{tax}
			</if>
			<if test="tax==4">
				AND (Tax=2 or Tax=4)
			</if>
			<if test="state != null">
				AND State = #{state,jdbcType=VARCHAR}
			</if>
			<if test="userId != null">
				AND UserId = #{userId,jdbcType=VARCHAR}
			</if>
			<if test="tourTypeId != null">
				AND TourTypeId = #{tourTypeId,jdbcType=TINYINT}
			</if>
			<if test="tourCode != null">
				AND TourCode LIKE CONCAT('%','${tourCode}','%')
			</if>
			<if test="tourId != null">
				AND TourId = #{tourId,jdbcType=VARCHAR}
			</if>
			<if test="createDate != null">
				AND CreateTime = #{createDate,jdbcType=TIMESTAMP}
			</if>
			<if test="peerId != null">
				AND PeerId = #{peerId,jdbcType=VARCHAR}
			</if>
			<if test="contact != null">
				AND Contact LIKE CONCAT('%','${contact}','%')
			</if>
			<if test="orderType != null">
				AND OrderType = #{orderType,jdbcType=TINYINT}
			</if>
			<if test="orderTourType != null">
				AND OrderTourType = #{orderTourType,jdbcType=VARCHAR}
			</if>
			<if test="arriveDate != null">
				AND ArriveDate = #{arriveDate,jdbcType=DATE}
			</if>
			<if test="flightPnr != null">
				AND FlightPnr LIKE CONCAT('%','${flightPnr}','%')
			</if>
			<if test="nonGroupType != null">
				AND NonGroupType =
				#{nonGroupType,jdbcType=VARCHAR}
			</if>
			<if test="peerUserId != null">
				AND PeerUserId = #{peerUserId,jdbcType=VARCHAR}
			</if>
			<if test="noticeState != null">
				AND NoticeState = #{noticeState,jdbcType=INTEGER}
			</if>
			<if test="payState != null">
				AND PayState = #{payState,jdbcType=TINYINT}
			</if>
			<if test="warnState != null">
				AND WarnState = #{warnState,jdbcType=TINYINT}
			</if>
			<if test="peerState != null">
				AND PeerState = #{peerState,jdbcType=TINYINT}
			</if>
			<if test="reviewState != null">
				AND ReviewState = #{reviewState,jdbcType=TINYINT}
			</if>
			<if test="costState != null">
				AND CostState = #{costState,jdbcType=TINYINT}
			</if>
			<if test="modifyDate != null">
				AND ModifyDate = #{modifyDate,jdbcType=TIMESTAMP}
			</if>
			<if test="ordersTotalId != null">
				AND OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
			</if>
			<if test="deptId != null">
				AND DeptId = #{deptId,jdbcType=VARCHAR}
			</if>
			<if test="checkTime != null">
				AND CheckTime = #{checkTime,jdbcType=TIMESTAMP}
			</if>
			<if test="brand != null">
				AND Brand = #{brand,jdbcType=VARCHAR}
			</if>
			<if test="userName != null">
				AND UserName = #{userName,jdbcType=VARCHAR}
			</if>
			<if
				test="isSelfOrganize != null and isSelfOrganize != 3 and isSelfOrganize != 4">
				AND IsSelfOrganize = #{isSelfOrganize,jdbcType=TINYINT}
			</if>
			<if test="isSelfOrganize == 3">
				AND OrderTourType !='inbound_sys'
				AND IsSelfOrganize=0
			</if>
			<if test="isSelfOrganize == 4">
				AND OrderTourType ='inbound_sys'
			</if>
			<if test="rate != null">
				AND Rate = #{rate,jdbcType=DECIMAL}
			</if>
			<if test="bookingBeginningDate != null">
				AND CreateTime <![CDATA[>=]]>
				#{bookingBeginningDate,jdbcType=TIMESTAMP}
			</if>
			<if test="bookingEndingDate != null">
				AND DATE_FORMAT(CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
				#{bookingEndingDate,jdbcType=TIMESTAMP}
			</if>
			<if test="settlementDateBeg != null">
				AND CheckTime <![CDATA[>=]]>
				#{settlementDateBeg,jdbcType=TIMESTAMP}
			</if>
			<if test="settlementDateEnd != null">
				AND CheckTime <![CDATA[<=]]>
				#{settlementDateEnd,jdbcType=TIMESTAMP}
			</if>
		</where>
		) ord JOIN tour_info_for_order t
		ON ord.OrderId = t.OrderId JOIN dept d ON ord.deptId=d.deptId
		<where>
			<if test="beginningDate != null">
				AND t.ScheduleOfArriveTime <![CDATA[>=]]>
				#{beginningDate,jdbcType=TIMESTAMP}
			</if>
			<if test="endingDate != null">
				AND t.ScheduleOfArriveTime <![CDATA[<=]]>
				#{endingDate,jdbcType=TIMESTAMP}
			</if>
		</where>
		ORDER BY t.ScheduleOfArriveTime DESC,ord.tourCode DESC
	</select>
	<!-- item 计算利润 -->
	<select id="findAgentSumPayOrCost" resultType="com.chinatour.entity.Order"
		parameterType="com.chinatour.entity.Order">
		SELECT
		SUM(tt.TotalPeople) as TotalPeople,
		SUM(tt.CommonTourFee) as CommonTourFee,SUM(tt.payTotalSum) as
		payTotalSum,SUM(tt.costTotalSum) as costTotalSum
		FROM (
		SELECT os.TotalPeople,
		os.CommonTourFee,ROUND(Sum(IF(p.PayOrCost=1,p.sum,0)),2) as
		payTotalSum, ROUND(Sum(IF(p.PayOrCost=2,p.sum,0)),2) as costTotalSum
		FROM
		(
		SELECT
		o.orderId,o.OrdersTotalId,o.OrderNo,o.userName,CommonTourFee,
		o.tax,o.createTime,o.userId,o.CheckTime,o.totalPeople
		FROM orders o ,tour_info_for_order t
		WHERE t.OrderId=o.OrderId
		<if test="ordersTotalId != null">
			AND o.OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
		</if>
		<if test="orderNo != null">
			AND o.OrderNo LIKE CONCAT('%','${orderNo}','%')
		</if>
		<if test="totalPeople != null">
			AND o.TotalPeople = #{totalPeople,jdbcType=INTEGER}
		</if>
		<if test="deptId != null">
			AND o.DeptId = #{deptId,jdbcType=VARCHAR}
		</if>
		<if test="userId != null">
			AND o.UserId = #{userId,jdbcType=VARCHAR}
		</if>
		<if
			test="isSelfOrganize != null and isSelfOrganize != 3 and isSelfOrganize != 4">
			AND IsSelfOrganize = #{isSelfOrganize,jdbcType=TINYINT}
		</if>
		<if test="isSelfOrganize == 3">
			AND OrderTourType !='inbound_sys'
			AND IsSelfOrganize=0
		</if>
		<if test="isSelfOrganize == 4">
			AND OrderTourType ='inbound_sys'
		</if>
		<if test="bookingBeginningDate != null">
			AND o.CreateTime <![CDATA[>=]]>
			#{bookingBeginningDate,jdbcType=TIMESTAMP}
		</if>
		<if test="bookingEndingDate != null">
			AND DATE_FORMAT(o.CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
			#{bookingEndingDate,jdbcType=TIMESTAMP}
		</if>
		<if test="beginningDate != null">
			AND t.ScheduleOfArriveTime <![CDATA[>=]]>
			#{beginningDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endingDate != null">
			AND t.ScheduleOfArriveTime <![CDATA[<=]]>
			#{endingDate,jdbcType=TIMESTAMP}
		</if>
		<if test="settlementDateBeg != null">
			AND o.CheckTime <![CDATA[>=]]>
			#{settlementDateBeg,jdbcType=TIMESTAMP}
		</if>
		<if test="settlementDateEnd != null">
			AND o.CheckTime <![CDATA[<=]]>
			#{settlementDateEnd,jdbcType=TIMESTAMP}
		</if>
		<if test="userName != null">
			AND o.userName LIKE CONCAT('%','${userName}','%')
		</if>
		<if test="tax!=null and tax!=2">
			AND o.Tax=#{tax}
		</if>
		<if test="tax==2">
			AND (o.Tax=2 or o.Tax=4)
		</if>
		<if test="tourCode != null">
			AND o.TourCode LIKE CONCAT('%','${tourCode}','%')
		</if>
		<if test="flightPnr != null">
			AND o.FlightPnr LIKE CONCAT('%','${flightPnr}','%')
		</if>
		)os LEFT JOIN pay_cost_records p
		on os.orderId=p.OrderId
		GROUP BY os.orderId
		)tt
	</select>

	<!-- group item list 打印 -->
	<select id="findGroupOrderListPrint" resultMap="ResultMapForSumPayOrCost"
		parameterType="com.chinatour.entity.Order">
		SELECT
		o.orderId,o.OrdersTotalId,o.OrderNo,o.userName,ROUND(o.CommonTourFee,2)
		as CommonTourFee,
		o.tax,o.createTime,o.userId,o.CheckTime,o.totalPeople,o.tourCode
		FROM
		orders o,admin_group a,tour_info_for_order t
		<where>
			o.UserId=a.AdminId
			AND o.OrderId = t.OrderId
			<if test="id != null">
				AND o.OrderId = #{id,jdbcType=VARCHAR}
			</if>
			<if test="orderNo != null">
				AND o.OrderNo LIKE CONCAT('%','${orderNo}','%')
			</if>
			<if test="orderNoIn != null">
				AND o.OrderNoIn = #{orderNoIn,jdbcType=VARCHAR}
			</if>
			<if test="totalPeople != null">
				AND o.TotalPeople = #{totalPeople,jdbcType=INTEGER}
			</if>
			<if test="commonTourFee != null">
				AND o.CommonTourFee =
				#{commonTourFee,jdbcType=DOUBLE}
			</if>
			<if test="tax!=null and tax!=4">
				AND Tax=#{tax}
			</if>
			<if test="tax==4">
				AND (Tax=2 or Tax=4)
			</if>
			<if test="state != null">
				AND o.State = #{state,jdbcType=INTEGER}
			</if>
			<if test="userId != null">
				AND o.UserId = #{userId,jdbcType=VARCHAR}
			</if>
			<if test="tourTypeId != null">
				AND o.TourTypeId = #{tourTypeId,jdbcType=TINYINT}
			</if>
			<if test="tourCode != null">
				AND o.TourCode LIKE CONCAT('%','${tourCode}','%')
			</if>
			<if test="tourId != null">
				AND o.TourId = #{tourId,jdbcType=VARCHAR}
			</if>
			<if test="createDate != null">
				AND o.CreateTime = #{createDate,jdbcType=TIMESTAMP}
			</if>
			<if test="peerId != null">
				AND o.PeerId = #{peerId,jdbcType=VARCHAR}
			</if>
			<if test="contact != null">
				AND o.Contact LIKE CONCAT('%','${contact}','%')
			</if>
			<if test="orderType != null">
				AND o.OrderType = #{orderType,jdbcType=TINYINT}
			</if>
			<if test="orderTourType != null">
				AND o.OrderTourType = #{orderTourType,jdbcType=VARCHAR}
			</if>
			<if test="arriveDate != null">
				AND o.ArriveDate = #{arriveDate,jdbcType=DATE}
			</if>
			<if test="flightPnr != null">
				AND o.FlightPnr LIKE CONCAT('%','${flightPnr}','%')
			</if>
			<if test="nonGroupType != null">
				AND o.NonGroupType =
				#{nonGroupType,jdbcType=VARCHAR}
			</if>
			<if test="peerUserId != null">
				AND o.PeerUserId = #{peerUserId,jdbcType=VARCHAR}
			</if>
			<if test="noticeState != null">
				AND o.NoticeState = #{noticeState,jdbcType=INTEGER}
			</if>
			<if test="payState != null">
				AND o.PayState = #{payState,jdbcType=TINYINT}
			</if>
			<if test="warnState != null">
				AND o.WarnState = #{warnState,jdbcType=TINYINT}
			</if>
			<if test="peerState != null">
				AND o.PeerState = #{peerState,jdbcType=TINYINT}
			</if>
			<if test="reviewState != null">
				AND o.ReviewState = #{reviewState,jdbcType=TINYINT}
			</if>
			<if test="costState != null">
				AND o.CostState = #{costState,jdbcType=TINYINT}
			</if>
			<if test="modifyDate != null">
				AND o.ModifyDate = #{modifyDate,jdbcType=TIMESTAMP}
			</if>
			<if test="ordersTotalId != null">
				AND o.OrdersTotalId = #{ordersTotalId,jdbcType=VARCHAR}
			</if>
			<if test="deptId != null">
				AND o.DeptId = #{deptId,jdbcType=VARCHAR}
			</if>
			<if test="groupId != null">
				AND a.GroupId = #{groupId,jdbcType=VARCHAR}
			</if>
			<if test="brand != null">
				AND o.Brand = #{brand,jdbcType=VARCHAR}
			</if>
			<if test="userName != null">
				AND o.UserName = #{userName,jdbcType=VARCHAR}
			</if>
			<if
				test="isSelfOrganize != null and isSelfOrganize != 3 and isSelfOrganize != 4">
				AND o.IsSelfOrganize = #{isSelfOrganize,jdbcType=TINYINT}
			</if>
			<if test="isSelfOrganize == 3">
				AND o.OrderTourType !='inbound_sys'
				AND o.IsSelfOrganize=0
			</if>
			<if test="isSelfOrganize == 4">
				AND o.OrderTourType ='inbound_sys'
			</if>
			<if test="rate != null">
				AND o.Rate = #{rate,jdbcType=DECIMAL}
			</if>
			<if test="beginningDate != null">
				AND t.ScheduleOfArriveTime <![CDATA[>=]]>
				#{beginningDate,jdbcType=TIMESTAMP}
			</if>
			<if test="endingDate != null">
				AND t.ScheduleOfArriveTime <![CDATA[<=]]>
				#{endingDate,jdbcType=TIMESTAMP}
			</if>
			<if test="bookingBeginningDate != null">
				AND o.CreateTime <![CDATA[>=]]>
				#{bookingBeginningDate,jdbcType=TIMESTAMP}
			</if>
			<if test="bookingEndingDate != null">
				AND DATE_FORMAT(o.CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
				#{bookingEndingDate,jdbcType=TIMESTAMP}
			</if>
			<if test="settlementDateBeg != null">
				AND o.CheckTime <![CDATA[>=]]>
				#{settlementDateBeg,jdbcType=TIMESTAMP}
			</if>
			<if test="settlementDateEnd != null">
				AND o.CheckTime <![CDATA[<=]]>
				#{settlementDateEnd,jdbcType=TIMESTAMP}
			</if>
		</where>
	</select>

	<select id="findSourceNameByTourId" resultType="java.lang.String"
		parameterType="java.lang.String">
		SELECT cs.sourceName FROM orders o ,orders_total
		ot,customer_source cs
		WHERE o.ordersTotalId=ot.ordersTotalId AND
		ot.customersourceId=cs.customerSourceId
		AND o.tourId = #{tourId,jdbcType=VARCHAR}
		LIMIT 1
	</select>
	<select id="findTourTypeNameByTourId" resultType="java.lang.String"
		parameterType="java.lang.String">
		SELECT tfo.tourType FROM orders o,tour_info_for_order
		tfo
		WHERE o.orderId=tfo.orderId
		AND o.tourId = #{tourId,jdbcType=VARCHAR}
		LIMIT 1
	</select>
	<select id="detailsCount" resultType="com.chinatour.entity.Order"
		parameterType="com.chinatour.entity.Order">
		SELECT
		SUM(l.TotalPeople) AS TotalPeople,
		SUM(l.CommonTourFee) AS CommonTourFee,
		SUM(l.pay)AS pay,
		SUM(l.cost)AS cost
		FROM(
		SELECT
		x.OrderId,
		x.TotalPeople,
		x.CommonTourFee,
		SUM(x.pay) AS pay,
		SUM(x.cost)AS cost
		FROM(
		SELECT
		a.OrderId,
		a.TotalPeople,
		a.CommonTourFee,
		IF(pcr.PayOrCost=1,SUM(pcr.Sum),0)AS pay,
		IF(pcr.PayOrCost=2,SUM(pcr.Sum),0)AS cost
		FROM(
		SELECT
		o.OrderId,
		o.TotalPeople,
		o.CommonTourFee
		FROM
		orders o,
		dept d,
		<if test="record.role=='Region'">
			region_dept_rel rd,
		</if>
		<if test="record.role=='Group'">
			admin_group ag,
		</if>
		tour_info_for_order ot
		<where>
			o.OrderId=ot.OrderId
			AND d.DeptId=o.DeptId
			<!-- AND o.State!=5 
			AND o.State!=6  -->
			<if test="record.role=='Region'">
				AND rd.DeptId=d.DeptId
			</if>
			<if test="record.role=='Group'">
				AND o.UserId=ag.AdminId
			</if>
			<if test="record.groupId!=null">
				AND ag.groupId=#{record.groupId}
			</if>
			<if test="record.contact!=null">
				AND rd.RegionId=#{record.contact}
			</if>
			<if test="record.userId!=null">
				AND o.UserId=#{record.userId}
			</if>
			<if test="record.orderType!=null">
				<if test="record.orderType==2">
						AND o.PeerId!=""  <!-- 同行订单类型标识 -->
					</if>
					<if test="record.orderType==10">
						AND o.IsSelfOrganize!=2  <!-- 团订单类型标识 -->
					</if>
					<if test="record.orderType==5">
						AND o.IsSelfOrganize=2  <!-- 非团订单类型标识 -->
					</if>
					<if test="record.orderType==1">
						AND o.OrderType=#{record.orderType}  <!-- 同行订单类型标识 -->
						AND o.IsSelfOrganize!=2
					</if>
			</if>
			<if test="record.time!=null">
				AND DATE_FORMAT(ot.ScheduleOfArriveTime,'%Y-%m')=#{record.time}
			</if>
			<if test="record.year!=null">
				AND DATE_FORMAT(ot.ScheduleOfArriveTime,'%Y')=#{record.year}
			</if>
			<if test="record.deptId!=null">
				AND o.DeptId=#{record.deptId}
			</if>
			<if test="record.contactName!=null">
				AND rd.RegionId=#{record.contactName}
			</if>
			<if test="record.isSelfOrganize!=null">
				<if test="record.isSelfOrganize==5">
					AND o.IsSelfOrganize!=2  <!-- 团订单类型标识 -->
				</if>
				<if test="record.isSelfOrganize!=5">
					AND o.IsSelfOrganize=#{record.isSelfOrganize}  <!-- 非团订单类型标识 -->
				</if>
			</if>
			<if test="record.userName!=null">
				AND o.UserName LIKE CONCAT(CONCAT('%', #{record.userName}), '%')
			</if>
			<if test="record.peerId!=null">
				AND o.PeerId=#{record.peerId}
			</if>
		</where>

		)a LEFT JOIN pay_cost_records pcr
		ON a.OrderId=pcr.OrderId
		GROUP BY a.OrderId,pcr.PayOrCost
		)x GROUP BY x.OrderId
		)l
	</select>
	<!-- 统计中订单详情语句 -->
	<sql id="orderDetails_sql">
		SELECT
		x.OrderId,
		x.OrderNo,
		x.UserName,
		x.ScheduleOfArriveTime AS arriveDateTime,
		x.TourCode,
		x.TotalPeople,
		x.CreateTime AS arriveDate,
		x.State,
		x.TourId,
		x.Tax,
		x.CommonTourFee,
		x.CheckTime,
		x.tourTypeId,
		SUM(x.pay)AS pay,
		SUM(x.cost)AS cost
		FROM(
			SELECT 
				a.OrderId,
				a.OrderNo,
				a.UserName,
				a.ScheduleOfArriveTime,
				a.TourCode,a.TotalPeople,
				a.CreateTime,
				a.State,
				a.TourId,
				a.Tax,
				a.CommonTourFee,
				a.CheckTime, 
				a.PeerId,
				a.tourTypeId,
				IF(pcr.PayOrCost=1,SUM(pcr.Sum),0)AS pay,
				IF(pcr.PayOrCost=2,SUM(pcr.Sum),0)AS cost  
			FROM(
				SELECT 
					o.OrderId,
					o.OrderNo,
					o.UserName,
					ot.ScheduleOfArriveTime,
					o.TourCode,o.TotalPeople,
					o.CreateTime,
					o.TourId,
					o.State,
					o.Tax,
					o.CommonTourFee,
					o.PeerId,
					o.CheckTime,
					o.tourTypeId
				FROM 
					orders o,
					dept d,
					<if test="record.role=='Region'">
						region_dept_rel rd,
					</if>
					<if test="record.role=='Group'">
						admin_group ag,
					</if>
					tour_info_for_order ot 
				<where> 
					o.OrderId=ot.OrderId
					AND d.DeptId=o.DeptId
					<!-- AND o.State!=5 
					AND o.State!=6 -->
					<if test="record.role=='Region'">
						AND rd.DeptId=d.DeptId
					</if>
					<if test="record.role=='Group'">
						AND o.UserId=ag.AdminId
					</if>
					<if test="record.groupId!=null">
						AND ag.groupId=#{record.groupId}
					</if>
					<if test="record.contact!=null">
						AND rd.RegionId=#{record.contact}
					</if>
					<if test="record.userId!=null">
						AND o.UserId=#{record.userId}
					</if>
					<if test="record.orderType!=null">
						<if test="record.orderType==2">
							AND o.PeerId!=""  <!-- 同行订单类型标识 -->
						</if>
						<if test="record.orderType==10">
							AND o.IsSelfOrganize!=2  <!-- 团订单类型标识 -->
						</if>
						<if test="record.orderType==5">
							AND o.IsSelfOrganize=2  <!-- 非团订单类型标识 -->
						</if>
						<if test="record.orderType==1">
							AND o.OrderType=#{record.orderType}  <!-- 同行订单类型标识 -->
							AND o.IsSelfOrganize!=2
						</if>
					</if>
					<if test="record.time!=null">
						AND DATE_FORMAT(ot.ScheduleOfArriveTime,'%Y-%m')=#{record.time}
					</if>
					<if test="record.year!=null">
						AND DATE_FORMAT(ot.ScheduleOfArriveTime,'%Y')=#{record.year}
					</if>
					<if test="record.deptId!=null">
						AND o.DeptId=#{record.deptId}
					</if>
					<if test="record.contactName!=null">
						AND rd.RegionId=#{record.contactName}
					</if>
					<if test="record.isSelfOrganize!=null"> 
						<if test="record.isSelfOrganize==5">
							AND o.IsSelfOrganize!=2  <!-- 团订单类型标识 -->
						</if>
						<if test="record.isSelfOrganize!=5">
							AND o.IsSelfOrganize=#{record.isSelfOrganize}  <!-- 非团订单类型标识 -->
						</if>
					</if> 
					<if test="record.userName!=null">
						AND o.UserName LIKE CONCAT(CONCAT('%', #{record.userName}), '%')
					</if>
					<if test="record.peerId!=null"> 
						AND o.PeerId=#{record.peerId}
					</if> 
				</where> 
						
				)a LEFT JOIN pay_cost_records pcr 
				ON a.OrderId=pcr.OrderId 
				GROUP BY a.OrderId,pcr.PayOrCost
			)x GROUP BY x.OrderId ORDER BY x.TourId,x.ScheduleOfArriveTime
	</sql>
	<!-- 统计翻页功能 -->
	<select id="orderDetailsPage" resultMap="ResultDeptForOrderMap">
		<include refid="Pager.paginationStart" />
		<include refid="orderDetails_sql" />
		<include refid="Pager.paginationEnd" />
	</select>
	<select id="orderDetailsPageCount" resultType="int">
		<include refid="Pager.countStart" />
		<include refid="orderDetails_sql" />
		<include refid="Pager.countEnd" />
	</select>
	<!-- 打印统计详情2 -->
	<select id="detailsPrint" resultMap="ResultDeptForOrderMap"
		parameterType="com.chinatour.entity.Order">
		<include refid="orderDetails_sql" />
	</select>
	<!-- Product Brand -->
	<select id="detailsCountT" resultType="com.chinatour.entity.Order"
		parameterType="com.chinatour.entity.Order">
		SELECT
		SUM(l.TotalPeople) AS TotalPeople,
		SUM(l.CommonTourFee) AS CommonTourFee,
		SUM(l.pay)AS pay,
		SUM(l.cost)AS cost
		FROM(
		SELECT
		x.OrderId,
		x.TotalPeople,
		x.CommonTourFee,
		SUM(x.pay) AS pay,
		SUM(x.cost)AS cost
		FROM(
		SELECT
		a.OrderId,
		a.TotalPeople,
		a.CommonTourFee,
		IF(pcr.PayOrCost=1,SUM(pcr.Sum),0)AS pay,
		IF(pcr.PayOrCost=2,SUM(pcr.Sum),0)AS cost
		FROM(
		SELECT
		o.OrderId,
		o.TotalPeople,
		o.CommonTourFee
		FROM
		orders o,
		orders_total tot,
		tour_info_for_order ot,
		dept d,
		<if test="record.groupLineId!=null">
			groupline g,
		</if>
		<if test="record.role=='Region'">
			region_dept_rel rd,
		</if>
		<if test="record.role=='Group'">
			admin_group ag,
		</if>
		tour_type tp
		<where>
			o.OrderId=ot.OrderId
			AND o.DeptId=d.DeptId
			<!-- AND o.State!=5 
			AND o.State!=6 --> 
			<if test="record.groupLineId!=null">
				AND g.GroupLineId=ot.GroupLineId
				AND tp.TourTypeId=g.TourTypeId
			</if>
			<if test="record.role=='Region'">
				AND rd.DeptId=d.DeptId
			</if>
			<if test="record.role=='Group'">
				AND o.UserId=ag.AdminId
			</if>
			AND tot.OrdersTotalId=o.OrdersTotalId
			AND tp.TourTypeId=o.TourTypeId
			<if test="record.groupId!=null">
				AND ag.groupId=#{record.groupId}
			</if>
			<if test="record.contact!=null">
				AND rd.RegionId=#{record.contact}
			</if>
			<if test="record.userId!=null">
				AND o.UserId=#{record.userId}
			</if>
			<if test="record.time!=null">
				AND DATE_FORMAT(ot.ScheduleOfArriveTime,'%Y-%m')=#{record.time}
			</if>
			<if test="record.year!=null">
				AND DATE_FORMAT(ot.ScheduleOfArriveTime,'%Y')=#{record.year}
			</if>
			<if test="record.deptId!=null">
				AND o.DeptId=#{record.deptId}
			</if>
			<if test="record.isSelfOrganize!=null">
				AND o.IsSelfOrganize=#{record.isSelfOrganize}
			</if>
			<if test="record.wr!=null">
				AND tot.wr=#{record.wr}
			</if>
			<if test="record.groupLineId!=null">
				AND g.GroupLineId=#{record.groupLineId}
			</if>
			<if test="record.brand!=null">
				AND tp.Brand=#{record.brand}
			</if>
		</where>

		)a LEFT JOIN pay_cost_records pcr
		ON a.OrderId=pcr.OrderId
		GROUP BY a.OrderId,pcr.PayOrCost
		)x GROUP BY x.OrderId
		)l
	</select>
	<sql id="orderDetailsT_sql">
		SELECT
		x.OrderId,
		x.OrderNo,
		x.UserName,
		x.ScheduleOfArriveTime AS arriveDateTime,
		x.TourCode,
		x.TourId,
		x.TotalPeople,
		x.CreateTime AS arriveDate,
		x.State,
		x.Tax,
		x.CommonTourFee,
		x.CheckTime,
		x.tourTypeId,
		SUM(x.pay)AS pay,
		SUM(x.cost)AS cost
		FROM(
			SELECT 
				a.OrderId,
				a.OrderNo,
				a.UserName,
				a.ScheduleOfArriveTime,
				a.TourCode,a.TotalPeople,
				a.TourId,
				a.CreateTime,
				a.State,
				a.Tax,
				a.CommonTourFee,
				a.CheckTime, 
				a.PeerId,
				a.tourTypeId,
				IF(pcr.PayOrCost=1,SUM(pcr.Sum),0)AS pay,
				IF(pcr.PayOrCost=2,SUM(pcr.Sum),0)AS cost  
			FROM(
				SELECT 
					o.OrderId,
					o.OrderNo,
					o.UserName,
					ot.ScheduleOfArriveTime,
					o.TourCode,o.TotalPeople,
					o.TourId,
					o.CreateTime,
					o.State,
					o.Tax,
					o.CommonTourFee,
					o.PeerId,
					o.CheckTime,
					o.tourTypeId
				FROM 
					orders o,
					orders_total tot,
					tour_info_for_order ot,
					dept d,
					<if test="record.groupLineId!=null"> 
						groupline g,
					</if>
					<if test="record.role=='Region'">
						region_dept_rel rd,
					</if>
					<if test="record.role=='Group'">
						admin_group ag,
					</if>
					tour_type tp
				<where> 
					o.OrderId=ot.OrderId
					AND o.DeptId=d.DeptId
					<!-- AND o.State!=5 
					AND o.State!=6 -->
					<if test="record.groupLineId!=null"> 
						AND g.GroupLineId=ot.GroupLineId
						AND tp.TourTypeId=g.TourTypeId 
					</if>
					<if test="record.role=='Region'">
						AND rd.DeptId=d.DeptId
					</if>
					<if test="record.role=='Group'">
						AND o.UserId=ag.AdminId
					</if>
					AND tot.OrdersTotalId=o.OrdersTotalId
					AND tp.TourTypeId=o.TourTypeId
					<if test="record.groupId!=null">
						AND ag.groupId=#{record.groupId}
					</if>
					<if test="record.contact!=null">
						AND rd.RegionId=#{record.contact}
					</if>
					<if test="record.userId!=null">
						AND o.UserId=#{record.userId}
					</if>
					<if test="record.time!=null">
						AND DATE_FORMAT(ot.ScheduleOfArriveTime,'%Y-%m')=#{record.time}
					</if>
					<if test="record.year!=null">
						AND DATE_FORMAT(ot.ScheduleOfArriveTime,'%Y')=#{record.year}
					</if>
					<if test="record.deptId!=null">
						AND o.DeptId=#{record.deptId}
					</if>
					<if test="record.isSelfOrganize!=null"> 
						AND o.IsSelfOrganize=#{record.isSelfOrganize}
					</if> 
					<if test="record.wr!=null"> 
						AND tot.wr=#{record.wr}
					</if> 
					<if test="record.groupLineId!=null"> 
						AND g.GroupLineId=#{record.groupLineId}
					</if> 
					<if test="record.brand!=null"> 
						AND tp.Brand=#{record.brand}
					</if> 
				</where> 
						
				)a LEFT JOIN pay_cost_records pcr 
				ON a.OrderId=pcr.OrderId 
				GROUP BY a.OrderId,pcr.PayOrCost
			)x GROUP BY x.OrderId ORDER BY x.TourId,x.ScheduleOfArriveTime
	</sql>
	<!-- 统计翻页功能 -->
	<select id="orderDetailsTPage" resultMap="ResultDeptForOrderMap">
		<include refid="Pager.paginationStart" />
		<include refid="orderDetailsT_sql" />
		<include refid="Pager.paginationEnd" />
	</select>
	<select id="orderDetailsTPageCount" resultType="int">
		<include refid="Pager.countStart" />
		<include refid="orderDetailsT_sql" />
		<include refid="Pager.countEnd" />
	</select>
	<!-- 打印统计详情1 -->
	<select id="detailsTPrint" resultMap="ResultDeptForOrderMap"
		parameterType="com.chinatour.entity.Order">
		<include refid="orderDetailsT_sql" />
	</select>
	<!-- 统计中订单详情语句 -->
	<select id="detailsCountB" resultType="com.chinatour.entity.Order"
		parameterType="com.chinatour.entity.Order">
		SELECT
		SUM(l.TotalPeople) AS TotalPeople,
		SUM(l.CommonTourFee) AS CommonTourFee,
		SUM(l.pay)AS pay,
		SUM(l.cost)AS cost
		FROM(
		SELECT
		x.OrderId,
		x.TotalPeople,
		x.CommonTourFee,
		SUM(x.pay) AS pay,
		SUM(x.cost)AS cost
		FROM(
		SELECT
		a.OrderId,
		a.TotalPeople,
		a.CommonTourFee,
		IF(pcr.PayOrCost=1,SUM(pcr.Sum),0)AS pay,
		IF(pcr.PayOrCost=2,SUM(pcr.Sum),0)AS cost
		FROM(
		SELECT
		o.OrderId,
		o.TotalPeople,
		o.CommonTourFee
		FROM
		orders o,
		dept d,
		<if test="record.role=='Region'">
			region_dept_rel rd,
		</if>
		<if test="record.role=='Group'">
			admin_group ag,
		</if>
		tour_info_for_order ot
		<where>
			o.OrderId=ot.OrderId
			AND d.DeptId=o.DeptId
			<!-- AND o.State!=5 
			AND o.State!=6  -->
			<if test="record.role=='Region'">
				AND rd.DeptId=d.DeptId
			</if>
			<if test="record.role=='Group'">
				AND o.UserId=ag.AdminId
			</if>
			<if test="record.groupId!=null">
				AND ag.groupId=#{record.groupId}
			</if>
			<if test="record.contact!=null">
				AND rd.RegionId=#{record.contact}
			</if>
			<if test="record.userId!=null">
				AND o.UserId=#{record.userId}
			</if>
			<if test="record.orderType!=null">
				<if test="record.orderType==2">
						AND o.PeerId!=""  <!-- 同行订单类型标识 -->
					</if>
					<if test="record.orderType==10">
						AND o.IsSelfOrganize!=2  <!-- 团订单类型标识 -->
					</if>
					<if test="record.orderType==5">
						AND o.IsSelfOrganize=2  <!-- 非团订单类型标识 -->
					</if>
					<if test="record.orderType==1">
						AND o.OrderType=#{record.orderType}  <!-- 同行订单类型标识 -->
						AND o.IsSelfOrganize!=2
					</if>
			</if>
			<if test="record.time!=null">
				AND DATE_FORMAT(o.CreateTime,'%Y-%m')=#{record.time}
			</if>
			<if test="record.year!=null">
				AND DATE_FORMAT(o.CreateTime,'%Y')=#{record.year}
			</if>
			<if test="record.deptId!=null">
				AND o.DeptId=#{record.deptId}
			</if>
			<if test="record.contactName!=null">
				AND rd.RegionId=#{record.contactName}
			</if>
			<if test="record.isSelfOrganize!=null">
				<if test="record.isSelfOrganize==5">
					AND o.IsSelfOrganize!=2  <!-- 团订单类型标识 -->
				</if>
				<if test="record.isSelfOrganize!=5">
					AND o.IsSelfOrganize=#{record.isSelfOrganize}  <!-- 非团订单类型标识 -->
				</if>
			</if>
			<if test="record.userName!=null">
				AND o.UserName LIKE CONCAT(CONCAT('%', #{record.userName}), '%')
			</if>
			<if test="record.peerId!=null">
				AND o.PeerId=#{record.peerId}
			</if>
		</where>

		)a LEFT JOIN pay_cost_records pcr
		ON a.OrderId=pcr.OrderId
		GROUP BY a.OrderId,pcr.PayOrCost
		)x GROUP BY x.OrderId
		)l
	</select>
	<sql id="orderDetailsB_sql">
		SELECT
		x.OrderId,
		x.OrderNo,
		x.UserName,
		x.ScheduleOfArriveTime AS arriveDateTime,
		x.TourCode,
		x.TotalPeople,
		x.CreateTime AS arriveDate,
		x.State,
		x.TourId,
		x.Tax,
		x.CommonTourFee,
		x.CheckTime,
		x.TourTypeId,
		SUM(x.pay)AS pay,
		SUM(x.cost)AS cost
		FROM(
			SELECT 
				a.OrderId,
				a.OrderNo,
				a.UserName,
				a.ScheduleOfArriveTime,
				a.TourCode,a.TotalPeople,
				a.CreateTime,
				a.State,
				a.TourId,
				a.Tax,
				a.CommonTourFee,
				a.CheckTime, 
				a.PeerId,
				a.TourTypeId,
				IF(pcr.PayOrCost=1,SUM(pcr.Sum),0)AS pay,
				IF(pcr.PayOrCost=2,SUM(pcr.Sum),0)AS cost  
			FROM(
				SELECT 
					o.OrderId,
					o.OrderNo,
					o.UserName,
					ot.ScheduleOfArriveTime,
					o.TourCode,o.TotalPeople,
					o.CreateTime,
					o.TourId,
					o.State,
					o.Tax,
					o.CommonTourFee,
					o.PeerId,
					o.CheckTime,
					o.TourTypeId
				FROM 
					orders o,
					dept d,
					<if test="record.role=='Region'">
						region_dept_rel rd,
					</if>
					<if test="record.role=='Group'">
						admin_group ag,
					</if>
					tour_info_for_order ot 
				<where> 
					o.OrderId=ot.OrderId
					AND d.DeptId=o.DeptId
					<!-- AND o.State!=5 
					AND o.State!=6 -->
					<if test="record.role=='Region'">
						AND rd.DeptId=d.DeptId
					</if>
					<if test="record.role=='Group'">
						AND o.UserId=ag.AdminId
					</if>
					<if test="record.groupId!=null">
						AND ag.groupId=#{record.groupId}
					</if>
					<if test="record.contact!=null">
						AND rd.RegionId=#{record.contact}
					</if>
					<if test="record.userId!=null">
						AND o.UserId=#{record.userId}
					</if>
					<if test="record.orderType!=null">
						<if test="record.orderType==2">
							AND o.PeerId!=""  <!-- 同行订单类型标识 -->
						</if>
						<if test="record.orderType==10">
							AND o.IsSelfOrganize!=2  <!-- 团订单类型标识 -->
						</if>
						<if test="record.orderType==5">
							AND o.IsSelfOrganize=2  <!-- 非团订单类型标识 -->
						</if>
						<if test="record.orderType==1">
							AND o.OrderType=#{record.orderType}  <!-- 同行订单类型标识 -->
							AND o.IsSelfOrganize!=2
						</if>
					</if>
					<if test="record.time!=null">
						AND DATE_FORMAT(o.CreateTime,'%Y-%m')=#{record.time}
					</if>
					<if test="record.year!=null">
						AND DATE_FORMAT(o.CreateTime,'%Y')=#{record.year}
					</if>
					<if test="record.deptId!=null">
						AND o.DeptId=#{record.deptId}
					</if>
					<if test="record.contactName!=null">
						AND rd.RegionId=#{record.contactName}
					</if>
					<if test="record.isSelfOrganize!=null"> 
						<if test="record.isSelfOrganize==5">
							AND o.IsSelfOrganize!=2  <!-- 团订单类型标识 -->
						</if>
						<if test="record.isSelfOrganize!=5">
							AND o.IsSelfOrganize=#{record.isSelfOrganize}  <!-- 非团订单类型标识 -->
						</if>
					</if> 
					<if test="record.userName!=null">
						AND o.UserName LIKE CONCAT(CONCAT('%', #{record.userName}), '%')
					</if>
					<if test="record.peerId!=null"> 
						AND o.PeerId=#{record.peerId}
					</if> 
				</where> 
						
				)a LEFT JOIN pay_cost_records pcr 
				ON a.OrderId=pcr.OrderId 
				GROUP BY a.OrderId,pcr.PayOrCost
			)x GROUP BY x.OrderId ORDER BY x.TourId,x.ScheduleOfArriveTime
	</sql>
	<!-- 统计翻页功能 -->
	<select id="orderDetailsBPage" resultMap="ResultDeptForOrderMap">
		<include refid="Pager.paginationStart" />
		<include refid="orderDetailsB_sql" />
		<include refid="Pager.paginationEnd" />
	</select>
	<select id="orderDetailsBPageCount" resultType="int">
		<include refid="Pager.countStart" />
		<include refid="orderDetailsB_sql" />
		<include refid="Pager.countEnd" />
	</select>
	<!-- 打印统计详情3 -->
	<select id="detailsBPrint" resultMap="ResultDeptForOrderMap"
		parameterType="com.chinatour.entity.Order">
		<include refid="orderDetailsB_sql" />
	</select>
	<!-- Product Brand -->
	<select id="detailsCountBT" resultType="com.chinatour.entity.Order"
		parameterType="com.chinatour.entity.Order">
		SELECT
		SUM(l.TotalPeople) AS TotalPeople,
		SUM(l.CommonTourFee) AS CommonTourFee,
		SUM(l.pay)AS pay,
		SUM(l.cost)AS cost
		FROM(
		SELECT
		x.OrderId,
		x.TotalPeople,
		x.CommonTourFee,
		SUM(x.pay) AS pay,
		SUM(x.cost)AS cost
		FROM(
		SELECT
		a.OrderId,
		a.TotalPeople,
		a.CommonTourFee,
		IF(pcr.PayOrCost=1,SUM(pcr.Sum),0)AS pay,
		IF(pcr.PayOrCost=2,SUM(pcr.Sum),0)AS cost
		FROM(
		SELECT
		o.OrderId,
		o.TotalPeople,
		o.CommonTourFee
		FROM
		orders o,
		orders_total tot,
		dept d,
		tour_info_for_order ot,
		<if test="record.groupLineId!=null">
			groupline g,
		</if>
		<if test="record.role=='Region'">
			region_dept_rel rd,
		</if>
		<if test="record.role=='Group'">
			admin_group ag,
		</if>
		tour_type tp
		<where>
			o.OrderId=ot.OrderId
			AND d.DeptId=o.DeptId
			AND o.State!=5 
			AND o.State!=6 
			<if test="record.groupLineId!=null">
				AND g.GroupLineId=ot.GroupLineId
				AND tp.TourTypeId=g.TourTypeId
			</if>
			<if test="record.role=='Region'">
				AND rd.DeptId=d.DeptId
			</if>
			<if test="record.role=='Group'">
				AND o.UserId=ag.AdminId
			</if>
			AND tot.OrdersTotalId=o.OrdersTotalId
			AND tp.TourTypeId=o.TourTypeId
			<if test="record.groupId!=null">
				AND ag.groupId=#{record.groupId}
			</if>
			<if test="record.contact!=null">
				AND rd.RegionId=#{record.contact}
			</if>
			<if test="record.userId!=null">
				AND o.UserId=#{record.userId}
			</if>
			<if test="record.time!=null">
				AND DATE_FORMAT(o.CreateTime,'%Y-%m')=#{record.time}
			</if>
			<if test="record.year!=null">
				AND DATE_FORMAT(o.CreateTime,'%Y')=#{record.year}
			</if>
			<if test="record.deptId!=null">
				AND o.DeptId=#{record.deptId}
			</if>
			<if test="record.isSelfOrganize!=null">
				AND o.IsSelfOrganize=#{record.isSelfOrganize}
			</if>
			<if test="record.wr!=null">
				AND tot.wr=#{record.wr}
			</if>
			<if test="record.groupLineId!=null">
				AND g.GroupLineId=#{record.groupLineId}
			</if>
			<if test="record.brand!=null">
				AND tp.Brand=#{record.brand}
			</if>
		</where>

		)a LEFT JOIN pay_cost_records pcr
		ON a.OrderId=pcr.OrderId
		GROUP BY a.OrderId,pcr.PayOrCost
		)x GROUP BY x.OrderId
		)l
	</select>
	<sql id="orderDetailsBT_sql">
		SELECT
		x.OrderId,
		x.OrderNo,
		x.UserName,
		x.ScheduleOfArriveTime AS arriveDateTime,
		x.TourCode,
		x.TourId,
		x.TotalPeople,
		x.CreateTime AS arriveDate,
		x.State,
		x.Tax,
		x.CommonTourFee,
		x.CheckTime,
		x.TourTypeId,
		SUM(x.pay)AS pay,
		SUM(x.cost)AS cost
		FROM(
			SELECT 
				a.OrderId,
				a.OrderNo,
				a.UserName,
				a.ScheduleOfArriveTime,
				a.TourCode,a.TotalPeople,
				a.TourId,
				a.CreateTime,
				a.State,
				a.Tax,
				a.CommonTourFee,
				a.CheckTime, 
				a.PeerId,
				a.TourTypeId,
				IF(pcr.PayOrCost=1,SUM(pcr.Sum),0)AS pay,
				IF(pcr.PayOrCost=2,SUM(pcr.Sum),0)AS cost  
			FROM(
				SELECT 
					o.OrderId,
					o.OrderNo,
					o.UserName,
					ot.ScheduleOfArriveTime,
					o.TourCode,o.TotalPeople,
					o.TourId,
					o.CreateTime,
					o.State,
					o.Tax,
					o.CommonTourFee,
					o.PeerId,
					o.CheckTime,
					o.TourTypeId
				FROM 
					orders o,
					orders_total tot,
					dept d,
					tour_info_for_order ot,
					<if test="record.groupLineId!=null"> 
						groupline g,
					</if>
					<if test="record.role=='Region'">
						region_dept_rel rd,
					</if>
					<if test="record.role=='Group'">
						admin_group ag,
					</if>
					tour_type tp
				<where> 
					o.OrderId=ot.OrderId
					AND d.DeptId=o.DeptId
					<!-- AND o.State!=5 
					AND o.State!=6 -->
					<if test="record.groupLineId!=null"> 
						AND g.GroupLineId=ot.GroupLineId
						AND tp.TourTypeId=g.TourTypeId 
					</if>
					<if test="record.role=='Region'">
						AND rd.DeptId=d.DeptId
					</if>
					<if test="record.role=='Group'">
						AND o.UserId=ag.AdminId
					</if>
					AND tot.OrdersTotalId=o.OrdersTotalId
					AND tp.TourTypeId=o.TourTypeId
					<if test="record.groupId!=null">
						AND ag.groupId=#{record.groupId}
					</if>
					<if test="record.contact!=null">
						AND rd.RegionId=#{record.contact}
					</if>
					<if test="record.userId!=null">
						AND o.UserId=#{record.userId}
					</if>
					<if test="record.time!=null">
						AND DATE_FORMAT(o.CreateTime,'%Y-%m')=#{record.time}
					</if>
					<if test="record.year!=null">
						AND DATE_FORMAT(o.CreateTime,'%Y')=#{record.year}
					</if>
					<if test="record.deptId!=null">
						AND o.DeptId=#{record.deptId}
					</if>
					<if test="record.isSelfOrganize!=null"> 
						AND o.IsSelfOrganize=#{record.isSelfOrganize}
					</if> 
					<if test="record.wr!=null"> 
						AND tot.wr=#{record.wr}
					</if> 
					<if test="record.groupLineId!=null"> 
						AND g.GroupLineId=#{record.groupLineId}
					</if> 
					<if test="record.brand!=null"> 
						AND tp.Brand=#{record.brand}
					</if> 
				</where> 
						
				)a LEFT JOIN pay_cost_records pcr 
				ON a.OrderId=pcr.OrderId 
				GROUP BY a.OrderId,pcr.PayOrCost
			)x GROUP BY x.OrderId ORDER BY x.TourId,x.ScheduleOfArriveTime
	</sql>
	<!-- 统计翻页功能 -->
	<select id="orderDetailsBTPage" resultMap="ResultDeptForOrderMap">
		<include refid="Pager.paginationStart" />
		<include refid="orderDetailsBT_sql" />
		<include refid="Pager.paginationEnd" />
	</select>
	<select id="orderDetailsBTPageCount" resultType="int">
		<include refid="Pager.countStart" />
		<include refid="orderDetailsBT_sql" />
		<include refid="Pager.countEnd" />
	</select>
	<!-- 打印统计详情4 -->
	<select id="detailsBTPrint" resultMap="ResultDeptForOrderMap"
		parameterType="com.chinatour.entity.Order">
		<include refid="orderDetailsBT_sql" />
	</select>
	<select id="findOrderInfo" resultMap="ResultCustomerForOrderMap"
		parameterType="com.chinatour.entity.Order">
		SELECT
		o.OrderId, o.OrderNo, o.UserId,
		o.TourCode,
		o.TourId,t.userId as peerUserId
		FROM tour t,Orders o
		WHERE
		t.tourId=o.tourId
		AND t.IsDel = 0
		AND o.state!=5
		AND DATE_FORMAT(t.ArriveDateTime,'%Y-%m-%d') =
		DATE_FORMAT(#{arriveDateTime},'%Y-%m-%d')
	</select>

	<sql id="sourceDetailsS_sql">
		SELECT
		x.OrderId,
		x.OrderNo,
		x.UserName,
		x.ScheduleOfArriveTime AS arriveDateTime,
		x.TourCode,
		x.TourId,
		x.TotalPeople,
		x.CreateTime AS arriveDate,
		x.State,
		x.Tax,
		x.CommonTourFee,
		x.CheckTime,
		x.tourTypeId,
		SUM(x.pay)AS pay,
		SUM(x.cost)AS cost
		FROM(
			SELECT 
				a.OrderId,
				a.OrderNo,
				a.UserName,
				a.ScheduleOfArriveTime,
				a.TourCode,a.TotalPeople,
				a.TourId,
				a.CreateTime,
				a.State,
				a.Tax,
				a.CommonTourFee,
				a.CheckTime, 
				a.PeerId,
				a.tourTypeId,
				IF(pcr.PayOrCost=1,SUM(pcr.Sum),0)AS pay,
				IF(pcr.PayOrCost=2,SUM(pcr.Sum),0)AS cost  
			FROM(
				SELECT 
					o.OrderId,
					o.OrderNo,
					o.UserName,
					ot.ScheduleOfArriveTime,
					o.TourCode,o.TotalPeople,
					o.TourId,
					o.CreateTime,
					o.State,
					o.Tax,
					o.CommonTourFee,
					o.PeerId,
					o.CheckTime,
					o.tourTypeId
				FROM 
					<if test="record.role=='Region'">
						region_dept_rel rd,
					</if>
					<if test="record.role=='Group'">
						admin_group ag,
					</if>
					orders o,
					orders_total tot,
					customer_source cs,
					tour_info_for_order ot
				<where> 
					o.OrderId=ot.OrderId
					AND tot.OrdersTotalId=o.OrdersTotalId
					and cs.CustomerSourceId=tot.CustomerSourceId
					<if test="record.role=='Region'">
						AND rd.DeptId=o.DeptId
					</if>
					<if test="record.role=='Group'">
						AND o.UserId=ag.AdminId
					</if>
					<if test="record.groupId!=null">
						AND ag.groupId=#{record.groupId}
					</if>
					<if test="record.contact!=null">
						AND rd.RegionId=#{record.contact}
					</if>
					<if test="record.userId!=null">
						AND o.UserId=#{record.userId}
					</if>
					<if test="record.sourceName!=null">
						AND cs.sourceName=#{record.sourceName}
					</if>
					<if test="record.ticketType=='booking'">
						<if test="record.time!=null">
							AND DATE_FORMAT(o.CreateTime,'%Y-%m')=#{record.time}
						</if>
						<if test="record.year!=null">
							AND DATE_FORMAT(o.CreateTime,'%Y')=#{record.year}
						</if>
					</if>
					<if test="record.ticketType=='arrival'">
						<if test="record.time!=null">
							AND DATE_FORMAT(ot.ScheduleOfArriveTime,'%Y-%m')=#{record.time}
						</if>
						<if test="record.year!=null">
							AND DATE_FORMAT(ot.ScheduleOfArriveTime,'%Y')=#{record.year}
						</if>
					</if>
					<if test="record.deptId!=null">
						AND o.DeptId=#{record.deptId}
					</if>
					<if test="record.isSelfOrganize!=null"> 
						AND o.IsSelfOrganize=#{record.isSelfOrganize}
					</if> 
					<if test="record.wr!=null"> 
						AND tot.wr=#{record.wr}
					</if> 
				</where> 
						
				)a LEFT JOIN pay_cost_records pcr 
				ON a.OrderId=pcr.OrderId 
				GROUP BY a.OrderId,pcr.PayOrCost
			)x GROUP BY x.OrderId ORDER BY x.TourId,x.ScheduleOfArriveTime
	</sql>
	<!-- 统计翻页功能 -->
	<select id="sourceDetailsSPage" resultMap="ResultDeptForOrderMap">
		<include refid="Pager.paginationStart" />
		<include refid="sourceDetailsS_sql" />
		<include refid="Pager.paginationEnd" />
	</select>
	<select id="sourceDetailsSPageCount" resultType="int">
		<include refid="Pager.countStart" />
		<include refid="sourceDetailsS_sql" />
		<include refid="Pager.countEnd" />
	</select>
	<!-- 打印统计详情1 -->
	<select id="detailsSPrint" resultMap="ResultDeptForOrderMap"
		parameterType="com.chinatour.entity.Order">
		<include refid="sourceDetailsS_sql" />
	</select>
	<!-- 统计中订单详情语句 -->
	<select id="detailsCountS" resultType="com.chinatour.entity.Order"
		parameterType="com.chinatour.entity.Order">
		SELECT
		SUM(l.TotalPeople) AS TotalPeople,
		SUM(l.CommonTourFee) AS CommonTourFee,
		SUM(l.pay)AS pay,
		SUM(l.cost)AS cost
		FROM(
		SELECT
		x.OrderId,
		x.TotalPeople,
		x.CommonTourFee,
		SUM(x.pay) AS pay,
		SUM(x.cost)AS cost
		FROM(
		SELECT
		a.OrderId,
		a.TotalPeople,
		a.CommonTourFee,
		IF(pcr.PayOrCost=1,SUM(pcr.Sum),0)AS pay,
		IF(pcr.PayOrCost=2,SUM(pcr.Sum),0)AS cost
		FROM(
		SELECT
		o.OrderId,
		o.TotalPeople,
		o.CommonTourFee
		FROM
		orders o,
		customer_source cs,
		orders_total tot,
		<if test="record.role=='Region'">
			region_dept_rel rd,
		</if>
		<if test="record.role=='Group'">
			admin_group ag,
		</if>
		tour_info_for_order ot
		<where>
			o.OrderId=ot.OrderId
			and o.ordersTotalId=tot.ordersTotalId
			and cs.customersourceId=tot.customersourceId
			<if test="record.role=='Region'">
				AND rd.DeptId=o.DeptId
			</if>
			<if test="record.role=='Group'">
				AND o.UserId=ag.AdminId
			</if>
			<if test="record.groupId!=null">
				AND ag.groupId=#{record.groupId}
			</if>
			<if test="record.contact!=null">
				AND rd.RegionId=#{record.contact}
			</if>
			<if test="record.userId!=null">
				AND o.UserId=#{record.userId}
			</if>
			<if test="record.sourceName!=null">
				AND cs.sourceName=#{record.sourceName}
			</if>
			<if test="record.ticketType=='booking'">
				<if test="record.time!=null">
					AND DATE_FORMAT(o.CreateTime,'%Y-%m')=#{record.time}
				</if>
				<if test="record.year!=null">
					AND DATE_FORMAT(o.CreateTime,'%Y')=#{record.year}
				</if>
			</if>
			<if test="record.ticketType=='arrival'">
				<if test="record.time!=null">
					AND DATE_FORMAT(ot.ScheduleOfArriveTime,'%Y-%m')=#{record.time}
				</if>
				<if test="record.year!=null">
					AND DATE_FORMAT(ot.ScheduleOfArriveTime,'%Y')=#{record.year}
				</if>
			</if>
			<if test="record.deptId!=null">
				AND o.DeptId=#{record.deptId}
			</if>
			<if test="record.contactName!=null">
				AND rd.RegionId=#{record.contactName}
			</if>
			<if test="record.isSelfOrganize!=null">
				AND o.IsSelfOrganize=#{record.isSelfOrganize}
			</if>
			<if test="record.userName!=null">
				AND o.UserName LIKE CONCAT(CONCAT('%', #{record.userName}), '%')
			</if>
			<if test="record.peerId!=null">
				AND o.PeerId=#{record.peerId}
			</if>
		</where>

		)a LEFT JOIN pay_cost_records pcr
		ON a.OrderId=pcr.OrderId
		GROUP BY a.OrderId,pcr.PayOrCost
		)x GROUP BY x.OrderId
		)l
	</select>
	<select id="statementList" resultType="com.chinatour.entity.Order" parameterType="com.chinatour.entity.Order">
		SELECT 
			a.OrderId,
			a.OrderNo,
			a.ContactName, 
			a.pay, 
			a.CusPrice, 
			a.PeerUserFee, 
			a.arriveDateTime, 
			a.lineName , 
			a.commonTourFee , 
			a.costState,
			SUM(a.tip)AS opProfit ,
			SUM(a.self)AS agentProfit,
			SUM(a.hotelPrice)AS payTotalSum,
			SUM(a.ticketPrice)AS costTotalSum,
			SUM(a.supplement)AS singleProfit,
			SUM(a.discounts)AS priceExpression,
			a.TotalFeeOfOthers AS cost
			FROM
			(SELECT 
				o.*,
				ot.ContactName,
				rio.TotalCommonTourFee AS pay,
				t.ScheduleOfArriveTime AS arriveDateTime,
				t.LineName AS lineName,
				IF(item.Num=201,item.ItemFee,0) AS tip,
				IF(item.Num=202,item.ItemFee,0) AS self,
				IF(item.Num=203,item.ItemFee,0) AS hotelPrice,
				IF(item.Num=204,item.ItemFee,0) AS ticketPrice,
				IF(item.Num=205,item.ItemFee,0) AS supplement,
				IF(item.Type=3,item.ItemFee,0)AS discounts,
				rio.TotalFeeOfOthers
			FROM 
				orders o,
				orders_total ot,
				receivable_info_of_order rio,
				tour_info_for_order t ,
				t_order_receive_item item 
			<where>
				o.OrdersTotalId=ot.OrdersTotalId
				AND o.OrderId=rio.OrderId
				AND o.OrderId=t.OrderId
				AND rio.ReceivableInfoOfOrderId=item.ReceivableInfoOfOrderId
				<if test="record.id != null">
						AND o.OrderId = #{record.id,jdbcType=VARCHAR}
					</if>
					<if test="record.orderNo != null">
						AND o.OrderNo LIKE CONCAT('%','${record.orderNo}','%')
					</if>
					<if test="record.lineName != null">
						AND t.lineName LIKE CONCAT('%','${record.lineName}','%')
					</if>
					<if test="record.tax!=null and record.tax!=4">
						AND o.Tax=#{record.tax}
					</if>
					<if test="record.tax==4">
						AND (o.Tax=2 or o.Tax=4)
					</if>
					<if test="record.state != null and record.state != 5">
						AND o.State = #{record.state,jdbcType=VARCHAR}
					</if>
					<if test="record.state == 5">
						AND o.State !=5
						AND o.State !=6
					</if>
					<if test="record.userId != null">
						AND o.UserId = #{record.userId,jdbcType=VARCHAR}
					</if>
					<if test="record.peerUserId != null">
						AND o.PeerUserId = #{record.peerUserId,jdbcType=VARCHAR}
					</if>
					<if test="record.tourTypeId != null">
						AND o.TourTypeId = #{record.tourTypeId,jdbcType=TINYINT}
					</if>
					<if test="record.refNo != null">
						AND o.REFNO LIKE CONCAT('%','${record.refNo}','%')
					</if>
					<if test="record.tourCode != null">
						AND o.TourCode LIKE CONCAT('%','${record.tourCode}','%')
					</if>
					<if test="record.tourId != null">
						AND o.TourId = #{record.tourId,jdbcType=VARCHAR}
					</if>
					<if test="record.contact != null">
						AND o.Contact LIKE CONCAT('%','${record.contact}','%')
					</if>
					<if test="record.orderType != null">
						AND o.OrderType = #{record.orderType,jdbcType=TINYINT}
					</if>
					<if test="record.payState != null">
						AND o.PayState = #{record.payState,jdbcType=TINYINT}
					</if>
					<if test="record.reviewState != null">
						AND o.ReviewState = #{record.reviewState,jdbcType=TINYINT}
					</if>
					<if test="record.brand != null">
						AND o.Brand LIKE CONCAT('%','${record.brand}','%')
					</if>
					<if test="record.orderTourType != null">
						AND o.OrderTourType =#{record.orderTourType,jdbcType=VARCHAR}
					</if>
					<if test="record.bookingBeginningDate != null">
						AND DATE_FORMAT(t.ScheduleOfArriveTime,'%Y-%m-%d')<![CDATA[>=]]>
						DATE_FORMAT(#{record.bookingBeginningDate},'%Y-%m-%d')
					</if>
					<if test="record.bookingEndingDate != null">
						AND DATE_FORMAT(t.ScheduleOfArriveTime,'%Y-%m-%d')<![CDATA[<=]]>
						DATE_FORMAT(#{record.bookingEndingDate},'%Y-%m-%d')
					</if>
				</where>
				ORDER BY o.OrderId DESC)a 
			GROUP BY a.OrderId
	</select>
	<select id="statementCount" resultType="com.chinatour.entity.Order" parameterType="com.chinatour.entity.Order">
	SELECT 
		SUM(CommonTourFee) AS CommonTourFee,
		SUM(PeerUserFee) AS PeerUserFee,
		SUM(pay) AS pay,
		SUM(CusPrice) AS cusPrice,
		SUM(priceExpression) AS priceExpression,
		SUM(cost) AS cost
	FROM(
			SELECT
				o.CommonTourFee,
				o.PeerUserFee,
				o.CusPrice,
				IF(o.CostState!=2,o.CommonTourFee,0) AS priceExpression,
				IF(o.CostState=2,o.CommonTourFee,0) AS cost, 
				rio.TotalCommonTourFee AS pay
			FROM 
				orders o,
				receivable_info_of_order rio,
				tour_info_for_order t 
			<where>
				o.OrderId=rio.OrderId
				AND o.OrderId=t.OrderId
				<if test="record.id != null">
					AND o.OrderId = #{record.id,jdbcType=VARCHAR}
				</if>
				<if test="record.orderNo != null">
					AND o.OrderNo LIKE CONCAT('%','${record.orderNo}','%')
				</if>
				<if test="record.lineName != null">
					AND t.lineName LIKE CONCAT('%','${record.lineName}','%')
				</if>
				<if test="record.tax!=null and record.tax!=4">
					AND
					o.Tax=#{record.tax}
				</if>
				<if test="record.tax==4">
					AND (o.Tax=2 or o.Tax=4)
				</if>
				<if test="record.state != null and record.state != 5">
					AND o.State = #{record.state,jdbcType=VARCHAR}
				</if>
				<if test="record.state == 5">
					AND o.State !=5
					AND o.State !=6
				</if>
				<if test="record.userId != null">
					AND o.UserId = #{record.userId,jdbcType=VARCHAR}
				</if>
				<if test="record.peerUserId != null">
					AND o.PeerUserId = #{record.peerUserId,jdbcType=VARCHAR}
				</if>
				<if test="record.tourTypeId != null">
					AND o.TourTypeId = #{record.tourTypeId,jdbcType=TINYINT}
				</if>
				<if test="record.tourCode != null">
					AND o.TourCode LIKE CONCAT('%','${record.tourCode}','%')
				</if>
				<if test="record.tourId != null">
					AND o.TourId = #{record.tourId,jdbcType=VARCHAR}
				</if>
				<if test="record.contact != null">
					AND o.Contact LIKE CONCAT('%','${record.contact}','%')
				</if>
				<if test="record.orderType != null">
					AND o.OrderType = #{record.orderType,jdbcType=TINYINT}
				</if>
				<if test="record.payState != null">
					AND o.PayState = #{record.payState,jdbcType=TINYINT}
				</if>
				<if test="record.reviewState != null">
					AND o.ReviewState = #{record.reviewState,jdbcType=TINYINT}
				</if>
				<if test="record.brand != null">
					AND o.Brand LIKE CONCAT('%','${record.brand}','%')
				</if>
				<if test="record.orderTourType != null">
					AND o.OrderTourType =
					#{record.orderTourType,jdbcType=VARCHAR}
				</if>
				<if test="record.bookingBeginningDate != null">
					AND DATE_FORMAT(t.ScheduleOfArriveTime,'%Y-%m-%d')<![CDATA[>=]]>
					DATE_FORMAT(#{record.bookingBeginningDate},'%Y-%m-%d')
				</if>
				<if test="record.bookingEndingDate != null">
					AND DATE_FORMAT(t.ScheduleOfArriveTime,'%Y-%m-%d')<![CDATA[<=]]>
					DATE_FORMAT(#{record.bookingEndingDate},'%Y-%m-%d')
				</if>
			</where>
		)q
	</select>
	
	<select id="findTourOrderListVOForExport" resultMap="tourOrderListVOResultMap">
		SELECT
		ord.OrderId OrderId,OrderNo, OrderNoIn, TotalPeople, CommonTourFee as SumFee,
		PeerUserFee as peerUserFee,ord.REFNO as refNo,
		Tax, State, ord.UserId, TourTypeId, Contact, TourCode, TourId, CreateTime
		as Createdate,
		PeerId, OrderType, OrderTourType, ArriveDate, FlightPnr,
		NonGroupType,d.deptName,v.name as peerName,
		PeerUserId, NoticeState, Brand, IsSelfOrganize, Rate, PayState, WarnState,
		PeerState, ReviewState, CostState,
		ord.ModifyDate,OrdersTotalId,CheckTime,UserName,t.LineName
		LineName,t.ScheduleLineCode ScheduleLineCode,t.ScheduleOfArriveTime
		ScheduleOfArriveTime
		FROM
		(
		<if test="lastName!=null or firstName!=null or middleName!=null">
			SELECT o.* 
			FROM orders o, customer_order_rel cor , customer c 
			<where>
				o.OrderId=cor.OrderId AND cor.CustomerId=c.CustomerId 
				<if test="lastName != null">
					AND c.lastName LIKE CONCAT('%','${lastName}','%')
				</if>
				<if test="firstName != null">
					AND c.firstName LIKE CONCAT('%','${firstName}','%')
				</if>
				<if test="middleName != null">
					AND c.middleName LIKE CONCAT('%','${middleName}','%')
				</if>
				<if test="id != null">
					AND OrderId = #{id,jdbcType=VARCHAR}
				</if>
				<if test="orderNo != null">
					AND OrderNo LIKE CONCAT('%','${orderNo}','%')
				</if>
				<if test="orderNoIn != null">
					AND OrderNoIn = #{orderNoIn,jdbcType=VARCHAR}
				</if>
				<if test="totalPeople != null">
					AND TotalPeople = #{totalPeople,jdbcType=INTEGER}
				</if>
				<if test="commonTourFee != null">
					AND CommonTourFee =
					#{commonTourFee,jdbcType=DECIMAL}
				</if>
				<if test="tax!=null and tax!=4">
					AND
					Tax=#{tax}
				</if>
				<if test="tax==4">
					AND (Tax=2 or Tax=4)
				</if>
				<if test="state != null and state != 5">
					AND State = #{state,jdbcType=VARCHAR}
				</if>
				<if test="state == 5">
					AND State !=5
					AND State !=6
				</if>
				<if test="userId != null">
					AND UserId = #{userId,jdbcType=VARCHAR}
				</if>
				<if test="peerUserId != null">
					AND PeerUserId = #{peerUserId,jdbcType=VARCHAR}
				</if>
				<if test="tourTypeId != null">
					AND TourTypeId = #{tourTypeId,jdbcType=TINYINT}
				</if>
				<if test="tourCode != null">
					AND TourCode LIKE CONCAT('%','${tourCode}','%')
				</if>
				<if test="tourId != null">
					AND TourId = #{tourId,jdbcType=VARCHAR}
				</if>
				<if test="contact != null">
					AND Contact LIKE CONCAT('%','${contact}','%')
				</if>
				<if test="orderType != null">
					AND OrderType = #{orderType,jdbcType=TINYINT}
				</if>
				<if test="arriveDate != null">
					AND ArriveDate = #{arriveDate,jdbcType=DATE}
				</if>
				<if test="flightPnr != null">
					AND FlightPnr LIKE CONCAT('%','${flightPnr}','%')
				</if>
				<if test="nonGroupType != null">
					AND NonGroupType =
					#{nonGroupType,jdbcType=VARCHAR}
				</if>
				<if test="noticeState != null">
					AND NoticeState = #{noticeState,jdbcType=INTEGER}
				</if>
				<if test="payState != null">
					AND PayState = #{payState,jdbcType=TINYINT}
				</if>
				<if test="warnState != null">
					AND WarnState = #{warnState,jdbcType=TINYINT}
				</if>
				<if test="peerState != null">
					AND PeerState = #{peerState,jdbcType=TINYINT}
				</if>
				<if test="reviewState != null">
					AND ReviewState = #{reviewState,jdbcType=TINYINT}
				</if>
				<if test="costState != null">
					AND CostState = #{costState,jdbcType=TINYINT}
				</if>
				<if test="modifyDate != null">
					AND ModifyDate = #{modifyDate,jdbcType=TIMESTAMP}
				</if>
				<if test="ordersTotalId != null">
					AND OrdersTotalId =
					#{ordersTotalId,jdbcType=VARCHAR}
				</if>
				<if test="deptId != null">
					AND DeptId = #{deptId,jdbcType=VARCHAR}
				</if>
				<if test="brand != null">
					AND Brand LIKE CONCAT('%','${brand}','%')
				</if>
				<if test="userName != null">
					AND UserName = #{userName,jdbcType=VARCHAR}
				</if>
				<if test="orderTourType != null">
					AND OrderTourType =
					#{orderTourType,jdbcType=VARCHAR}
				</if>
				<if
					test="isSelfOrganize != null and isSelfOrganize != 3 and isSelfOrganize != 4">
					AND IsSelfOrganize = #{isSelfOrganize,jdbcType=TINYINT}
				</if>
				<if test="isSelfOrganize == 3">
					AND OrderTourType !='inbound_sys'
					AND IsSelfOrganize=0
				</if>
				<if test="isSelfOrganize == 4">
					AND OrderTourType ='inbound_sys'
				</if>
				<if test="reference != null">
					AND Reference = #{reference,jdbcType=VARCHAR}
				</if>
				<if test="rate != null">
					AND Rate = #{rate,jdbcType=DECIMAL}
				</if>
				<if test="bookingBeginningDate != null">
					AND CreateTime <![CDATA[>=]]>
					#{bookingBeginningDate,jdbcType=TIMESTAMP}
				</if>
				<if test="bookingEndingDate != null">
					AND DATE_FORMAT(CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
					#{bookingEndingDate,jdbcType=TIMESTAMP}
				</if>
				<if test="settlementDateBeg != null">
					AND CheckTime <![CDATA[>=]]>
					#{settlementDateBeg,jdbcType=TIMESTAMP}
				</if>
				<if test="settlementDateEnd != null">
					AND CheckTime <![CDATA[<=]]>
					#{settlementDateEnd,jdbcType=TIMESTAMP}
				</if>
				<if test="wr =='Retail'">
					AND PeerId =''
				</if>
				<if test="wr =='WholeSale'">
					AND PeerId !=''
				</if>
			</where>
		</if>
		<if test="lastName==null and firstName==null and middleName==null">
			SELECT
			<include refid="Base_Column_List" />
			FROM orders
			<where>
				<if test="id != null">
					AND OrderId = #{id,jdbcType=VARCHAR}
				</if>
				<if test="orderNo != null">
					AND OrderNo LIKE CONCAT('%','${orderNo}','%')
				</if>
				<if test="orderNoIn != null">
					AND OrderNoIn = #{orderNoIn,jdbcType=INTEGER}
				</if>
				<if test="totalPeople != null">
					AND TotalPeople = #{totalPeople,jdbcType=INTEGER}
				</if>
				<if test="commonTourFee != null">
					AND CommonTourFee =
					#{commonTourFee,jdbcType=DECIMAL}
				</if>
				<if test="tax!=null and tax!=4">
					AND
					Tax=#{tax}
				</if>
				<if test="tax==4">
					AND (Tax=2 or Tax=4)
				</if>
				<if test="state != null and state != 5">
					AND State = #{state,jdbcType=VARCHAR}
				</if>
				<if test="state == 5">
					AND State !=5
					AND State !=6
				</if>
				<if test="userId != null">
					AND UserId = #{userId,jdbcType=VARCHAR}
				</if>
				<if test="peerUserId != null">
					AND PeerUserId = #{peerUserId,jdbcType=VARCHAR}
				</if>
				<if test="tourTypeId != null">
					AND TourTypeId = #{tourTypeId,jdbcType=TINYINT}
				</if>
				<if test="tourCode != null">
					AND TourCode LIKE CONCAT('%','${tourCode}','%')
				</if>
				<if test="tourId != null">
					AND TourId = #{tourId,jdbcType=VARCHAR}
				</if>
				<if test="contact != null">
					AND Contact LIKE CONCAT('%','${contact}','%')
				</if>
				<if test="orderType != null">
					AND OrderType = #{orderType,jdbcType=TINYINT}
				</if>
				<if test="arriveDate != null">
					AND ArriveDate = #{arriveDate,jdbcType=DATE}
				</if>
				<if test="flightPnr != null">
					AND FlightPnr LIKE CONCAT('%','${flightPnr}','%')
				</if>
				<if test="nonGroupType != null">
					AND NonGroupType =
					#{nonGroupType,jdbcType=VARCHAR}
				</if>
				<if test="noticeState != null">
					AND NoticeState = #{noticeState,jdbcType=INTEGER}
				</if>
				<if test="payState != null">
					AND PayState = #{payState,jdbcType=TINYINT}
				</if>
				<if test="warnState != null">
					AND WarnState = #{warnState,jdbcType=TINYINT}
				</if>
				<if test="peerState != null">
					AND PeerState = #{peerState,jdbcType=TINYINT}
				</if>
				<if test="reviewState != null">
					AND ReviewState = #{reviewState,jdbcType=TINYINT}
				</if>
				<if test="costState != null">
					AND CostState = #{costState,jdbcType=TINYINT}
				</if>
				<if test="modifyDate != null">
					AND ModifyDate = #{modifyDate,jdbcType=TIMESTAMP}
				</if>
				<if test="ordersTotalId != null">
					AND OrdersTotalId =
					#{ordersTotalId,jdbcType=VARCHAR}
				</if>
				<if test="deptId != null">
					AND DeptId = #{deptId,jdbcType=VARCHAR}
				</if>
				<if test="brand != null">
					AND Brand LIKE CONCAT('%','${brand}','%')
				</if>
				<if test="userName != null">
					AND UserName = #{userName,jdbcType=VARCHAR}
				</if>
				<if test="orderTourType != null">
					AND OrderTourType =
					#{orderTourType,jdbcType=VARCHAR}
				</if>
				<if
					test="isSelfOrganize != null and isSelfOrganize != 3 and isSelfOrganize != 4">
					AND IsSelfOrganize = #{isSelfOrganize,jdbcType=TINYINT}
				</if>
				<if test="isSelfOrganize == 3">
					AND OrderTourType !='inbound_sys'
					AND IsSelfOrganize=0
				</if>
				<if test="isSelfOrganize == 4">
					AND OrderTourType ='inbound_sys'
				</if>
				<if test="reference != null">
					AND Reference = #{reference,jdbcType=VARCHAR}
				</if>
				<if test="rate != null">
					AND Rate = #{rate,jdbcType=DECIMAL}
				</if>
				<if test="bookingBeginningDate != null">
					AND CreateTime <![CDATA[>=]]>
					#{bookingBeginningDate,jdbcType=TIMESTAMP}
				</if>
				<if test="bookingEndingDate != null">
					AND DATE_FORMAT(CreateTime,'%Y-%m-%d') <![CDATA[<=]]>
					#{bookingEndingDate,jdbcType=TIMESTAMP}
				</if>
				<if test="settlementDateBeg != null">
					AND CheckTime <![CDATA[>=]]>
					#{settlementDateBeg,jdbcType=TIMESTAMP}
				</if>
				<if test="settlementDateEnd != null">
					AND CheckTime <![CDATA[<=]]>
					#{settlementDateEnd,jdbcType=TIMESTAMP}
				</if>
				<if test="wr =='Retail'">
					AND PeerId =''
				</if>
				<if test="wr =='WholeSale'">
					AND PeerId !=''
				</if>
			</where>
		</if>
		) ord JOIN tour_info_for_order t
		ON ord.OrderId = t.OrderId JOIN dept d ON ord.deptId=d.deptId left JOIN
		vender v ON ord.peerId=v.venderId
		<where>
			<if test="arriveDateTime != null">
				AND
				DATE_FORMAT(t.ScheduleOfArriveTime,'%Y-%m')=DATE_FORMAT(#{arriveDateTime},'%Y-%m')
			</if>
			<if test="beginningDate != null">
				AND t.ScheduleOfArriveTime <![CDATA[>=]]>
				#{beginningDate,jdbcType=TIMESTAMP}
			</if>
			<if test="endingDate != null">
				AND t.ScheduleOfArriveTime <![CDATA[<=]]>
				#{endingDate,jdbcType=TIMESTAMP}
			</if>
			<if test="lineName != null">
				AND t.LineName LIKE CONCAT('%','${lineName}','%')
			</if>
			<if test="peerId != null">
				AND v.Name LIKE CONCAT('%','${peerId}','%')
			</if>
			<if test="deptName != null">
				AND d.DeptName LIKE CONCAT('%','${deptName}','%')
			</if>
		</where>
		ORDER BY ord.CreateTime DESC,ord.state DESC
	</select>
	
	<select id="findSelect" resultMap="BaseResultMap" parameterType="com.chinatour.entity.Order">
		SELECT
		<include refid="Base_Column_List" />
		FROM orders
		<where>
			<if test="id != null">
				 OrderId = #{id,jdbcType=VARCHAR}
			</if>
			<if test="orderNo != null">
				AND OrderNo LIKE CONCAT('%','${orderNo}','%')
			</if>
		</where>
		LIMIT 10
	</select>
	
	<select id="findCount" resultType="int" parameterType="com.chinatour.entity.Order">
		SELECT
		COUNT(o.orderId)
		FROM orders o,tour t
		WHERE o.TourId=t.TourId
		AND o.UserId=#{userId,jdbcType=VARCHAR}
		AND t.arriveDateTime <![CDATA[>=]]>
		#{beginningDate,jdbcType=TIMESTAMP}
		AND t.arriveDateTime <![CDATA[<=]]>
		#{endingDate,jdbcType=TIMESTAMP}
	</select>
	<select id="findByOrdersTotal" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM 
			orders
		WHERE
			OrdersTotalId=#{ordersTotalId,jdbcType=VARCHAR}
		ORDER BY
			OrderNo
		DESC
	</select>
	<select id="findByRefNo" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT
		<include refid="Base_Column_List" />
		FROM orders
		WHERE RefNo = #{RefNo,jdbcType=VARCHAR}
	</select>
	<select id="detailsCountOptional" resultType="com.chinatour.entity.Order"
		parameterType="com.chinatour.entity.Order">
		SELECT
		SUM(l.TotalPeople) AS TotalPeople,
		SUM(l.CommonTourFee) AS CommonTourFee,
		SUM(l.pay)AS pay,
		SUM(l.cost)AS cost
		FROM(
		SELECT
		x.OrderId,
		x.TotalPeople,
		x.CommonTourFee,
		SUM(x.pay) AS pay,
		SUM(x.cost)AS cost
		FROM(
		SELECT
		a.OrderId,
		a.TotalPeople,
		a.CommonTourFee,
		IF(pcr.PayOrCost=1,SUM(pcr.Sum),0)AS pay,
		IF(pcr.PayOrCost=2,SUM(pcr.Sum),0)AS cost
		FROM(
			SELECT
			o.OrderId,
			o.TotalPeople,
			o.CommonTourFee
			FROM
			orders o,
			dept d,
			<if test="record.role=='Region'">
				region_dept_rel rd,
			</if>
			<if test="record.role=='Group'">
				admin_group ag,
			</if>
				receivable_info_of_order ro,
				t_order_receive_item tm,
				optionalexcursion ox
			<where>
				AND o.OrderId= ro.OrderId
				and ro.ReceivableInfoOfOrderId=tm.ReceivableInfoOfOrderId
				AND tm.OptionalId=ox.Id
				AND d.DeptId=o.DeptId
				<!-- AND o.State!=5 
				AND o.State!=6  -->
				<if test="record.role=='Region'">
					AND rd.DeptId=d.DeptId
				</if>
				<if test="record.role=='Group'">
					AND o.UserId=ag.AdminId
				</if>
				<if test="record.groupId!=null">
					AND ag.groupId=#{record.groupId}
				</if>
				<if test="record.contact!=null">
					AND rd.RegionId=#{record.contact}
				</if>
				<if test="record.userId!=null">
					AND o.UserId=#{record.userId}
				</if>
				<if test="record.orderType!=null">
					<if test="record.orderType==2">
						AND o.PeerId!=""  <!-- 同行订单类型标识 -->
					</if>
					<if test="record.orderType==10">
						AND o.IsSelfOrganize!=2  <!-- 团订单类型标识 -->
					</if>
					<if test="record.orderType==5">
						AND o.IsSelfOrganize=2  <!-- 非团订单类型标识 -->
					</if>
					<if test="record.orderType==1">
						AND o.OrderType=#{record.orderType}  <!-- 同行订单类型标识 -->
						AND o.IsSelfOrganize!=2
					</if>
				</if>
				<if test="record.time!=null">
					AND DATE_FORMAT(o.CreateTime,'%Y-%m')=#{record.time}
				</if>
				<if test="record.year!=null">
					AND DATE_FORMAT(o.CreateTime,'%Y')=#{record.year}
				</if>
				<if test="record.deptId!=null">
					AND o.DeptId=#{record.deptId}
				</if>
				<if test="record.contactName!=null">
					AND rd.RegionId=#{record.contactName}
				</if>
				<if test="record.isSelfOrganize!=null">
					<if test="record.isSelfOrganize==5">
						AND o.IsSelfOrganize!=2  <!-- 团订单类型标识 -->
					</if>
					<if test="record.isSelfOrganize!=5">
						AND o.IsSelfOrganize=#{record.isSelfOrganize}  <!-- 非团订单类型标识 -->
					</if>
				</if>
				<if test="record.userName!=null">
					AND o.UserName LIKE CONCAT(CONCAT('%', #{record.userName}), '%')
				</if>
				<if test="record.peerId!=null">
					AND o.PeerId=#{record.peerId}
				</if>
				<if test="record.optionalId">
					AND tm.optionalId=#{record.optionalId}
				</if>
			</where>
			)a LEFT JOIN pay_cost_records pcr
		ON a.OrderId=pcr.OrderId
		GROUP BY a.OrderId,pcr.PayOrCost
		)x GROUP BY x.OrderId
		)l
	</select>
		<!-- 统计翻页功能 -->
	<select id="orderDetailsOptional" resultMap="ResultDeptForOrderMap">
		<include refid="Pager.paginationStart" />
		<include refid="orderDetailsByOptional" />
		<include refid="Pager.paginationEnd" />
	</select>
	
	<select id="orderDetailsOptioanlCount" resultType="int">
		<include refid="Pager.countStart" />
		<include refid="orderDetailsByOptional" />
		<include refid="Pager.countEnd" />
	</select>
	
	<sql id="orderDetailsByOptional">
		SELECT
		x.OrderId,
		x.OrderNo,
		x.UserName,
		x.ScheduleOfArriveTime AS arriveDateTime,
		x.TourCode,
		x.TourId,
		x.TotalPeople,
		x.CreateTime AS arriveDate,
		x.State,
		x.Tax,
		x.CommonTourFee,
		x.CheckTime,
		x.TourTypeId,
		SUM(x.pay)AS pay,
		SUM(x.cost)AS cost
		FROM(
			SELECT 
				a.OrderId,
				a.OrderNo,
				a.UserName,
				a.ScheduleOfArriveTime,
				a.TourCode,a.TotalPeople,
				a.TourId,
				a.CreateTime,
				a.State,
				a.Tax,
				a.CommonTourFee,
				a.CheckTime, 
				a.PeerId,
				a.TourTypeId,
				IF(pcr.PayOrCost=1,SUM(pcr.Sum),0)AS pay,
				IF(pcr.PayOrCost=2,SUM(pcr.Sum),0)AS cost  
			FROM(
				SELECT 
					o.OrderId,
					o.OrderNo,
					o.UserName,
					ot.ScheduleOfArriveTime,
					o.TourCode,o.TotalPeople,
					o.TourId,
					o.CreateTime,
					o.State,
					o.Tax,
					o.CommonTourFee,
					o.PeerId,
					o.CheckTime,
					o.TourTypeId
				FROM 
					orders o,
					orders_total tot,
					dept d,
					optionalexcursion ox,
					receivable_info_of_order ro,
					t_order_receive_item tm,
					tour_info_for_order ot 
					<if test="record.role=='Region'">
						region_dept_rel rd,
					</if>
					<if test="record.role=='Group'">
						admin_group ag,
					</if>
				<where> 
					AND o.OrderId=ot.OrderId
					AND o.OrderId= ro.OrderId
					and ro.ReceivableInfoOfOrderId=tm.ReceivableInfoOfOrderId
					AND tm.OptionalId=ox.Id
					AND d.DeptId=o.DeptId
					<!-- AND o.State!=5 
					AND o.State!=6 -->
					<if test="record.role=='Region'">
						AND rd.DeptId=d.DeptId
					</if>
					<if test="record.role=='Group'">
						AND o.UserId=ag.AdminId
					</if>
					AND tot.OrdersTotalId=o.OrdersTotalId
					<if test="record.groupId!=null">
						AND ag.groupId=#{record.groupId}
					</if>
					<if test="record.contact!=null">
						AND rd.RegionId=#{record.contact}
					</if>
					<if test="record.userId!=null">
						AND o.UserId=#{record.userId}
					</if>
					<if test="record.userName!=null">
						AND o.userName=#{record.userName}
					</if>
					<if test="record.time!=null">
						AND DATE_FORMAT(o.CreateTime,'%Y-%m')=#{record.time}
					</if>
					<if test="record.year!=null">
						AND DATE_FORMAT(o.CreateTime,'%Y')=#{record.year}
					</if>
					<if test="record.deptId!=null">
						AND o.DeptId=#{record.deptId}
					</if>
					<if test="record.isSelfOrganize!=null"> 
						AND o.IsSelfOrganize=#{record.isSelfOrganize}
					</if> 
					<if test="record.wr!=null"> 
						AND tot.wr=#{record.wr}
					</if> 
					<if test="record.optionalId!=null"> 
						AND ox.Id=#{record.optionalId}
					</if> 
					<if test="record.brand!=null"> 
						AND o.Brand=#{record.brand}
					</if> 
				</where> 
						
				)a LEFT JOIN pay_cost_records pcr 
				ON a.OrderId=pcr.OrderId 
				GROUP BY a.OrderId,pcr.PayOrCost
			)x GROUP BY x.OrderId ORDER BY x.TourId,x.ScheduleOfArriveTime
	</sql>
	<select id="detailsOptionalPrint" resultMap="ResultDeptForOrderMap"
		parameterType="com.chinatour.entity.Order">
		<include refid="orderDetailsByOptional" />
	</select>
		<select id="detailsCountOptionalForArrival" resultType="com.chinatour.entity.Order"
		parameterType="com.chinatour.entity.Order">
		SELECT
		SUM(l.TotalPeople) AS TotalPeople,
		SUM(l.CommonTourFee) AS CommonTourFee,
		SUM(l.pay)AS pay,
		SUM(l.cost)AS cost
		FROM(
		SELECT
		x.OrderId,
		x.TotalPeople,
		x.CommonTourFee,
		SUM(x.pay) AS pay,
		SUM(x.cost)AS cost
		FROM(
		SELECT
		a.OrderId,
		a.TotalPeople,
		a.CommonTourFee,
		IF(pcr.PayOrCost=1,SUM(pcr.Sum),0)AS pay,
		IF(pcr.PayOrCost=2,SUM(pcr.Sum),0)AS cost
		FROM(
			SELECT
			o.OrderId,
			o.TotalPeople,
			o.CommonTourFee
			FROM
			orders o,
			dept d,
			<if test="record.role=='Region'">
				region_dept_rel rd,
			</if>
			<if test="record.role=='Group'">
				admin_group ag,
			</if>
				tour_info_for_order ot,
				receivable_info_of_order ro,
				t_order_receive_item tm,
				optionalexcursion ox
			<where>
				AND o.OrderId=ot.OrderId
				AND o.OrderId= ro.OrderId
				and ro.ReceivableInfoOfOrderId=tm.ReceivableInfoOfOrderId
				AND tm.OptionalId=ox.Id
				AND d.DeptId=o.DeptId
				<!-- AND o.State!=5 
				AND o.State!=6  -->
				<if test="record.role=='Region'">
					AND rd.DeptId=d.DeptId
				</if>
				<if test="record.role=='Group'">
					AND o.UserId=ag.AdminId
				</if>
				<if test="record.groupId!=null">
					AND ag.groupId=#{record.groupId}
				</if>
				<if test="record.contact!=null">
					AND rd.RegionId=#{record.contact}
				</if>
				<if test="record.userId!=null">
					AND o.UserId=#{record.userId}
				</if>
				<if test="record.orderType!=null">
					<if test="record.orderType==2">
						AND o.PeerId!=""  <!-- 同行订单类型标识 -->
					</if>
					<if test="record.orderType==10">
						AND o.IsSelfOrganize!=2  <!-- 团订单类型标识 -->
					</if>
					<if test="record.orderType==5">
						AND o.IsSelfOrganize=2  <!-- 非团订单类型标识 -->
					</if>
					<if test="record.orderType==1">
						AND o.OrderType=#{record.orderType}  <!-- 同行订单类型标识 -->
						AND o.IsSelfOrganize!=2
					</if>
				</if>
				<if test="record.time!=null">
					AND DATE_FORMAT(ot.ScheduleOfArriveTime,'%Y-%m')=#{record.time}
				</if>
				<if test="record.year!=null">
					AND DATE_FORMAT(ot.ScheduleOfArriveTime,'%Y')=#{record.departureDate}
				</if>
				<if test="record.deptId!=null">
					AND o.DeptId=#{record.deptId}
				</if>
				<if test="record.contactName!=null">
					AND rd.RegionId=#{record.contactName}
				</if>
				<if test="record.isSelfOrganize!=null">
					<if test="record.isSelfOrganize==5">
						AND o.IsSelfOrganize!=2  <!-- 团订单类型标识 -->
					</if>
					<if test="record.isSelfOrganize!=5">
						AND o.IsSelfOrganize=#{record.isSelfOrganize}  <!-- 非团订单类型标识 -->
					</if>
				</if>
				<if test="record.userName!=null">
					AND o.UserName LIKE CONCAT(CONCAT('%', #{record.userName}), '%')
				</if>
				<if test="record.peerId!=null">
					AND o.PeerId=#{record.peerId}
				</if>
				<if test="record.optionalId">
					AND tm.optionalId=#{record.optionalId}
				</if>
			</where>
			)a LEFT JOIN pay_cost_records pcr
		ON a.OrderId=pcr.OrderId
		GROUP BY a.OrderId,pcr.PayOrCost
		)x GROUP BY x.OrderId
		)l
	</select>
			<!-- 统计翻页功能 按抵达日期统计-->
	<select id="ArrivalDetailsByOptional" resultMap="ResultDeptForOrderMap">
		<include refid="Pager.paginationStart" />
		<include refid="ArrivalDetailsByOptionalsql" />
		<include refid="Pager.paginationEnd" />
	</select>
	
	<select id="ArrivalDetailsOptioanlCount" resultType="int">
		<include refid="Pager.countStart" />
		<include refid="ArrivalDetailsByOptionalsql" />
		<include refid="Pager.countEnd" />
	</select>
	<sql id="ArrivalDetailsByOptionalsql">
		SELECT
		x.OrderId,
		x.OrderNo,
		x.UserName,
		x.ScheduleOfArriveTime AS arriveDateTime,
		x.TourCode,
		x.TourId,
		x.TotalPeople,
		x.CreateTime AS arriveDate,
		x.State,
		x.Tax,
		x.CommonTourFee,
		x.CheckTime,
		x.TourTypeId,
		SUM(x.pay)AS pay,
		SUM(x.cost)AS cost
		FROM(
			SELECT 
				a.OrderId,
				a.OrderNo,
				a.UserName,
				a.ScheduleOfArriveTime,
				a.TourCode,a.TotalPeople,
				a.TourId,
				a.CreateTime,
				a.State,
				a.Tax,
				a.CommonTourFee,
				a.CheckTime, 
				a.PeerId,
				a.TourTypeId,
				IF(pcr.PayOrCost=1,SUM(pcr.Sum),0)AS pay,
				IF(pcr.PayOrCost=2,SUM(pcr.Sum),0)AS cost  
			FROM(
				SELECT 
					o.OrderId,
					o.OrderNo,
					o.UserName,
					ot.ScheduleOfArriveTime,
					o.TourCode,o.TotalPeople,
					o.TourId,
					o.CreateTime,
					o.State,
					o.Tax,
					o.CommonTourFee,
					o.PeerId,
					o.CheckTime,
					o.TourTypeId
				FROM 
					orders o,
					orders_total tot,
					dept d,
					optionalexcursion ox,
					receivable_info_of_order ro,
					t_order_receive_item tm,
					tour_info_for_order ot 
					<if test="record.role=='Region'">
						region_dept_rel rd,
					</if>
					<if test="record.role=='Group'">
						admin_group ag,
					</if>
				<where> 
					AND o.OrderId=ot.OrderId
					AND o.OrderId= ro.OrderId
					and ro.ReceivableInfoOfOrderId=tm.ReceivableInfoOfOrderId
					AND tm.OptionalId=ox.Id
					AND d.DeptId=o.DeptId
					<!-- AND o.State!=5 
					AND o.State!=6 -->
					<if test="record.role=='Region'">
						AND rd.DeptId=d.DeptId
					</if>
					<if test="record.role=='Group'">
						AND o.UserId=ag.AdminId
					</if>
					AND tot.OrdersTotalId=o.OrdersTotalId
					<if test="record.groupId!=null">
						AND ag.groupId=#{record.groupId}
					</if>
					<if test="record.contact!=null">
						AND rd.RegionId=#{record.contact}
					</if>
					<if test="record.userId!=null">
						AND o.UserId=#{record.userId}
					</if>
					<if test="record.userName!=null">
						AND o.userName=#{record.userName}
					</if>
					<if test="record.time!=null">
						AND DATE_FORMAT(ot.ScheduleOfArriveTime,'%Y-%m')=#{record.time}
					</if>
					<if test="record.year!=null">
						AND DATE_FORMAT(ot.ScheduleOfArriveTime,'%Y')=#{record.departureDate}
					</if>
					<if test="record.deptId!=null">
						AND o.DeptId=#{record.deptId}
					</if>
					<if test="record.isSelfOrganize!=null"> 
						AND o.IsSelfOrganize=#{record.isSelfOrganize}
					</if> 
					<if test="record.wr!=null"> 
						AND tot.wr=#{record.wr}
					</if> 
					<if test="record.optionalId!=null"> 
						AND ox.Id=#{record.optionalId}
					</if> 
					<if test="record.brand!=null"> 
						AND o.Brand=#{record.brand}
					</if> 
				</where> 
						
				)a LEFT JOIN pay_cost_records pcr 
				ON a.OrderId=pcr.OrderId 
				GROUP BY a.OrderId,pcr.PayOrCost
			)x GROUP BY x.OrderId ORDER BY x.TourId,x.ScheduleOfArriveTime
	</sql>
	<select id="detailsOptionalPrintForArrival" resultMap="ResultDeptForOrderMap"
		parameterType="com.chinatour.entity.Order">
		<include refid="ArrivalDetailsByOptionalsql" />
	</select>
</mapper>